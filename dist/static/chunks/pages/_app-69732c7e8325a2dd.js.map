{"version":3,"file":"static/chunks/pages/_app-69732c7e8325a2dd.js","mappings":"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","sources":["webpack://_N_E/./node_modules/.pnpm/error-stack-parser@2.1.4/node_modules/error-stack-parser/error-stack-parser.js","webpack://_N_E/?05bf","webpack://_N_E/./pages/_app.tsx","webpack://_N_E/./vendors/openReplay/context.ts","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/common/messages.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/utils.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/app/nodes.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/app/guards.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/app/observer/observer.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/app/observer/iframe_observer.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/app/observer/shadow_root_observer.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/app/observer/top_observer.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/app/sanitizer.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/app/ticker.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/app/logger.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/app/session.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/modules/performance.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/app/index.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/modules/connection.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/modules/console.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/modules/exception.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/modules/img.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/modules/input.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/modules/mouse.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/modules/timing.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/modules/scroll.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/modules/viewport.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/modules/cssrules.js","webpack://_N_E/./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/index.js","webpack://_N_E/./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/rng.js","webpack://_N_E/./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/regex.js","webpack://_N_E/./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/validate.js","webpack://_N_E/./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/stringify.js","webpack://_N_E/./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v4.js","webpack://_N_E/./vendors/openReplay/reducer.ts","webpack://_N_E/./vendors/openReplay/provider.tsx","webpack://_N_E/./vendors/openReplay/index.ts","webpack://_N_E/./vendors/index.ts","webpack://_N_E/./styles/globals.css","webpack://_N_E/./node_modules/.pnpm/stackframe@1.3.4/node_modules/stackframe/stackframe.js","webpack://_N_E/./node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_define_property.mjs","webpack://_N_E/./node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_object_spread.mjs","webpack://_N_E/./node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_object_spread_props.mjs","webpack://_N_E/<anon>"],"sourcesContent":["(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?::(\\d+))?(?::(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[()]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^()]*)|(,.*$)/g, '');\n                }\n                var sanitizedLine = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').replace(/^.*?\\s+/, '');\n\n                // capture and preseve the parenthesized location \"(/foo/my bar.js:12:87)\" in\n                // case it has spaces in it, as the string is split on \\s+ later on\n                var location = sanitizedLine.match(/ (\\(.+\\)$)/);\n\n                // remove the parenthesized location from the line, if it was matched\n                sanitizedLine = location ? sanitizedLine.replace(location[0], '') : sanitizedLine;\n\n                // if a location was matched, pass it to extractLocation() otherwise pass all sanitizedLine\n                // because this line doesn't have function name\n                var locationParts = this.extractLocation(location ? location[1] : sanitizedLine);\n                var functionName = location && sanitizedLine || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var functionNameRegex = /((.*\".+\"[^@]*)?[^@]*)(?:@)/;\n                    var matches = line.match(functionNameRegex);\n                    var functionName = matches && matches[1] ? matches[1] : undefined;\n                    var locationParts = this.extractLocation(line.replace(functionNameRegex, ''));\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                    .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                    .replace(/\\([^)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^(]+\\(([^)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return require(\"private-next-pages/_app.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  ","import \"../styles/globals.css\";\nimport type { AppProps } from \"next/app\";\n\nimport { TrackerProvider } from \"../vendors\";\nimport React from \"react\";\n\nfunction MyApp({ Component, pageProps }: AppProps) {\n  return (\n    <TrackerProvider\n      config={{\n        // Add projectKey here.\n        projectKey: \"IPQJ2ytBAXqwnwxtPmgh\",\n      }}\n    >\n      <Component {...pageProps} />\n    </TrackerProvider>\n  );\n}\n\nexport default MyApp;\n","// Libraries\nimport { App } from \"@openreplay/tracker\";\nimport { createContext } from \"react\";\nimport { IPayload, ReportError } from \"./reducer\";\n\ninterface ITrackerContext {\n  startTracking: () => void;\n  initTracker: () => void;\n  logEvent: (evnt: IPayload) => void;\n  logIssue: (evnt: IPayload) => void;\n  reportError: (error: ReportError) => void;\n}\n\nconst TrackerContext = createContext<ITrackerContext>({\n  startTracking: () => {},\n  initTracker: () => {},\n  logEvent: () => {},\n  logIssue: () => {},\n  reportError: () => {},\n});\n\nexport default TrackerContext;\n","function bindNew(Class) {\n    function _Class(...args) {\n        return new Class(...args);\n    }\n    _Class.prototype = Class.prototype;\n    return _Class;\n}\nexport const classes = new Map();\nclass _BatchMeta {\n    constructor(pageNo, firstIndex, timestamp) {\n        this.pageNo = pageNo;\n        this.firstIndex = firstIndex;\n        this.timestamp = timestamp;\n        this._id = 80;\n    }\n    encode(writer) {\n        return writer.uint(80) &&\n            writer.uint(this.pageNo) &&\n            writer.uint(this.firstIndex) &&\n            writer.int(this.timestamp);\n    }\n}\nexport const BatchMeta = bindNew(_BatchMeta);\nclasses.set(80, BatchMeta);\nclass _Timestamp {\n    constructor(timestamp) {\n        this.timestamp = timestamp;\n        this._id = 0;\n    }\n    encode(writer) {\n        return writer.uint(0) &&\n            writer.uint(this.timestamp);\n    }\n}\nexport const Timestamp = bindNew(_Timestamp);\nclasses.set(0, Timestamp);\nclass _SetPageLocation {\n    constructor(url, referrer, navigationStart) {\n        this.url = url;\n        this.referrer = referrer;\n        this.navigationStart = navigationStart;\n        this._id = 4;\n    }\n    encode(writer) {\n        return writer.uint(4) &&\n            writer.string(this.url) &&\n            writer.string(this.referrer) &&\n            writer.uint(this.navigationStart);\n    }\n}\nexport const SetPageLocation = bindNew(_SetPageLocation);\nclasses.set(4, SetPageLocation);\nclass _SetViewportSize {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        this._id = 5;\n    }\n    encode(writer) {\n        return writer.uint(5) &&\n            writer.uint(this.width) &&\n            writer.uint(this.height);\n    }\n}\nexport const SetViewportSize = bindNew(_SetViewportSize);\nclasses.set(5, SetViewportSize);\nclass _SetViewportScroll {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this._id = 6;\n    }\n    encode(writer) {\n        return writer.uint(6) &&\n            writer.int(this.x) &&\n            writer.int(this.y);\n    }\n}\nexport const SetViewportScroll = bindNew(_SetViewportScroll);\nclasses.set(6, SetViewportScroll);\nclass _CreateDocument {\n    constructor() {\n        this._id = 7;\n    }\n    encode(writer) {\n        return writer.uint(7);\n    }\n}\nexport const CreateDocument = bindNew(_CreateDocument);\nclasses.set(7, CreateDocument);\nclass _CreateElementNode {\n    constructor(id, parentID, index, tag, svg) {\n        this.id = id;\n        this.parentID = parentID;\n        this.index = index;\n        this.tag = tag;\n        this.svg = svg;\n        this._id = 8;\n    }\n    encode(writer) {\n        return writer.uint(8) &&\n            writer.uint(this.id) &&\n            writer.uint(this.parentID) &&\n            writer.uint(this.index) &&\n            writer.string(this.tag) &&\n            writer.boolean(this.svg);\n    }\n}\nexport const CreateElementNode = bindNew(_CreateElementNode);\nclasses.set(8, CreateElementNode);\nclass _CreateTextNode {\n    constructor(id, parentID, index) {\n        this.id = id;\n        this.parentID = parentID;\n        this.index = index;\n        this._id = 9;\n    }\n    encode(writer) {\n        return writer.uint(9) &&\n            writer.uint(this.id) &&\n            writer.uint(this.parentID) &&\n            writer.uint(this.index);\n    }\n}\nexport const CreateTextNode = bindNew(_CreateTextNode);\nclasses.set(9, CreateTextNode);\nclass _MoveNode {\n    constructor(id, parentID, index) {\n        this.id = id;\n        this.parentID = parentID;\n        this.index = index;\n        this._id = 10;\n    }\n    encode(writer) {\n        return writer.uint(10) &&\n            writer.uint(this.id) &&\n            writer.uint(this.parentID) &&\n            writer.uint(this.index);\n    }\n}\nexport const MoveNode = bindNew(_MoveNode);\nclasses.set(10, MoveNode);\nclass _RemoveNode {\n    constructor(id) {\n        this.id = id;\n        this._id = 11;\n    }\n    encode(writer) {\n        return writer.uint(11) &&\n            writer.uint(this.id);\n    }\n}\nexport const RemoveNode = bindNew(_RemoveNode);\nclasses.set(11, RemoveNode);\nclass _SetNodeAttribute {\n    constructor(id, name, value) {\n        this.id = id;\n        this.name = name;\n        this.value = value;\n        this._id = 12;\n    }\n    encode(writer) {\n        return writer.uint(12) &&\n            writer.uint(this.id) &&\n            writer.string(this.name) &&\n            writer.string(this.value);\n    }\n}\nexport const SetNodeAttribute = bindNew(_SetNodeAttribute);\nclasses.set(12, SetNodeAttribute);\nclass _RemoveNodeAttribute {\n    constructor(id, name) {\n        this.id = id;\n        this.name = name;\n        this._id = 13;\n    }\n    encode(writer) {\n        return writer.uint(13) &&\n            writer.uint(this.id) &&\n            writer.string(this.name);\n    }\n}\nexport const RemoveNodeAttribute = bindNew(_RemoveNodeAttribute);\nclasses.set(13, RemoveNodeAttribute);\nclass _SetNodeData {\n    constructor(id, data) {\n        this.id = id;\n        this.data = data;\n        this._id = 14;\n    }\n    encode(writer) {\n        return writer.uint(14) &&\n            writer.uint(this.id) &&\n            writer.string(this.data);\n    }\n}\nexport const SetNodeData = bindNew(_SetNodeData);\nclasses.set(14, SetNodeData);\nclass _SetNodeScroll {\n    constructor(id, x, y) {\n        this.id = id;\n        this.x = x;\n        this.y = y;\n        this._id = 16;\n    }\n    encode(writer) {\n        return writer.uint(16) &&\n            writer.uint(this.id) &&\n            writer.int(this.x) &&\n            writer.int(this.y);\n    }\n}\nexport const SetNodeScroll = bindNew(_SetNodeScroll);\nclasses.set(16, SetNodeScroll);\nclass _SetInputTarget {\n    constructor(id, label) {\n        this.id = id;\n        this.label = label;\n        this._id = 17;\n    }\n    encode(writer) {\n        return writer.uint(17) &&\n            writer.uint(this.id) &&\n            writer.string(this.label);\n    }\n}\nexport const SetInputTarget = bindNew(_SetInputTarget);\nclasses.set(17, SetInputTarget);\nclass _SetInputValue {\n    constructor(id, value, mask) {\n        this.id = id;\n        this.value = value;\n        this.mask = mask;\n        this._id = 18;\n    }\n    encode(writer) {\n        return writer.uint(18) &&\n            writer.uint(this.id) &&\n            writer.string(this.value) &&\n            writer.int(this.mask);\n    }\n}\nexport const SetInputValue = bindNew(_SetInputValue);\nclasses.set(18, SetInputValue);\nclass _SetInputChecked {\n    constructor(id, checked) {\n        this.id = id;\n        this.checked = checked;\n        this._id = 19;\n    }\n    encode(writer) {\n        return writer.uint(19) &&\n            writer.uint(this.id) &&\n            writer.boolean(this.checked);\n    }\n}\nexport const SetInputChecked = bindNew(_SetInputChecked);\nclasses.set(19, SetInputChecked);\nclass _MouseMove {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this._id = 20;\n    }\n    encode(writer) {\n        return writer.uint(20) &&\n            writer.uint(this.x) &&\n            writer.uint(this.y);\n    }\n}\nexport const MouseMove = bindNew(_MouseMove);\nclasses.set(20, MouseMove);\nclass _ConsoleLog {\n    constructor(level, value) {\n        this.level = level;\n        this.value = value;\n        this._id = 22;\n    }\n    encode(writer) {\n        return writer.uint(22) &&\n            writer.string(this.level) &&\n            writer.string(this.value);\n    }\n}\nexport const ConsoleLog = bindNew(_ConsoleLog);\nclasses.set(22, ConsoleLog);\nclass _PageLoadTiming {\n    constructor(requestStart, responseStart, responseEnd, domContentLoadedEventStart, domContentLoadedEventEnd, loadEventStart, loadEventEnd, firstPaint, firstContentfulPaint) {\n        this.requestStart = requestStart;\n        this.responseStart = responseStart;\n        this.responseEnd = responseEnd;\n        this.domContentLoadedEventStart = domContentLoadedEventStart;\n        this.domContentLoadedEventEnd = domContentLoadedEventEnd;\n        this.loadEventStart = loadEventStart;\n        this.loadEventEnd = loadEventEnd;\n        this.firstPaint = firstPaint;\n        this.firstContentfulPaint = firstContentfulPaint;\n        this._id = 23;\n    }\n    encode(writer) {\n        return writer.uint(23) &&\n            writer.uint(this.requestStart) &&\n            writer.uint(this.responseStart) &&\n            writer.uint(this.responseEnd) &&\n            writer.uint(this.domContentLoadedEventStart) &&\n            writer.uint(this.domContentLoadedEventEnd) &&\n            writer.uint(this.loadEventStart) &&\n            writer.uint(this.loadEventEnd) &&\n            writer.uint(this.firstPaint) &&\n            writer.uint(this.firstContentfulPaint);\n    }\n}\nexport const PageLoadTiming = bindNew(_PageLoadTiming);\nclasses.set(23, PageLoadTiming);\nclass _PageRenderTiming {\n    constructor(speedIndex, visuallyComplete, timeToInteractive) {\n        this.speedIndex = speedIndex;\n        this.visuallyComplete = visuallyComplete;\n        this.timeToInteractive = timeToInteractive;\n        this._id = 24;\n    }\n    encode(writer) {\n        return writer.uint(24) &&\n            writer.uint(this.speedIndex) &&\n            writer.uint(this.visuallyComplete) &&\n            writer.uint(this.timeToInteractive);\n    }\n}\nexport const PageRenderTiming = bindNew(_PageRenderTiming);\nclasses.set(24, PageRenderTiming);\nclass _JSException {\n    constructor(name, message, payload) {\n        this.name = name;\n        this.message = message;\n        this.payload = payload;\n        this._id = 25;\n    }\n    encode(writer) {\n        return writer.uint(25) &&\n            writer.string(this.name) &&\n            writer.string(this.message) &&\n            writer.string(this.payload);\n    }\n}\nexport const JSException = bindNew(_JSException);\nclasses.set(25, JSException);\nclass _RawCustomEvent {\n    constructor(name, payload) {\n        this.name = name;\n        this.payload = payload;\n        this._id = 27;\n    }\n    encode(writer) {\n        return writer.uint(27) &&\n            writer.string(this.name) &&\n            writer.string(this.payload);\n    }\n}\nexport const RawCustomEvent = bindNew(_RawCustomEvent);\nclasses.set(27, RawCustomEvent);\nclass _UserID {\n    constructor(id) {\n        this.id = id;\n        this._id = 28;\n    }\n    encode(writer) {\n        return writer.uint(28) &&\n            writer.string(this.id);\n    }\n}\nexport const UserID = bindNew(_UserID);\nclasses.set(28, UserID);\nclass _UserAnonymousID {\n    constructor(id) {\n        this.id = id;\n        this._id = 29;\n    }\n    encode(writer) {\n        return writer.uint(29) &&\n            writer.string(this.id);\n    }\n}\nexport const UserAnonymousID = bindNew(_UserAnonymousID);\nclasses.set(29, UserAnonymousID);\nclass _Metadata {\n    constructor(key, value) {\n        this.key = key;\n        this.value = value;\n        this._id = 30;\n    }\n    encode(writer) {\n        return writer.uint(30) &&\n            writer.string(this.key) &&\n            writer.string(this.value);\n    }\n}\nexport const Metadata = bindNew(_Metadata);\nclasses.set(30, Metadata);\nclass _CSSInsertRule {\n    constructor(id, rule, index) {\n        this.id = id;\n        this.rule = rule;\n        this.index = index;\n        this._id = 37;\n    }\n    encode(writer) {\n        return writer.uint(37) &&\n            writer.uint(this.id) &&\n            writer.string(this.rule) &&\n            writer.uint(this.index);\n    }\n}\nexport const CSSInsertRule = bindNew(_CSSInsertRule);\nclasses.set(37, CSSInsertRule);\nclass _CSSDeleteRule {\n    constructor(id, index) {\n        this.id = id;\n        this.index = index;\n        this._id = 38;\n    }\n    encode(writer) {\n        return writer.uint(38) &&\n            writer.uint(this.id) &&\n            writer.uint(this.index);\n    }\n}\nexport const CSSDeleteRule = bindNew(_CSSDeleteRule);\nclasses.set(38, CSSDeleteRule);\nclass _Fetch {\n    constructor(method, url, request, response, status, timestamp, duration) {\n        this.method = method;\n        this.url = url;\n        this.request = request;\n        this.response = response;\n        this.status = status;\n        this.timestamp = timestamp;\n        this.duration = duration;\n        this._id = 39;\n    }\n    encode(writer) {\n        return writer.uint(39) &&\n            writer.string(this.method) &&\n            writer.string(this.url) &&\n            writer.string(this.request) &&\n            writer.string(this.response) &&\n            writer.uint(this.status) &&\n            writer.uint(this.timestamp) &&\n            writer.uint(this.duration);\n    }\n}\nexport const Fetch = bindNew(_Fetch);\nclasses.set(39, Fetch);\nclass _Profiler {\n    constructor(name, duration, args, result) {\n        this.name = name;\n        this.duration = duration;\n        this.args = args;\n        this.result = result;\n        this._id = 40;\n    }\n    encode(writer) {\n        return writer.uint(40) &&\n            writer.string(this.name) &&\n            writer.uint(this.duration) &&\n            writer.string(this.args) &&\n            writer.string(this.result);\n    }\n}\nexport const Profiler = bindNew(_Profiler);\nclasses.set(40, Profiler);\nclass _OTable {\n    constructor(key, value) {\n        this.key = key;\n        this.value = value;\n        this._id = 41;\n    }\n    encode(writer) {\n        return writer.uint(41) &&\n            writer.string(this.key) &&\n            writer.string(this.value);\n    }\n}\nexport const OTable = bindNew(_OTable);\nclasses.set(41, OTable);\nclass _StateAction {\n    constructor(type) {\n        this.type = type;\n        this._id = 42;\n    }\n    encode(writer) {\n        return writer.uint(42) &&\n            writer.string(this.type);\n    }\n}\nexport const StateAction = bindNew(_StateAction);\nclasses.set(42, StateAction);\nclass _Redux {\n    constructor(action, state, duration) {\n        this.action = action;\n        this.state = state;\n        this.duration = duration;\n        this._id = 44;\n    }\n    encode(writer) {\n        return writer.uint(44) &&\n            writer.string(this.action) &&\n            writer.string(this.state) &&\n            writer.uint(this.duration);\n    }\n}\nexport const Redux = bindNew(_Redux);\nclasses.set(44, Redux);\nclass _Vuex {\n    constructor(mutation, state) {\n        this.mutation = mutation;\n        this.state = state;\n        this._id = 45;\n    }\n    encode(writer) {\n        return writer.uint(45) &&\n            writer.string(this.mutation) &&\n            writer.string(this.state);\n    }\n}\nexport const Vuex = bindNew(_Vuex);\nclasses.set(45, Vuex);\nclass _MobX {\n    constructor(type, payload) {\n        this.type = type;\n        this.payload = payload;\n        this._id = 46;\n    }\n    encode(writer) {\n        return writer.uint(46) &&\n            writer.string(this.type) &&\n            writer.string(this.payload);\n    }\n}\nexport const MobX = bindNew(_MobX);\nclasses.set(46, MobX);\nclass _NgRx {\n    constructor(action, state, duration) {\n        this.action = action;\n        this.state = state;\n        this.duration = duration;\n        this._id = 47;\n    }\n    encode(writer) {\n        return writer.uint(47) &&\n            writer.string(this.action) &&\n            writer.string(this.state) &&\n            writer.uint(this.duration);\n    }\n}\nexport const NgRx = bindNew(_NgRx);\nclasses.set(47, NgRx);\nclass _GraphQL {\n    constructor(operationKind, operationName, variables, response) {\n        this.operationKind = operationKind;\n        this.operationName = operationName;\n        this.variables = variables;\n        this.response = response;\n        this._id = 48;\n    }\n    encode(writer) {\n        return writer.uint(48) &&\n            writer.string(this.operationKind) &&\n            writer.string(this.operationName) &&\n            writer.string(this.variables) &&\n            writer.string(this.response);\n    }\n}\nexport const GraphQL = bindNew(_GraphQL);\nclasses.set(48, GraphQL);\nclass _PerformanceTrack {\n    constructor(frames, ticks, totalJSHeapSize, usedJSHeapSize) {\n        this.frames = frames;\n        this.ticks = ticks;\n        this.totalJSHeapSize = totalJSHeapSize;\n        this.usedJSHeapSize = usedJSHeapSize;\n        this._id = 49;\n    }\n    encode(writer) {\n        return writer.uint(49) &&\n            writer.int(this.frames) &&\n            writer.int(this.ticks) &&\n            writer.uint(this.totalJSHeapSize) &&\n            writer.uint(this.usedJSHeapSize);\n    }\n}\nexport const PerformanceTrack = bindNew(_PerformanceTrack);\nclasses.set(49, PerformanceTrack);\nclass _ResourceTiming {\n    constructor(timestamp, duration, ttfb, headerSize, encodedBodySize, decodedBodySize, url, initiator) {\n        this.timestamp = timestamp;\n        this.duration = duration;\n        this.ttfb = ttfb;\n        this.headerSize = headerSize;\n        this.encodedBodySize = encodedBodySize;\n        this.decodedBodySize = decodedBodySize;\n        this.url = url;\n        this.initiator = initiator;\n        this._id = 53;\n    }\n    encode(writer) {\n        return writer.uint(53) &&\n            writer.uint(this.timestamp) &&\n            writer.uint(this.duration) &&\n            writer.uint(this.ttfb) &&\n            writer.uint(this.headerSize) &&\n            writer.uint(this.encodedBodySize) &&\n            writer.uint(this.decodedBodySize) &&\n            writer.string(this.url) &&\n            writer.string(this.initiator);\n    }\n}\nexport const ResourceTiming = bindNew(_ResourceTiming);\nclasses.set(53, ResourceTiming);\nclass _ConnectionInformation {\n    constructor(downlink, type) {\n        this.downlink = downlink;\n        this.type = type;\n        this._id = 54;\n    }\n    encode(writer) {\n        return writer.uint(54) &&\n            writer.uint(this.downlink) &&\n            writer.string(this.type);\n    }\n}\nexport const ConnectionInformation = bindNew(_ConnectionInformation);\nclasses.set(54, ConnectionInformation);\nclass _SetPageVisibility {\n    constructor(hidden) {\n        this.hidden = hidden;\n        this._id = 55;\n    }\n    encode(writer) {\n        return writer.uint(55) &&\n            writer.boolean(this.hidden);\n    }\n}\nexport const SetPageVisibility = bindNew(_SetPageVisibility);\nclasses.set(55, SetPageVisibility);\nclass _LongTask {\n    constructor(timestamp, duration, context, containerType, containerSrc, containerId, containerName) {\n        this.timestamp = timestamp;\n        this.duration = duration;\n        this.context = context;\n        this.containerType = containerType;\n        this.containerSrc = containerSrc;\n        this.containerId = containerId;\n        this.containerName = containerName;\n        this._id = 59;\n    }\n    encode(writer) {\n        return writer.uint(59) &&\n            writer.uint(this.timestamp) &&\n            writer.uint(this.duration) &&\n            writer.uint(this.context) &&\n            writer.uint(this.containerType) &&\n            writer.string(this.containerSrc) &&\n            writer.string(this.containerId) &&\n            writer.string(this.containerName);\n    }\n}\nexport const LongTask = bindNew(_LongTask);\nclasses.set(59, LongTask);\nclass _SetNodeAttributeURLBased {\n    constructor(id, name, value, baseURL) {\n        this.id = id;\n        this.name = name;\n        this.value = value;\n        this.baseURL = baseURL;\n        this._id = 60;\n    }\n    encode(writer) {\n        return writer.uint(60) &&\n            writer.uint(this.id) &&\n            writer.string(this.name) &&\n            writer.string(this.value) &&\n            writer.string(this.baseURL);\n    }\n}\nexport const SetNodeAttributeURLBased = bindNew(_SetNodeAttributeURLBased);\nclasses.set(60, SetNodeAttributeURLBased);\nclass _SetCSSDataURLBased {\n    constructor(id, data, baseURL) {\n        this.id = id;\n        this.data = data;\n        this.baseURL = baseURL;\n        this._id = 61;\n    }\n    encode(writer) {\n        return writer.uint(61) &&\n            writer.uint(this.id) &&\n            writer.string(this.data) &&\n            writer.string(this.baseURL);\n    }\n}\nexport const SetCSSDataURLBased = bindNew(_SetCSSDataURLBased);\nclasses.set(61, SetCSSDataURLBased);\nclass _TechnicalInfo {\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n        this._id = 63;\n    }\n    encode(writer) {\n        return writer.uint(63) &&\n            writer.string(this.type) &&\n            writer.string(this.value);\n    }\n}\nexport const TechnicalInfo = bindNew(_TechnicalInfo);\nclasses.set(63, TechnicalInfo);\nclass _CustomIssue {\n    constructor(name, payload) {\n        this.name = name;\n        this.payload = payload;\n        this._id = 64;\n    }\n    encode(writer) {\n        return writer.uint(64) &&\n            writer.string(this.name) &&\n            writer.string(this.payload);\n    }\n}\nexport const CustomIssue = bindNew(_CustomIssue);\nclasses.set(64, CustomIssue);\nclass _PageClose {\n    constructor() {\n        this._id = 65;\n    }\n    encode(writer) {\n        return writer.uint(65);\n    }\n}\nexport const PageClose = bindNew(_PageClose);\nclasses.set(65, PageClose);\nclass _CSSInsertRuleURLBased {\n    constructor(id, rule, index, baseURL) {\n        this.id = id;\n        this.rule = rule;\n        this.index = index;\n        this.baseURL = baseURL;\n        this._id = 67;\n    }\n    encode(writer) {\n        return writer.uint(67) &&\n            writer.uint(this.id) &&\n            writer.string(this.rule) &&\n            writer.uint(this.index) &&\n            writer.string(this.baseURL);\n    }\n}\nexport const CSSInsertRuleURLBased = bindNew(_CSSInsertRuleURLBased);\nclasses.set(67, CSSInsertRuleURLBased);\nclass _MouseClick {\n    constructor(id, hesitationTime, label, selector) {\n        this.id = id;\n        this.hesitationTime = hesitationTime;\n        this.label = label;\n        this.selector = selector;\n        this._id = 69;\n    }\n    encode(writer) {\n        return writer.uint(69) &&\n            writer.uint(this.id) &&\n            writer.uint(this.hesitationTime) &&\n            writer.string(this.label) &&\n            writer.string(this.selector);\n    }\n}\nexport const MouseClick = bindNew(_MouseClick);\nclasses.set(69, MouseClick);\nclass _CreateIFrameDocument {\n    constructor(frameID, id) {\n        this.frameID = frameID;\n        this.id = id;\n        this._id = 70;\n    }\n    encode(writer) {\n        return writer.uint(70) &&\n            writer.uint(this.frameID) &&\n            writer.uint(this.id);\n    }\n}\nexport const CreateIFrameDocument = bindNew(_CreateIFrameDocument);\nclasses.set(70, CreateIFrameDocument);\n","export function timestamp() {\n    return Math.round(performance.now()) + performance.timing.navigationStart;\n}\nexport const stars = 'repeat' in String.prototype\n    ? (str) => '*'.repeat(str.length)\n    : (str) => str.replace(/./g, '*');\nexport function normSpaces(str) {\n    return str.trim().replace(/\\s+/g, ' ');\n}\n// isAbsoluteUrl regexp:  /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url)\nexport function isURL(s) {\n    return s.startsWith('https://') || s.startsWith('http://');\n}\nexport const IN_BROWSER = !(typeof window === \"undefined\");\n// TODO: JOIN IT WITH LOGGER somehow (use logging decorators?); Don't forget about index.js loggin when there is no logger instance.\nexport const DOCS_HOST = 'https://docs.openreplay.com';\nconst warnedFeatures = {};\nexport function deprecationWarn(nameOfFeature, useInstead, docsPath = \"/\") {\n    if (warnedFeatures[nameOfFeature]) {\n        return;\n    }\n    console.warn(`OpenReplay: ${nameOfFeature} is deprecated. ${useInstead ? `Please, use ${useInstead} instead.` : \"\"} Visit ${DOCS_HOST}${docsPath} for more information.`);\n    warnedFeatures[nameOfFeature] = true;\n}\nexport function getLabelAttribute(e) {\n    let value = e.getAttribute(\"data-openreplay-label\");\n    if (value !== null) {\n        return value;\n    }\n    value = e.getAttribute(\"data-asayer-label\");\n    if (value !== null) {\n        deprecationWarn(`\"data-asayer-label\" attribute`, `\"data-openreplay-label\" attribute`, \"/\");\n    }\n    return value;\n}\nexport function hasOpenreplayAttribute(e, name) {\n    const newName = `data-openreplay-${name}`;\n    if (e.hasAttribute(newName)) {\n        return true;\n    }\n    const oldName = `data-asayer-${name}`;\n    if (e.hasAttribute(oldName)) {\n        deprecationWarn(`\"${oldName}\" attribute`, `\"${newName}\" attribute`, \"/installation/sanitize-data\");\n        return true;\n    }\n    return false;\n}\n","export default class Nodes {\n    constructor(node_id) {\n        this.node_id = node_id;\n        this.nodes = [];\n        this.nodeCallbacks = [];\n        this.elementListeners = new Map();\n    }\n    attachNodeCallback(nodeCallback) {\n        this.nodeCallbacks.push(nodeCallback);\n    }\n    attachElementListener(type, node, elementListener) {\n        const id = this.getID(node);\n        if (id === undefined) {\n            return;\n        }\n        node.addEventListener(type, elementListener);\n        let listeners = this.elementListeners.get(id);\n        if (listeners === undefined) {\n            listeners = [];\n            this.elementListeners.set(id, listeners);\n            return;\n        }\n        listeners.push([type, elementListener]);\n    }\n    registerNode(node) {\n        let id = node[this.node_id];\n        const isNew = id === undefined;\n        if (isNew) {\n            id = this.nodes.length;\n            this.nodes[id] = node;\n            node[this.node_id] = id;\n        }\n        return [id, isNew];\n    }\n    unregisterNode(node) {\n        const id = node[this.node_id];\n        if (id !== undefined) {\n            delete node[this.node_id];\n            delete this.nodes[id];\n            const listeners = this.elementListeners.get(id);\n            if (listeners !== undefined) {\n                this.elementListeners.delete(id);\n                listeners.forEach((listener) => node.removeEventListener(listener[0], listener[1]));\n            }\n        }\n        return id;\n    }\n    cleanTree() {\n        // sadly we keep empty items in array here resulting in some memory still being used\n        // but its still better than keeping dead nodes or undef elements\n        // plus we keep our index positions for new/alive nodes\n        // performance test: 3ms for 30k nodes with 17k dead ones\n        for (let i = 0; i < this.nodes.length; i++) {\n            const node = this.nodes[i];\n            if (node && !document.contains(node)) {\n                this.unregisterNode(node);\n            }\n        }\n    }\n    callNodeCallbacks(node, isStart) {\n        this.nodeCallbacks.forEach((cb) => cb(node, isStart));\n    }\n    getID(node) {\n        return node[this.node_id];\n    }\n    getNode(id) {\n        return this.nodes[id];\n    }\n    clear() {\n        for (let id = 0; id < this.nodes.length; id++) {\n            const node = this.nodes[id];\n            if (node === undefined) {\n                continue;\n            }\n            this.unregisterNode(node);\n        }\n        this.nodes.length = 0;\n    }\n}\n","export function isSVGElement(node) {\n    return node.namespaceURI === 'http://www.w3.org/2000/svg';\n}\nexport function isElementNode(node) {\n    return node.nodeType === Node.ELEMENT_NODE;\n}\nexport function isTextNode(node) {\n    return node.nodeType === Node.TEXT_NODE;\n}\nexport function isRootNode(node) {\n    return node.nodeType === Node.DOCUMENT_NODE ||\n        node.nodeType === Node.DOCUMENT_FRAGMENT_NODE;\n}\nexport function hasTag(el, tagName) {\n    return el.nodeName === tagName;\n}\n","import { RemoveNodeAttribute, SetNodeAttribute, SetNodeAttributeURLBased, SetCSSDataURLBased, SetNodeData, CreateTextNode, CreateElementNode, MoveNode, RemoveNode, } from \"../../common/messages.js\";\nimport { isRootNode, isTextNode, isElementNode, isSVGElement, hasTag, } from \"../guards.js\";\nfunction isIgnored(node) {\n    if (isTextNode(node)) {\n        return false;\n    }\n    if (!isElementNode(node)) {\n        return true;\n    }\n    const tag = node.tagName.toUpperCase();\n    if (tag === 'LINK') {\n        const rel = node.getAttribute('rel');\n        const as = node.getAttribute('as');\n        return !((rel === null || rel === void 0 ? void 0 : rel.includes('stylesheet')) || as === \"style\" || as === \"font\");\n    }\n    return (tag === 'SCRIPT' ||\n        tag === 'NOSCRIPT' ||\n        tag === 'META' ||\n        tag === 'TITLE' ||\n        tag === 'BASE');\n}\nfunction isObservable(node) {\n    if (isRootNode(node)) {\n        return true;\n    }\n    return !isIgnored(node);\n}\n/*\n  TODO:\n    - fix unbinding logic + send all removals first (ensure sequence is correct)\n    - use document as a 0-node in the upper context (should be updated in player at first)\n*/\n/*\n  Nikita:\n    - rn we only send unbind event for parent (all child nodes will be cut in the live replay anyways)\n      to prevent sending 1k+ unbinds for child nodes and making replay file bigger than it should be\n*/\nvar RecentsType;\n(function (RecentsType) {\n    RecentsType[RecentsType[\"New\"] = 0] = \"New\";\n    RecentsType[RecentsType[\"Removed\"] = 1] = \"Removed\";\n    RecentsType[RecentsType[\"Changed\"] = 2] = \"Changed\";\n    RecentsType[RecentsType[\"RemovedChild\"] = 3] = \"RemovedChild\";\n})(RecentsType || (RecentsType = {}));\nexport default class Observer {\n    constructor(app, isTopContext = false) {\n        this.app = app;\n        this.isTopContext = isTopContext;\n        this.commited = [];\n        this.recents = new Map();\n        this.indexes = [];\n        this.attributesMap = new Map();\n        this.textSet = new Set();\n        this.observer = new MutationObserver(this.app.safe((mutations) => {\n            for (const mutation of mutations) { // mutations order is sequential\n                const target = mutation.target;\n                const type = mutation.type;\n                if (!isObservable(target)) {\n                    continue;\n                }\n                if (type === 'childList') {\n                    for (let i = 0; i < mutation.removedNodes.length; i++) {\n                        this.bindTree(mutation.removedNodes[i], true);\n                    }\n                    for (let i = 0; i < mutation.addedNodes.length; i++) {\n                        this.bindTree(mutation.addedNodes[i]);\n                    }\n                    continue;\n                }\n                const id = this.app.nodes.getID(target);\n                if (id === undefined) {\n                    continue;\n                }\n                if (!this.recents.has(id)) {\n                    this.recents.set(id, RecentsType.Changed); // TODO only when altered\n                }\n                if (type === 'attributes') {\n                    const name = mutation.attributeName;\n                    if (name === null) {\n                        continue;\n                    }\n                    let attr = this.attributesMap.get(id);\n                    if (attr === undefined) {\n                        this.attributesMap.set(id, attr = new Set());\n                    }\n                    attr.add(name);\n                    continue;\n                }\n                if (type === 'characterData') {\n                    this.textSet.add(id);\n                    continue;\n                }\n            }\n            this.commitNodes();\n        }));\n    }\n    clear() {\n        this.commited.length = 0;\n        this.recents.clear();\n        this.indexes.length = 1;\n        this.attributesMap.clear();\n        this.textSet.clear();\n    }\n    sendNodeAttribute(id, node, name, value) {\n        if (isSVGElement(node)) {\n            if (name.substr(0, 6) === 'xlink:') {\n                name = name.substr(6);\n            }\n            if (value === null) {\n                this.app.send(new RemoveNodeAttribute(id, name));\n            }\n            else if (name === 'href') {\n                if (value.length > 1e5) {\n                    value = '';\n                }\n                this.app.send(new SetNodeAttributeURLBased(id, name, value, this.app.getBaseHref()));\n            }\n            else {\n                this.app.send(new SetNodeAttribute(id, name, value));\n            }\n            return;\n        }\n        if (name === 'src' ||\n            name === 'srcset' ||\n            name === 'integrity' ||\n            name === 'crossorigin' ||\n            name === 'autocomplete' ||\n            name.substr(0, 2) === 'on') {\n            return;\n        }\n        if (name === 'value' &&\n            hasTag(node, \"INPUT\") &&\n            node.type !== 'button' &&\n            node.type !== 'reset' &&\n            node.type !== 'submit') {\n            return;\n        }\n        if (value === null) {\n            this.app.send(new RemoveNodeAttribute(id, name));\n            return;\n        }\n        if (name === 'style' || name === 'href' && hasTag(node, \"LINK\")) {\n            this.app.send(new SetNodeAttributeURLBased(id, name, value, this.app.getBaseHref()));\n            return;\n        }\n        if (name === 'href' || value.length > 1e5) {\n            value = '';\n        }\n        this.app.send(new SetNodeAttribute(id, name, value));\n    }\n    sendNodeData(id, parentElement, data) {\n        if (hasTag(parentElement, \"STYLE\") || hasTag(parentElement, \"style\")) {\n            this.app.send(new SetCSSDataURLBased(id, data, this.app.getBaseHref()));\n            return;\n        }\n        data = this.app.sanitizer.sanitize(id, data);\n        this.app.send(new SetNodeData(id, data));\n    }\n    bindNode(node) {\n        const [id, isNew] = this.app.nodes.registerNode(node);\n        if (isNew) {\n            this.recents.set(id, RecentsType.New);\n        }\n        else if (this.recents.get(id) !== RecentsType.New) { // can we do just `else` here?\n            this.recents.set(id, RecentsType.Removed);\n        }\n    }\n    unbindChildNode(node) {\n        const [id] = this.app.nodes.registerNode(node);\n        this.recents.set(id, RecentsType.RemovedChild);\n    }\n    bindTree(node, isChildUnbinding = false) {\n        if (!isObservable(node)) {\n            return;\n        }\n        this.bindNode(node);\n        const walker = document.createTreeWalker(node, NodeFilter.SHOW_ELEMENT + NodeFilter.SHOW_TEXT, {\n            acceptNode: (node) => isIgnored(node)\n                || (this.app.nodes.getID(node) !== undefined && !isChildUnbinding)\n                ? NodeFilter.FILTER_REJECT\n                : NodeFilter.FILTER_ACCEPT,\n        }, \n        // @ts-ignore\n        false);\n        while (walker.nextNode()) {\n            if (isChildUnbinding) {\n                this.unbindChildNode(walker.currentNode);\n            }\n            else {\n                this.bindNode(walker.currentNode);\n            }\n        }\n    }\n    unbindNode(node) {\n        const id = this.app.nodes.unregisterNode(node);\n        if (id !== undefined && this.recents.get(id) === RecentsType.Removed) {\n            this.app.send(new RemoveNode(id));\n        }\n    }\n    // A top-consumption function on the infinite lists test. (~1% of performance resources)\n    _commitNode(id, node) {\n        if (isRootNode(node)) {\n            return true;\n        }\n        const parent = node.parentNode;\n        let parentID;\n        // Disable parent check for the upper context HTMLHtmlElement, because it is root there... (before)\n        // TODO: get rid of \"special\" cases (there is an issue with CreateDocument altered behaviour though)\n        // TODO: Clean the logic (though now it workd fine)\n        if (!hasTag(node, \"HTML\") || !this.isTopContext) {\n            if (parent === null) {\n                // Sometimes one observation contains attribute mutations for the removimg node, which gets ignored here.\n                // That shouldn't affect the visual rendering ( should it? )\n                this.unbindNode(node);\n                return false;\n            }\n            parentID = this.app.nodes.getID(parent);\n            if (parentID === undefined) {\n                this.unbindNode(node);\n                return false;\n            }\n            if (!this.commitNode(parentID)) {\n                this.unbindNode(node);\n                return false;\n            }\n            this.app.sanitizer.handleNode(id, parentID, node);\n            if (this.app.sanitizer.isMaskedContainer(parentID)) {\n                return false;\n            }\n        }\n        // From here parentID === undefined if node is top context HTML node\n        let sibling = node.previousSibling;\n        while (sibling !== null) {\n            const siblingID = this.app.nodes.getID(sibling);\n            if (siblingID !== undefined) {\n                this.commitNode(siblingID);\n                this.indexes[id] = this.indexes[siblingID] + 1;\n                break;\n            }\n            sibling = sibling.previousSibling;\n        }\n        if (sibling === null) {\n            this.indexes[id] = 0;\n        }\n        const recentsType = this.recents.get(id);\n        const isNew = recentsType === RecentsType.New;\n        const index = this.indexes[id];\n        if (index === undefined) {\n            throw 'commitNode: missing node index';\n        }\n        if (isNew) {\n            if (isElementNode(node)) {\n                let el = node;\n                if (parentID !== undefined) {\n                    if (this.app.sanitizer.isMaskedContainer(id)) {\n                        const width = el.clientWidth;\n                        const height = el.clientHeight;\n                        el = node.cloneNode();\n                        el.style.width = width + 'px';\n                        el.style.height = height + 'px';\n                    }\n                    this.app.send(new CreateElementNode(id, parentID, index, el.tagName, isSVGElement(node)));\n                }\n                for (let i = 0; i < el.attributes.length; i++) {\n                    const attr = el.attributes[i];\n                    this.sendNodeAttribute(id, el, attr.nodeName, attr.value);\n                }\n            }\n            else if (isTextNode(node)) {\n                // for text node id != 0, hence parentID !== undefined and parent is Element\n                this.app.send(new CreateTextNode(id, parentID, index));\n                this.sendNodeData(id, parent, node.data);\n            }\n            return true;\n        }\n        if (recentsType === RecentsType.Removed && parentID !== undefined) {\n            this.app.send(new MoveNode(id, parentID, index));\n        }\n        const attr = this.attributesMap.get(id);\n        if (attr !== undefined) {\n            if (!isElementNode(node)) {\n                throw 'commitNode: node is not an element';\n            }\n            for (const name of attr) {\n                this.sendNodeAttribute(id, node, name, node.getAttribute(name));\n            }\n        }\n        if (this.textSet.has(id)) {\n            if (!isTextNode(node)) {\n                throw 'commitNode: node is not a text';\n            }\n            // for text node id != 0, hence parent is Element\n            this.sendNodeData(id, parent, node.data);\n        }\n        return true;\n    }\n    commitNode(id) {\n        const node = this.app.nodes.getNode(id);\n        if (node === undefined) {\n            return false;\n        }\n        const cmt = this.commited[id];\n        if (cmt !== undefined) {\n            return cmt;\n        }\n        return (this.commited[id] = this._commitNode(id, node));\n    }\n    commitNodes(isStart = false) {\n        let node;\n        this.recents.forEach((type, id) => {\n            this.commitNode(id);\n            if (type === RecentsType.New && (node = this.app.nodes.getNode(id))) {\n                this.app.nodes.callNodeCallbacks(node, isStart);\n            }\n        });\n        this.clear();\n    }\n    // ISSSUE\n    observeRoot(node, beforeCommit, nodeToBind = node) {\n        this.observer.observe(node, {\n            childList: true,\n            attributes: true,\n            characterData: true,\n            subtree: true,\n            attributeOldValue: false,\n            characterDataOldValue: false,\n        });\n        this.bindTree(nodeToBind);\n        beforeCommit(this.app.nodes.getID(node));\n        this.commitNodes(true);\n    }\n    disconnect() {\n        this.observer.disconnect();\n        this.clear();\n    }\n}\n","import Observer from \"./observer.js\";\nimport { CreateIFrameDocument } from \"../../common/messages.js\";\nexport default class IFrameObserver extends Observer {\n    observe(iframe) {\n        const doc = iframe.contentDocument;\n        const hostID = this.app.nodes.getID(iframe);\n        if (!doc || hostID === undefined) {\n            return;\n        } //log TODO common app.logger\n        // Have to observe document, because the inner <html> might be changed\n        this.observeRoot(doc, (docID) => {\n            if (docID === undefined) {\n                console.log(\"OpenReplay: Iframe document not bound\");\n                return;\n            }\n            this.app.send(CreateIFrameDocument(hostID, docID));\n        });\n    }\n}\n","import Observer from \"./observer.js\";\nimport { CreateIFrameDocument } from \"../../common/messages.js\";\nexport default class ShadowRootObserver extends Observer {\n    observe(el) {\n        const shRoot = el.shadowRoot;\n        const hostID = this.app.nodes.getID(el);\n        if (!shRoot || hostID === undefined) {\n            return;\n        } // log\n        this.observeRoot(shRoot, (rootID) => {\n            if (rootID === undefined) {\n                console.log(\"OpenReplay: Shadow Root was not bound\");\n                return;\n            }\n            this.app.send(CreateIFrameDocument(hostID, rootID));\n        });\n    }\n}\n","import Observer from \"./observer.js\";\nimport { isElementNode, hasTag, } from \"../guards.js\";\nimport IFrameObserver from \"./iframe_observer.js\";\nimport ShadowRootObserver from \"./shadow_root_observer.js\";\nimport { CreateDocument } from \"../../common/messages.js\";\nimport { IN_BROWSER, hasOpenreplayAttribute } from '../../utils.js';\nconst attachShadowNativeFn = IN_BROWSER ? Element.prototype.attachShadow : () => new ShadowRoot();\nexport default class TopObserver extends Observer {\n    constructor(app, options) {\n        super(app, true);\n        this.iframeObservers = [];\n        this.shadowRootObservers = [];\n        this.options = Object.assign({\n            captureIFrames: true\n        }, options);\n        // IFrames\n        this.app.nodes.attachNodeCallback(node => {\n            if (hasTag(node, \"IFRAME\") &&\n                ((this.options.captureIFrames && !hasOpenreplayAttribute(node, \"obscured\"))\n                    || hasOpenreplayAttribute(node, \"capture\"))) {\n                this.handleIframe(node);\n            }\n        });\n        // ShadowDOM\n        this.app.nodes.attachNodeCallback(node => {\n            if (isElementNode(node) && node.shadowRoot !== null) {\n                this.handleShadowRoot(node.shadowRoot);\n            }\n        });\n    }\n    handleIframe(iframe) {\n        let doc = null;\n        const handle = this.app.safe(() => {\n            const id = this.app.nodes.getID(iframe);\n            if (id === undefined) {\n                return;\n            } //log\n            if (iframe.contentDocument === doc) {\n                return;\n            } // How frequently can it happen?\n            doc = iframe.contentDocument;\n            if (!doc || !iframe.contentWindow) {\n                return;\n            }\n            const observer = new IFrameObserver(this.app);\n            this.iframeObservers.push(observer);\n            observer.observe(iframe);\n        });\n        iframe.addEventListener(\"load\", handle); // why app.attachEventListener not working?\n        handle();\n    }\n    handleShadowRoot(shRoot) {\n        const observer = new ShadowRootObserver(this.app);\n        this.shadowRootObservers.push(observer);\n        observer.observe(shRoot.host);\n    }\n    observe() {\n        // Protection from several subsequent calls?\n        const observer = this;\n        Element.prototype.attachShadow = function () {\n            const shadow = attachShadowNativeFn.apply(this, arguments);\n            observer.handleShadowRoot(shadow);\n            return shadow;\n        };\n        // Can observe documentElement (<html>) here, because it is not supposed to be changing.\n        // However, it is possible in some exotic cases and may cause an ignorance of the newly created <html>\n        // In this case context.document have to be observed, but this will cause \n        // the change in the re-player behaviour caused by CreateDocument message: \n        //   the 0-node (\"fRoot\") will become #document rather than documentElement as it is now.\n        // Alternatively - observe(#document) then bindNode(documentElement)\n        this.observeRoot(window.document, () => {\n            this.app.send(new CreateDocument());\n        }, window.document.documentElement);\n    }\n    disconnect() {\n        Element.prototype.attachShadow = attachShadowNativeFn;\n        this.iframeObservers.forEach(o => o.disconnect());\n        this.iframeObservers = [];\n        this.shadowRootObservers.forEach(o => o.disconnect());\n        this.shadowRootObservers = [];\n        super.disconnect();\n    }\n}\n","import { stars, hasOpenreplayAttribute } from \"../utils.js\";\nimport { isElementNode } from \"./guards.js\";\nexport default class Sanitizer {\n    constructor(app, options) {\n        this.app = app;\n        this.masked = new Set();\n        this.maskedContainers = new Set();\n        this.options = Object.assign({\n            obscureTextEmails: true,\n            obscureTextNumbers: false,\n        }, options);\n    }\n    handleNode(id, parentID, node) {\n        if (this.masked.has(parentID) ||\n            (isElementNode(node) &&\n                hasOpenreplayAttribute(node, 'masked'))) {\n            this.masked.add(id);\n        }\n        if (this.maskedContainers.has(parentID) ||\n            (isElementNode(node) &&\n                hasOpenreplayAttribute(node, 'htmlmasked'))) {\n            this.maskedContainers.add(id);\n        }\n    }\n    sanitize(id, data) {\n        if (this.masked.has(id)) {\n            // TODO: is it the best place to put trim() ? Might trimmed spaces be considered in layout in certain cases?\n            return data.trim().replace(/[^\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]/g, '█');\n        }\n        if (this.options.obscureTextNumbers) {\n            data = data.replace(/\\d/g, '0');\n        }\n        if (this.options.obscureTextEmails) {\n            data = data.replace(/([^\\s]+)@([^\\s]+)\\.([^\\s]+)/g, (...f) => stars(f[1]) + '@' + stars(f[2]) + '.' + stars(f[3]));\n        }\n        return data;\n    }\n    isMasked(id) {\n        return this.masked.has(id);\n    }\n    isMaskedContainer(id) {\n        return this.maskedContainers.has(id);\n    }\n    getInnerTextSecure(el) {\n        const id = this.app.nodes.getID(el);\n        if (!id) {\n            return '';\n        }\n        return this.sanitize(id, el.innerText);\n    }\n    clear() {\n        this.masked.clear();\n        this.maskedContainers.clear();\n    }\n}\n","function wrap(callback, n) {\n    let t = 0;\n    return () => {\n        if (t++ >= n) {\n            t = 0;\n            callback();\n        }\n    };\n}\nexport default class Ticker {\n    constructor(app) {\n        this.app = app;\n        this.timer = null;\n        this.callbacks = [];\n    }\n    attach(callback, n = 0, useSafe = true, thisArg) {\n        if (thisArg) {\n            callback = callback.bind(thisArg);\n        }\n        if (useSafe) {\n            callback = this.app.safe(callback);\n        }\n        this.callbacks.unshift(n ? wrap(callback, n) : callback) - 1;\n    }\n    start() {\n        if (this.timer === null) {\n            this.timer = setInterval(() => this.callbacks.forEach((cb) => {\n                if (cb)\n                    cb();\n            }), 30);\n        }\n    }\n    stop() {\n        if (this.timer !== null) {\n            clearInterval(this.timer);\n            this.timer = null;\n        }\n    }\n}\n","export const LogLevel = {\n    Verbose: 5,\n    Log: 4,\n    Warnings: 3,\n    Errors: 2,\n    Silent: 0,\n};\nfunction IsCustomLevel(l) {\n    return typeof l === 'object';\n}\nexport default class Logger {\n    constructor(options = LogLevel.Silent) {\n        this.options = options === true\n            ? { level: LogLevel.Verbose }\n            : typeof options === \"number\" ? { level: options } : options;\n    }\n    log(...args) {\n        if (IsCustomLevel(this.options.level)\n            ? this.options.level.log\n            : this.options.level >= LogLevel.Log) {\n            console.log(...args);\n        }\n    }\n    warn(...args) {\n        if (IsCustomLevel(this.options.level)\n            ? this.options.level.warn\n            : this.options.level >= LogLevel.Warnings) {\n            console.warn(...args);\n        }\n    }\n    error(...args) {\n        if (IsCustomLevel(this.options.level)\n            ? this.options.level.error\n            : this.options.level >= LogLevel.Errors) {\n            console.error(...args);\n        }\n    }\n}\n","export default class Session {\n    constructor() {\n        this.metadata = {};\n        this.userID = null;\n        this.sessionID = null;\n        this.callbacks = [];\n    }\n    attachUpdateCallback(cb) {\n        this.callbacks.push(cb);\n    }\n    handleUpdate(newInfo) {\n        if (newInfo.userID == null) {\n            delete newInfo.userID;\n        }\n        if (newInfo.sessionID == null) {\n            delete newInfo.sessionID;\n        }\n        this.callbacks.forEach(cb => cb(newInfo));\n    }\n    update(newInfo) {\n        if (newInfo.userID !== undefined) { // TODO clear nullable/undefinable types\n            this.userID = newInfo.userID;\n        }\n        if (newInfo.metadata !== undefined) {\n            Object.entries(newInfo.metadata).forEach(([k, v]) => this.metadata[k] = v);\n        }\n        if (newInfo.sessionID !== undefined) {\n            this.sessionID = newInfo.sessionID;\n        }\n        this.handleUpdate(newInfo);\n    }\n    setMetadata(key, value) {\n        this.metadata[key] = value;\n        this.handleUpdate({ metadata: { [key]: value } });\n    }\n    setUserID(userID) {\n        this.userID = userID;\n        this.handleUpdate({ userID });\n    }\n    getInfo() {\n        return {\n            sessionID: this.sessionID,\n            metadata: this.metadata,\n            userID: this.userID,\n        };\n    }\n    reset() {\n        this.metadata = {};\n        this.userID = null;\n        this.sessionID = null;\n    }\n}\n","import { IN_BROWSER } from \"../utils.js\";\nimport { PerformanceTrack } from \"../common/messages.js\";\nconst perf = IN_BROWSER && 'performance' in window && 'memory' in performance // works in Chrome only\n    ? performance\n    : { memory: {} };\nexport const deviceMemory = IN_BROWSER ? (navigator.deviceMemory || 0) * 1024 : 0;\nexport const jsHeapSizeLimit = perf.memory.jsHeapSizeLimit || 0;\nexport default function (app, opts) {\n    const options = Object.assign({\n        capturePerformance: true,\n    }, opts);\n    if (!options.capturePerformance) {\n        return;\n    }\n    let frames;\n    let ticks;\n    const nextFrame = () => {\n        if (frames === undefined || frames === -1) {\n            return;\n        }\n        frames++;\n        requestAnimationFrame(nextFrame);\n    };\n    app.ticker.attach(() => {\n        if (ticks === undefined || ticks === -1) {\n            return;\n        }\n        ticks++;\n    }, 0, false);\n    const sendPerformanceTrack = () => {\n        if (frames === undefined || ticks === undefined) {\n            return;\n        }\n        app.send(new PerformanceTrack(frames, ticks, perf.memory.totalJSHeapSize || 0, perf.memory.usedJSHeapSize || 0));\n        ticks = frames = document.hidden ? -1 : 0;\n    };\n    app.attachStartCallback(() => {\n        ticks = frames = -1;\n        sendPerformanceTrack();\n        nextFrame();\n    });\n    app.attachStopCallback(() => {\n        ticks = frames = undefined;\n    });\n    app.ticker.attach(sendPerformanceTrack, 40, false);\n    if (document.hidden !== undefined) {\n        app.attachEventListener(document, 'visibilitychange', sendPerformanceTrack, false, false);\n    }\n}\n","import { Timestamp, Metadata, UserID } from \"../common/messages.js\";\nimport { timestamp } from \"../utils.js\";\nimport Nodes from \"./nodes.js\";\nimport Observer from \"./observer/top_observer.js\";\nimport Sanitizer from \"./sanitizer.js\";\nimport Ticker from \"./ticker.js\";\nimport Logger, { LogLevel } from \"./logger.js\";\nimport Session from \"./session.js\";\nimport { deviceMemory, jsHeapSizeLimit } from \"../modules/performance.js\";\nconst CANCELED = \"canceled\";\nconst START_ERROR = \":(\";\nconst UnsuccessfulStart = (reason) => ({ reason, success: false });\nconst SuccessfulStart = (body) => (Object.assign(Object.assign({}, body), { success: true }));\nvar ActivityState;\n(function (ActivityState) {\n    ActivityState[ActivityState[\"NotActive\"] = 0] = \"NotActive\";\n    ActivityState[ActivityState[\"Starting\"] = 1] = \"Starting\";\n    ActivityState[ActivityState[\"Active\"] = 2] = \"Active\";\n})(ActivityState || (ActivityState = {}));\n// TODO: use backendHost only\nexport const DEFAULT_INGEST_POINT = 'https://api.openreplay.com/ingest';\nexport default class App {\n    constructor(projectKey, sessionToken, options) {\n        // if (options.onStart !== undefined) {\n        //   deprecationWarn(\"'onStart' option\", \"tracker.start().then(/* handle session info */)\")\n        // } ?? maybe onStart is good\n        this.messages = [];\n        this.startCallbacks = [];\n        this.stopCallbacks = [];\n        this.commitCallbacks = [];\n        this.activityState = ActivityState.NotActive;\n        this.version = '3.5.16'; // TODO: version compatability check inside each plugin.\n        this.projectKey = projectKey;\n        this.options = Object.assign({\n            revID: '',\n            node_id: '__openreplay_id',\n            session_token_key: '__openreplay_token',\n            session_pageno_key: '__openreplay_pageno',\n            session_reset_key: '__openreplay_reset',\n            local_uuid_key: '__openreplay_uuid',\n            ingestPoint: DEFAULT_INGEST_POINT,\n            resourceBaseHref: null,\n            verbose: false,\n            __is_snippet: false,\n            __debug_report_edp: null,\n            localStorage: window.localStorage,\n            sessionStorage: window.sessionStorage,\n        }, options);\n        this.revID = this.options.revID;\n        this.sanitizer = new Sanitizer(this, options);\n        this.nodes = new Nodes(this.options.node_id);\n        this.observer = new Observer(this, options);\n        this.ticker = new Ticker(this);\n        this.ticker.attach(() => this.commit());\n        this.debug = new Logger(this.options.__debug__);\n        this.notify = new Logger(this.options.verbose ? LogLevel.Warnings : LogLevel.Silent);\n        this.session = new Session();\n        this.session.attachUpdateCallback(({ userID, metadata }) => {\n            if (userID != null) { // TODO: nullable userID\n                this.send(new UserID(userID));\n            }\n            if (metadata != null) {\n                Object.entries(metadata).forEach(([key, value]) => this.send(new Metadata(key, value)));\n            }\n        });\n        this.localStorage = this.options.localStorage;\n        this.sessionStorage = this.options.sessionStorage;\n        if (sessionToken != null) {\n            this.sessionStorage.setItem(this.options.session_token_key, sessionToken);\n        }\n        try {\n            this.worker = new Worker(URL.createObjectURL(new Blob([`\"use strict\";function t(t){function i(...i){return new t(...i)}return i.prototype=t.prototype,i}const i=new Map;const s=t(class{constructor(t,i,s){this.pageNo=t,this.firstIndex=i,this.timestamp=s,this._id=80}encode(t){return t.uint(80)&&t.uint(this.pageNo)&&t.uint(this.firstIndex)&&t.int(this.timestamp)}});i.set(80,s);const e=t(class{constructor(t){this.timestamp=t,this._id=0}encode(t){return t.uint(0)&&t.uint(this.timestamp)}});i.set(0,e);const n=t(class{constructor(t,i,s){this.url=t,this.referrer=i,this.navigationStart=s,this._id=4}encode(t){return t.uint(4)&&t.string(this.url)&&t.string(this.referrer)&&t.uint(this.navigationStart)}});i.set(4,n);const r=t(class{constructor(t,i){this.width=t,this.height=i,this._id=5}encode(t){return t.uint(5)&&t.uint(this.width)&&t.uint(this.height)}});i.set(5,r);const h=t(class{constructor(t,i){this.x=t,this.y=i,this._id=6}encode(t){return t.uint(6)&&t.int(this.x)&&t.int(this.y)}});i.set(6,h);const o=t(class{constructor(){this._id=7}encode(t){return t.uint(7)}});i.set(7,o);const c=t(class{constructor(t,i,s,e,n){this.id=t,this.parentID=i,this.index=s,this.tag=e,this.svg=n,this._id=8}encode(t){return t.uint(8)&&t.uint(this.id)&&t.uint(this.parentID)&&t.uint(this.index)&&t.string(this.tag)&&t.boolean(this.svg)}});i.set(8,c);const a=t(class{constructor(t,i,s){this.id=t,this.parentID=i,this.index=s,this._id=9}encode(t){return t.uint(9)&&t.uint(this.id)&&t.uint(this.parentID)&&t.uint(this.index)}});i.set(9,a);const u=t(class{constructor(t,i,s){this.id=t,this.parentID=i,this.index=s,this._id=10}encode(t){return t.uint(10)&&t.uint(this.id)&&t.uint(this.parentID)&&t.uint(this.index)}});i.set(10,u);const d=t(class{constructor(t){this.id=t,this._id=11}encode(t){return t.uint(11)&&t.uint(this.id)}});i.set(11,d);const l=t(class{constructor(t,i,s){this.id=t,this.name=i,this.value=s,this._id=12}encode(t){return t.uint(12)&&t.uint(this.id)&&t.string(this.name)&&t.string(this.value)}});i.set(12,l);const p=t(class{constructor(t,i){this.id=t,this.name=i,this._id=13}encode(t){return t.uint(13)&&t.uint(this.id)&&t.string(this.name)}});i.set(13,p);const g=t(class{constructor(t,i){this.id=t,this.data=i,this._id=14}encode(t){return t.uint(14)&&t.uint(this.id)&&t.string(this.data)}});i.set(14,g);const m=t(class{constructor(t,i,s){this.id=t,this.x=i,this.y=s,this._id=16}encode(t){return t.uint(16)&&t.uint(this.id)&&t.int(this.x)&&t.int(this.y)}});i.set(16,m);const f=t(class{constructor(t,i){this.id=t,this.label=i,this._id=17}encode(t){return t.uint(17)&&t.uint(this.id)&&t.string(this.label)}});i.set(17,f);const y=t(class{constructor(t,i,s){this.id=t,this.value=i,this.mask=s,this._id=18}encode(t){return t.uint(18)&&t.uint(this.id)&&t.string(this.value)&&t.int(this.mask)}});i.set(18,y);const _=t(class{constructor(t,i){this.id=t,this.checked=i,this._id=19}encode(t){return t.uint(19)&&t.uint(this.id)&&t.boolean(this.checked)}});i.set(19,_);const v=t(class{constructor(t,i){this.x=t,this.y=i,this._id=20}encode(t){return t.uint(20)&&t.uint(this.x)&&t.uint(this.y)}});i.set(20,v);const S=t(class{constructor(t,i){this.level=t,this.value=i,this._id=22}encode(t){return t.uint(22)&&t.string(this.level)&&t.string(this.value)}});i.set(22,S);const b=t(class{constructor(t,i,s,e,n,r,h,o,c){this.requestStart=t,this.responseStart=i,this.responseEnd=s,this.domContentLoadedEventStart=e,this.domContentLoadedEventEnd=n,this.loadEventStart=r,this.loadEventEnd=h,this.firstPaint=o,this.firstContentfulPaint=c,this._id=23}encode(t){return t.uint(23)&&t.uint(this.requestStart)&&t.uint(this.responseStart)&&t.uint(this.responseEnd)&&t.uint(this.domContentLoadedEventStart)&&t.uint(this.domContentLoadedEventEnd)&&t.uint(this.loadEventStart)&&t.uint(this.loadEventEnd)&&t.uint(this.firstPaint)&&t.uint(this.firstContentfulPaint)}});i.set(23,b);const w=t(class{constructor(t,i,s){this.speedIndex=t,this.visuallyComplete=i,this.timeToInteractive=s,this._id=24}encode(t){return t.uint(24)&&t.uint(this.speedIndex)&&t.uint(this.visuallyComplete)&&t.uint(this.timeToInteractive)}});i.set(24,w);const E=t(class{constructor(t,i,s){this.name=t,this.message=i,this.payload=s,this._id=25}encode(t){return t.uint(25)&&t.string(this.name)&&t.string(this.message)&&t.string(this.payload)}});i.set(25,E);const x=t(class{constructor(t,i){this.name=t,this.payload=i,this._id=27}encode(t){return t.uint(27)&&t.string(this.name)&&t.string(this.payload)}});i.set(27,x);const T=t(class{constructor(t){this.id=t,this._id=28}encode(t){return t.uint(28)&&t.string(this.id)}});i.set(28,T);const z=t(class{constructor(t){this.id=t,this._id=29}encode(t){return t.uint(29)&&t.string(this.id)}});i.set(29,z);const k=t(class{constructor(t,i){this.key=t,this.value=i,this._id=30}encode(t){return t.uint(30)&&t.string(this.key)&&t.string(this.value)}});i.set(30,k);const A=t(class{constructor(t,i,s){this.id=t,this.rule=i,this.index=s,this._id=37}encode(t){return t.uint(37)&&t.uint(this.id)&&t.string(this.rule)&&t.uint(this.index)}});i.set(37,A);const I=t(class{constructor(t,i){this.id=t,this.index=i,this._id=38}encode(t){return t.uint(38)&&t.uint(this.id)&&t.uint(this.index)}});i.set(38,I);const L=t(class{constructor(t,i,s,e,n,r,h){this.method=t,this.url=i,this.request=s,this.response=e,this.status=n,this.timestamp=r,this.duration=h,this._id=39}encode(t){return t.uint(39)&&t.string(this.method)&&t.string(this.url)&&t.string(this.request)&&t.string(this.response)&&t.uint(this.status)&&t.uint(this.timestamp)&&t.uint(this.duration)}});i.set(39,L);const C=t(class{constructor(t,i,s,e){this.name=t,this.duration=i,this.args=s,this.result=e,this._id=40}encode(t){return t.uint(40)&&t.string(this.name)&&t.uint(this.duration)&&t.string(this.args)&&t.string(this.result)}});i.set(40,C);const M=t(class{constructor(t,i){this.key=t,this.value=i,this._id=41}encode(t){return t.uint(41)&&t.string(this.key)&&t.string(this.value)}});i.set(41,M);const N=t(class{constructor(t){this.type=t,this._id=42}encode(t){return t.uint(42)&&t.string(this.type)}});i.set(42,N);const B=t(class{constructor(t,i,s){this.action=t,this.state=i,this.duration=s,this._id=44}encode(t){return t.uint(44)&&t.string(this.action)&&t.string(this.state)&&t.uint(this.duration)}});i.set(44,B);const U=t(class{constructor(t,i){this.mutation=t,this.state=i,this._id=45}encode(t){return t.uint(45)&&t.string(this.mutation)&&t.string(this.state)}});i.set(45,U);const R=t(class{constructor(t,i){this.type=t,this.payload=i,this._id=46}encode(t){return t.uint(46)&&t.string(this.type)&&t.string(this.payload)}});i.set(46,R);const O=t(class{constructor(t,i,s){this.action=t,this.state=i,this.duration=s,this._id=47}encode(t){return t.uint(47)&&t.string(this.action)&&t.string(this.state)&&t.uint(this.duration)}});i.set(47,O);const P=t(class{constructor(t,i,s,e){this.operationKind=t,this.operationName=i,this.variables=s,this.response=e,this._id=48}encode(t){return t.uint(48)&&t.string(this.operationKind)&&t.string(this.operationName)&&t.string(this.variables)&&t.string(this.response)}});i.set(48,P);const q=t(class{constructor(t,i,s,e){this.frames=t,this.ticks=i,this.totalJSHeapSize=s,this.usedJSHeapSize=e,this._id=49}encode(t){return t.uint(49)&&t.int(this.frames)&&t.int(this.ticks)&&t.uint(this.totalJSHeapSize)&&t.uint(this.usedJSHeapSize)}});i.set(49,q);const D=t(class{constructor(t,i,s,e,n,r,h,o){this.timestamp=t,this.duration=i,this.ttfb=s,this.headerSize=e,this.encodedBodySize=n,this.decodedBodySize=r,this.url=h,this.initiator=o,this._id=53}encode(t){return t.uint(53)&&t.uint(this.timestamp)&&t.uint(this.duration)&&t.uint(this.ttfb)&&t.uint(this.headerSize)&&t.uint(this.encodedBodySize)&&t.uint(this.decodedBodySize)&&t.string(this.url)&&t.string(this.initiator)}});i.set(53,D);const W=t(class{constructor(t,i){this.downlink=t,this.type=i,this._id=54}encode(t){return t.uint(54)&&t.uint(this.downlink)&&t.string(this.type)}});i.set(54,W);const H=t(class{constructor(t){this.hidden=t,this._id=55}encode(t){return t.uint(55)&&t.boolean(this.hidden)}});i.set(55,H);const J=t(class{constructor(t,i,s,e,n,r,h){this.timestamp=t,this.duration=i,this.context=s,this.containerType=e,this.containerSrc=n,this.containerId=r,this.containerName=h,this._id=59}encode(t){return t.uint(59)&&t.uint(this.timestamp)&&t.uint(this.duration)&&t.uint(this.context)&&t.uint(this.containerType)&&t.string(this.containerSrc)&&t.string(this.containerId)&&t.string(this.containerName)}});i.set(59,J);const F=t(class{constructor(t,i,s,e){this.id=t,this.name=i,this.value=s,this.baseURL=e,this._id=60}encode(t){return t.uint(60)&&t.uint(this.id)&&t.string(this.name)&&t.string(this.value)&&t.string(this.baseURL)}});i.set(60,F);const X=t(class{constructor(t,i,s){this.id=t,this.data=i,this.baseURL=s,this._id=61}encode(t){return t.uint(61)&&t.uint(this.id)&&t.string(this.data)&&t.string(this.baseURL)}});i.set(61,X);const G=t(class{constructor(t,i){this.type=t,this.value=i,this._id=63}encode(t){return t.uint(63)&&t.string(this.type)&&t.string(this.value)}});i.set(63,G);const K=t(class{constructor(t,i){this.name=t,this.payload=i,this._id=64}encode(t){return t.uint(64)&&t.string(this.name)&&t.string(this.payload)}});i.set(64,K);const j=t(class{constructor(){this._id=65}encode(t){return t.uint(65)}});i.set(65,j);const Q=t(class{constructor(t,i,s,e){this.id=t,this.rule=i,this.index=s,this.baseURL=e,this._id=67}encode(t){return t.uint(67)&&t.uint(this.id)&&t.string(this.rule)&&t.uint(this.index)&&t.string(this.baseURL)}});i.set(67,Q);const V=t(class{constructor(t,i,s,e){this.id=t,this.hesitationTime=i,this.label=s,this.selector=e,this._id=69}encode(t){return t.uint(69)&&t.uint(this.id)&&t.uint(this.hesitationTime)&&t.string(this.label)&&t.string(this.selector)}});i.set(69,V);const Y=t(class{constructor(t,i){this.frameID=t,this.id=i,this._id=70}encode(t){return t.uint(70)&&t.uint(this.frameID)&&t.uint(this.id)}});i.set(70,Y);class Z{constructor(t,i,s,e=10,n=1e3){this.onUnauthorised=i,this.onFailure=s,this.MAX_ATTEMPTS_COUNT=e,this.ATTEMPT_TIMEOUT=n,this.attemptsCount=0,this.busy=!1,this.queue=[],this.token=null,this.ingestURL=t+\"/v1/web/i\"}authorise(t){this.token=t}push(t){this.busy||!this.token?this.queue.push(t):this.sendBatch(t)}retry(t){this.attemptsCount>=this.MAX_ATTEMPTS_COUNT?this.onFailure():(this.attemptsCount++,setTimeout(()=>this.sendBatch(t),this.ATTEMPT_TIMEOUT*this.attemptsCount))}sendBatch(t){this.busy=!0,fetch(this.ingestURL,{body:t,method:\"POST\",headers:{Authorization:\"Bearer \"+this.token},keepalive:t.length<65536}).then(i=>{if(401===i.status)return this.busy=!1,void this.onUnauthorised();if(i.status>=400)return void this.retry(t);this.attemptsCount=0;const s=this.queue.shift();s?this.sendBatch(s):this.busy=!1}).catch(i=>{console.warn(\"OpenReplay:\",i),this.retry(t)})}clean(){this.queue.length=0}}const tt=\"function\"==typeof TextEncoder?new TextEncoder:{encode(t){const i=t.length,s=new Uint8Array(3*i);let e=-1;for(var n=0,r=0,h=0;h!==i;){if(n=t.charCodeAt(h),h+=1,n>=55296&&n<=56319){if(h===i){s[e+=1]=239,s[e+=1]=191,s[e+=1]=189;break}if(!((r=t.charCodeAt(h))>=56320&&r<=57343)){s[e+=1]=239,s[e+=1]=191,s[e+=1]=189;continue}if(h+=1,(n=1024*(n-55296)+r-56320+65536)>65535){s[e+=1]=240|n>>>18,s[e+=1]=128|n>>>12&63,s[e+=1]=128|n>>>6&63,s[e+=1]=128|63&n;continue}}n<=127?s[e+=1]=0|n:n<=2047?(s[e+=1]=192|n>>>6,s[e+=1]=128|63&n):(s[e+=1]=224|n>>>12,s[e+=1]=128|n>>>6&63,s[e+=1]=128|63&n)}return s.subarray(0,e+1)}};class it{constructor(t){this.size=t,this.offset=0,this.checkpointOffset=0,this.data=new Uint8Array(t)}checkpoint(){this.checkpointOffset=this.offset}isEmpty(){return 0===this.offset}boolean(t){return this.data[this.offset++]=+t,this.offset<=this.size}uint(t){for((t<0||t>Number.MAX_SAFE_INTEGER)&&(t=0);t>=128;)this.data[this.offset++]=t%256|128,t=Math.floor(t/128);return this.data[this.offset++]=t,this.offset<=this.size}int(t){return t=Math.round(t),this.uint(t>=0?2*t:-2*t-1)}string(t){const i=tt.encode(t),s=i.byteLength;return!(!this.uint(s)||this.offset+s>this.size)&&(this.data.set(i,this.offset),this.offset+=s,!0)}reset(){this.offset=0,this.checkpointOffset=0}flush(){const t=this.data.slice(0,this.checkpointOffset);return this.reset(),t}}class st{constructor(t,i,s){this.pageNo=t,this.timestamp=i,this.onBatch=s,this.nextIndex=0,this.beaconSize=2e5,this.writer=new it(this.beaconSize),this.isEmpty=!0,this.beaconSizeLimit=1e6,this.prepare()}prepare(){this.writer.isEmpty()&&new s(this.pageNo,this.nextIndex,this.timestamp).encode(this.writer)}write(t){const i=t.encode(this.writer);return i&&(this.isEmpty=!1,this.writer.checkpoint(),this.nextIndex++),i}setBeaconSizeLimit(t){this.beaconSizeLimit=t}writeMessage(t){for(t instanceof e&&(this.timestamp=t.timestamp);!this.write(t);){if(this.finaliseBatch(),this.beaconSize===this.beaconSizeLimit)return console.warn(\"OpenReplay: beacon size overflow. Skipping large message.\"),this.writer.reset(),this.prepare(),void(this.isEmpty=!0);this.beaconSize=Math.min(2*this.beaconSize,this.beaconSizeLimit),this.writer=new it(this.beaconSize),this.prepare(),this.isEmpty=!0}}finaliseBatch(){this.isEmpty||(this.onBatch(this.writer.flush()),this.prepare(),this.isEmpty=!0)}clean(){this.writer.reset()}}var et;!function(t){t[t.NotActive=0]=\"NotActive\",t[t.Starting=1]=\"Starting\",t[t.Stopping=2]=\"Stopping\",t[t.Active=3]=\"Active\"}(et||(et={}));let nt=null,rt=null;function ht(){rt&&rt.finaliseBatch()}function ot(){et.Stopping,null!==at&&(clearInterval(at),at=null),rt&&(rt.clean(),rt=null),et.NotActive}et.NotActive;let ct,at=null;self.onmessage=({data:t})=>{if(null!=t){if(\"stop\"===t)return ht(),void ot();if(Array.isArray(t)){if(!rt)throw new Error(\"WebWorker: writer not initialised. Service Should be Started.\");const s=rt;t.forEach(t=>{const e=new(i.get(t._id));Object.assign(e,t),e instanceof H&&(e.hidden?ct=setTimeout(()=>self.postMessage(\"restart\"),18e5):clearTimeout(ct)),s.writeMessage(e)})}else{if(\"start\"===t.type)return et.Starting,nt=new Z(t.ingestPoint,()=>{self.postMessage(\"restart\")},()=>{nt&&(nt.clean(),nt=null),ot(),self.postMessage(\"failed\")},t.connAttemptCount,t.connAttemptGap),rt=new st(t.pageNo,t.timestamp,t=>nt&&nt.push(t)),null===at&&(at=setInterval(ht,1e4)),et.Active;if(\"auth\"===t.type){if(!nt)throw new Error(\"WebWorker: sender not initialised. Received auth.\");if(!rt)throw new Error(\"WebWorker: writer not initialised. Received auth.\");return nt.authorise(t.token),void(t.beaconSizeLimit&&rt.setBeaconSizeLimit(t.beaconSizeLimit))}}}else ht()};\n`], { type: 'text/javascript' })));\n            this.worker.onerror = e => {\n                this._debug(\"webworker_error\", e);\n            };\n            this.worker.onmessage = ({ data }) => {\n                if (data === \"failed\") {\n                    this.stop();\n                    this._debug(\"worker_failed\", {}); // add context (from worker)\n                }\n                else if (data === \"restart\") {\n                    this.stop();\n                    this.start({ forceNew: true });\n                }\n            };\n            const alertWorker = () => {\n                if (this.worker) {\n                    this.worker.postMessage(null);\n                }\n            };\n            // keep better tactics, discard others?\n            this.attachEventListener(window, 'beforeunload', alertWorker, false);\n            this.attachEventListener(document.body, 'mouseleave', alertWorker, false, false);\n            // TODO: stop session after inactivity timeout (make configurable)\n            this.attachEventListener(document, 'visibilitychange', alertWorker, false);\n        }\n        catch (e) {\n            this._debug(\"worker_start\", e);\n        }\n    }\n    _debug(context, e) {\n        if (this.options.__debug_report_edp !== null) {\n            fetch(this.options.__debug_report_edp, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    context,\n                    error: `${e}`\n                })\n            });\n        }\n        this.debug.error(\"OpenReplay error: \", context, e);\n    }\n    send(message, urgent = false) {\n        if (this.activityState === ActivityState.NotActive) {\n            return;\n        }\n        this.messages.push(message);\n        // TODO: commit on start if there were `urgent` sends; \n        // Clearify where urgent can be used for;\n        // Clearify workflow for each type of message in case it was sent before start \n        //      (like Fetch before start; maybe add an option \"preCapture: boolean\" or sth alike)\n        if (this.activityState === ActivityState.Active && urgent) {\n            this.commit();\n        }\n    }\n    commit() {\n        if (this.worker && this.messages.length) {\n            this.messages.unshift(new Timestamp(timestamp()));\n            this.worker.postMessage(this.messages);\n            this.commitCallbacks.forEach(cb => cb(this.messages));\n            this.messages.length = 0;\n        }\n    }\n    safe(fn) {\n        const app = this;\n        return function (...args) {\n            try {\n                fn.apply(this, args);\n            }\n            catch (e) {\n                app._debug(\"safe_fn_call\", e);\n                // time: timestamp(),\n                // name: e.name,\n                // message: e.message,\n                // stack: e.stack\n            }\n        }; // TODO: correct typing\n    }\n    attachCommitCallback(cb) {\n        this.commitCallbacks.push(cb);\n    }\n    attachStartCallback(cb) {\n        this.startCallbacks.push(cb);\n    }\n    attachStopCallback(cb) {\n        this.stopCallbacks.push(cb);\n    }\n    attachEventListener(target, type, listener, useSafe = true, useCapture = true) {\n        if (useSafe) {\n            listener = this.safe(listener);\n        }\n        this.attachStartCallback(() => target.addEventListener(type, listener, useCapture));\n        this.attachStopCallback(() => target.removeEventListener(type, listener, useCapture));\n    }\n    // TODO: full correct semantic\n    checkRequiredVersion(version) {\n        const reqVer = version.split(/[.-]/);\n        const ver = this.version.split(/[.-]/);\n        for (let i = 0; i < 3; i++) {\n            if (Number(ver[i]) < Number(reqVer[i]) || isNaN(Number(ver[i])) || isNaN(Number(reqVer[i]))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    getStartInfo() {\n        return {\n            userUUID: this.localStorage.getItem(this.options.local_uuid_key),\n            projectKey: this.projectKey,\n            revID: this.revID,\n            timestamp: timestamp(),\n            trackerVersion: this.version,\n            isSnippet: this.options.__is_snippet,\n        };\n    }\n    getSessionInfo() {\n        return Object.assign(Object.assign({}, this.session.getInfo()), this.getStartInfo());\n    }\n    getSessionToken() {\n        const token = this.sessionStorage.getItem(this.options.session_token_key);\n        if (token !== null) {\n            return token;\n        }\n    }\n    getSessionID() {\n        return this.session.getInfo().sessionID || undefined;\n    }\n    getHost() {\n        return new URL(this.options.ingestPoint).hostname;\n    }\n    getProjectKey() {\n        return this.projectKey;\n    }\n    getBaseHref() {\n        var _a, _b;\n        if (typeof this.options.resourceBaseHref === 'string') {\n            return this.options.resourceBaseHref;\n        }\n        else if (typeof this.options.resourceBaseHref === 'object') {\n            //switch between  types\n        }\n        if (document.baseURI) {\n            return document.baseURI;\n        }\n        // IE only\n        return ((_b = (_a = document.head) === null || _a === void 0 ? void 0 : _a.getElementsByTagName(\"base\")[0]) === null || _b === void 0 ? void 0 : _b.getAttribute(\"href\")) || location.origin + location.pathname;\n    }\n    resolveResourceURL(resourceURL) {\n        const base = new URL(this.getBaseHref());\n        base.pathname += \"/\" + new URL(resourceURL).pathname;\n        base.pathname.replace(/\\/+/g, \"/\");\n        return base.toString();\n    }\n    isServiceURL(url) {\n        return url.startsWith(this.options.ingestPoint);\n    }\n    active() {\n        return this.activityState === ActivityState.Active;\n    }\n    resetNextPageSession(flag) {\n        if (flag) {\n            this.sessionStorage.setItem(this.options.session_reset_key, 't');\n        }\n        else {\n            this.sessionStorage.removeItem(this.options.session_reset_key);\n        }\n    }\n    _start(startOpts) {\n        if (!this.worker) {\n            return Promise.resolve(UnsuccessfulStart(\"No worker found: perhaps, CSP is not set.\"));\n        }\n        if (this.activityState !== ActivityState.NotActive) {\n            return Promise.resolve(UnsuccessfulStart(\"OpenReplay: trying to call `start()` on the instance that has been started already.\"));\n        }\n        this.activityState = ActivityState.Starting;\n        let pageNo = 0;\n        const pageNoStr = this.sessionStorage.getItem(this.options.session_pageno_key);\n        if (pageNoStr != null) {\n            pageNo = parseInt(pageNoStr);\n            pageNo++;\n        }\n        this.sessionStorage.setItem(this.options.session_pageno_key, pageNo.toString());\n        const startInfo = this.getStartInfo();\n        const startWorkerMsg = {\n            type: \"start\",\n            pageNo,\n            ingestPoint: this.options.ingestPoint,\n            timestamp: startInfo.timestamp,\n            connAttemptCount: this.options.connAttemptCount,\n            connAttemptGap: this.options.connAttemptGap,\n        };\n        this.worker.postMessage(startWorkerMsg);\n        this.session.update({\n            // \"updating\" with old metadata in order to trigger session's UpdateCallbacks. \n            // (for the case of internal .start() calls, like on \"restart\" webworker signal or assistent connection in tracker-assist )\n            metadata: startOpts.metadata || this.session.getInfo().metadata,\n            userID: startOpts.userID,\n        });\n        const sReset = this.sessionStorage.getItem(this.options.session_reset_key);\n        this.sessionStorage.removeItem(this.options.session_reset_key);\n        return window.fetch(this.options.ingestPoint + '/v1/web/start', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(Object.assign(Object.assign({}, startInfo), { userID: this.session.getInfo().userID, token: this.sessionStorage.getItem(this.options.session_token_key), deviceMemory,\n                jsHeapSizeLimit, reset: startOpts.forceNew || sReset !== null })),\n        })\n            .then(r => {\n            if (r.status === 200) {\n                return r.json();\n            }\n            else {\n                return r.text().then(text => text === CANCELED\n                    ? Promise.reject(CANCELED)\n                    : Promise.reject(`Server error: ${r.status}. ${text}`));\n            }\n        })\n            .then(r => {\n            if (!this.worker) {\n                return Promise.reject(\"no worker found after start request (this might not happen)\");\n            }\n            const { token, userUUID, sessionID, beaconSizeLimit } = r;\n            if (typeof token !== 'string' ||\n                typeof userUUID !== 'string' ||\n                (typeof beaconSizeLimit !== 'number' && typeof beaconSizeLimit !== 'undefined')) {\n                return Promise.reject(`Incorrect server response: ${JSON.stringify(r)}`);\n            }\n            this.sessionStorage.setItem(this.options.session_token_key, token);\n            this.localStorage.setItem(this.options.local_uuid_key, userUUID);\n            this.session.update({ sessionID }); // TODO: no no-explicit 'any'\n            const startWorkerMsg = {\n                type: \"auth\",\n                token,\n                beaconSizeLimit\n            };\n            this.worker.postMessage(startWorkerMsg);\n            this.activityState = ActivityState.Active;\n            const onStartInfo = { sessionToken: token, userUUID, sessionID };\n            this.startCallbacks.forEach((cb) => cb(onStartInfo)); // TODO: start as early as possible (before receiving the token)\n            this.observer.observe();\n            this.ticker.start();\n            this.notify.log(\"OpenReplay tracking started.\");\n            // get rid of onStart ?\n            if (typeof this.options.onStart === 'function') {\n                this.options.onStart(onStartInfo);\n            }\n            return SuccessfulStart(onStartInfo);\n        })\n            .catch(reason => {\n            this.sessionStorage.removeItem(this.options.session_token_key);\n            this.stop();\n            if (reason === CANCELED) {\n                return UnsuccessfulStart(CANCELED);\n            }\n            this.notify.log(\"OpenReplay was unable to start. \", reason);\n            this._debug(\"session_start\", reason);\n            return UnsuccessfulStart(START_ERROR);\n        });\n    }\n    start(options = {}) {\n        if (!document.hidden) {\n            return this._start(options);\n        }\n        else {\n            return new Promise((resolve) => {\n                const onVisibilityChange = () => {\n                    if (!document.hidden) {\n                        document.removeEventListener(\"visibilitychange\", onVisibilityChange);\n                        resolve(this._start(options));\n                    }\n                };\n                document.addEventListener(\"visibilitychange\", onVisibilityChange);\n            });\n        }\n    }\n    stop(calledFromAPI = false, restarting = false) {\n        if (this.activityState !== ActivityState.NotActive) {\n            try {\n                this.sanitizer.clear();\n                this.observer.disconnect();\n                this.nodes.clear();\n                this.ticker.stop();\n                this.stopCallbacks.forEach((cb) => cb());\n                if (calledFromAPI) {\n                    this.session.reset();\n                }\n                this.notify.log(\"OpenReplay tracking stopped.\");\n                if (this.worker && !restarting) {\n                    this.worker.postMessage(\"stop\");\n                }\n            }\n            finally {\n                this.activityState = ActivityState.NotActive;\n            }\n        }\n    }\n    restart() {\n        this.stop(false, true);\n        this.start({ forceNew: false });\n    }\n}\n","import { ConnectionInformation } from \"../common/messages.js\";\nexport default function (app) {\n    const connection = navigator.connection ||\n        navigator.mozConnection ||\n        navigator.webkitConnection;\n    if (connection === undefined) {\n        return;\n    }\n    const sendConnectionInformation = () => app.send(new ConnectionInformation(Math.round(connection.downlink * 1000), connection.type || 'unknown'));\n    sendConnectionInformation();\n    connection.addEventListener('change', sendConnectionInformation);\n}\n","import { hasTag } from \"../app/guards.js\";\nimport { IN_BROWSER } from \"../utils.js\";\nimport { ConsoleLog } from \"../common/messages.js\";\nconst printError = IN_BROWSER && 'InstallTrigger' in window // detect Firefox\n    ? (e) => e.message + '\\n' + e.stack\n    : (e) => e.stack || e.message;\nfunction printString(arg) {\n    if (arg === undefined) {\n        return 'undefined';\n    }\n    if (arg === null) {\n        return 'null';\n    }\n    if (arg instanceof Error) {\n        return printError(arg);\n    }\n    if (Array.isArray(arg)) {\n        return `Array(${arg.length})`;\n    }\n    return String(arg);\n}\nfunction printFloat(arg) {\n    if (typeof arg !== 'number')\n        return 'NaN';\n    return arg.toString();\n}\nfunction printInt(arg) {\n    if (typeof arg !== 'number')\n        return 'NaN';\n    return Math.floor(arg).toString();\n}\nfunction printObject(arg) {\n    if (arg === undefined) {\n        return 'undefined';\n    }\n    if (arg === null) {\n        return 'null';\n    }\n    if (arg instanceof Error) {\n        return printError(arg);\n    }\n    if (Array.isArray(arg)) {\n        const length = arg.length;\n        const values = arg.slice(0, 10).map(printString).join(', ');\n        return `Array(${length})[${values}]`;\n    }\n    if (typeof arg === 'object') {\n        const res = [];\n        let i = 0;\n        for (const k in arg) {\n            if (++i === 10) {\n                break;\n            }\n            const v = arg[k];\n            res.push(k + ': ' + printString(v));\n        }\n        return '{' + res.join(', ') + '}';\n    }\n    return arg.toString();\n}\nfunction printf(args) {\n    if (typeof args[0] === 'string') {\n        args.unshift(args.shift().replace(/%(o|s|f|d|i)/g, (s, t) => {\n            const arg = args.shift();\n            if (arg === undefined)\n                return s;\n            switch (t) {\n                case 'o':\n                    return printObject(arg);\n                case 's':\n                    return printString(arg);\n                case 'f':\n                    return printFloat(arg);\n                case 'd':\n                case 'i':\n                    return printInt(arg);\n                default:\n                    return s;\n            }\n        }));\n    }\n    return args.map(printObject).join(' ');\n}\nconst consoleMethods = ['log', 'info', 'warn', 'error', 'debug', 'assert'];\nexport default function (app, opts) {\n    const options = Object.assign({\n        consoleMethods,\n        consoleThrottling: 30,\n    }, opts);\n    if (!Array.isArray(options.consoleMethods) ||\n        options.consoleMethods.length === 0) {\n        return;\n    }\n    const sendConsoleLog = app.safe((level, args) => app.send(new ConsoleLog(level, printf(args))));\n    let n;\n    const reset = () => {\n        n = 0;\n    };\n    app.attachStartCallback(reset);\n    app.ticker.attach(reset, 33, false);\n    const patchConsole = (console) => options.consoleMethods.forEach((method) => {\n        if (consoleMethods.indexOf(method) === -1) {\n            console.error(`OpenReplay: unsupported console method \"${method}\"`);\n            return;\n        }\n        const fn = console[method];\n        console[method] = function (...args) {\n            fn.apply(this, args);\n            if (n++ > options.consoleThrottling) {\n                return;\n            }\n            sendConsoleLog(method, args);\n        };\n    });\n    patchConsole(window.console);\n    app.nodes.attachNodeCallback(app.safe(node => {\n        if (hasTag(node, \"IFRAME\")) { // TODO: newContextCallback\n            let context = node.contentWindow;\n            if (context) {\n                patchConsole(context.console);\n            }\n            app.attachEventListener(node, \"load\", () => {\n                if (node.contentWindow !== context) {\n                    context = node.contentWindow;\n                    patchConsole(context.console);\n                }\n            });\n        }\n    }));\n}\n","import { JSException } from \"../common/messages.js\";\nimport ErrorStackParser from 'error-stack-parser';\nfunction getDefaultStack(e) {\n    return [{\n            columnNumber: e.colno,\n            lineNumber: e.lineno,\n            fileName: e.filename,\n            functionName: \"\",\n            source: \"\",\n        }];\n}\nexport function getExceptionMessage(error, fallbackStack) {\n    let stack = fallbackStack;\n    try {\n        stack = ErrorStackParser.parse(error);\n    }\n    catch (e) {\n    }\n    return new JSException(error.name, error.message, JSON.stringify(stack));\n}\nexport function getExceptionMessageFromEvent(e) {\n    if (e instanceof ErrorEvent) {\n        if (e.error instanceof Error) {\n            return getExceptionMessage(e.error, getDefaultStack(e));\n        }\n        else {\n            let [name, message] = e.message.split(':');\n            if (!message) {\n                name = 'Error';\n                message = e.message;\n            }\n            return new JSException(name, message, JSON.stringify(getDefaultStack(e)));\n        }\n    }\n    else if ('PromiseRejectionEvent' in window && e instanceof PromiseRejectionEvent) {\n        if (e.reason instanceof Error) {\n            return getExceptionMessage(e.reason, []);\n        }\n        else {\n            let message;\n            try {\n                message = JSON.stringify(e.reason);\n            }\n            catch (_) {\n                message = String(e.reason);\n            }\n            return new JSException('Unhandled Promise Rejection', message, '[]');\n        }\n    }\n    return null;\n}\nexport default function (app, opts) {\n    const options = Object.assign({\n        captureExceptions: true,\n    }, opts);\n    if (options.captureExceptions) {\n        const handler = (e) => {\n            const msg = getExceptionMessageFromEvent(e);\n            if (msg != null) {\n                app.send(msg);\n            }\n        };\n        app.attachEventListener(window, 'unhandledrejection', (e) => handler(e));\n        app.attachEventListener(window, 'error', (e) => handler(e));\n    }\n}\n","import { timestamp, isURL } from \"../utils.js\";\nimport { ResourceTiming, SetNodeAttributeURLBased, SetNodeAttribute } from \"../common/messages.js\";\nimport { hasTag } from \"../app/guards.js\";\nfunction resolveURL(url, location = document.location) {\n    url = url.trim();\n    if (url.startsWith('/')) {\n        return location.origin + url;\n    }\n    else if (url.startsWith('http://') ||\n        url.startsWith('https://') ||\n        url.startsWith('data:') // any other possible value here?\n    ) {\n        return url;\n    }\n    else {\n        return location.origin + location.pathname + url;\n    }\n}\nconst PLACEHOLDER_SRC = \"https://static.openreplay.com/tracker/placeholder.jpeg\";\nexport default function (app) {\n    function sendPlaceholder(id, node) {\n        app.send(new SetNodeAttribute(id, \"src\", PLACEHOLDER_SRC));\n        const { width, height } = node.getBoundingClientRect();\n        if (!node.hasAttribute(\"width\")) {\n            app.send(new SetNodeAttribute(id, \"width\", String(width)));\n        }\n        if (!node.hasAttribute(\"height\")) {\n            app.send(new SetNodeAttribute(id, \"height\", String(height)));\n        }\n    }\n    const sendImgSrc = app.safe(function () {\n        const id = app.nodes.getID(this);\n        if (id === undefined) {\n            return;\n        }\n        const { src, complete, naturalWidth, naturalHeight, srcset } = this;\n        if (!complete) {\n            return;\n        }\n        const resolvedSrc = resolveURL(src || ''); // Src type is null sometimes. - is it true?\n        if (naturalWidth === 0 && naturalHeight === 0) {\n            if (isURL(resolvedSrc)) {\n                app.send(new ResourceTiming(timestamp(), 0, 0, 0, 0, 0, resolvedSrc, 'img'));\n            }\n        }\n        else if (resolvedSrc.length >= 1e5 || app.sanitizer.isMasked(id)) {\n            sendPlaceholder(id, this);\n        }\n        else {\n            app.send(new SetNodeAttribute(id, 'src', resolvedSrc));\n            if (srcset) {\n                const resolvedSrcset = srcset.split(',').map(str => resolveURL(str)).join(',');\n                app.send(new SetNodeAttribute(id, 'srcset', resolvedSrcset));\n            }\n        }\n    });\n    const observer = new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type === \"attributes\") {\n                const target = mutation.target;\n                const id = app.nodes.getID(target);\n                if (id === undefined) {\n                    return;\n                }\n                if (mutation.attributeName === \"src\") {\n                    const src = target.src;\n                    app.send(new SetNodeAttributeURLBased(id, 'src', src, app.getBaseHref()));\n                }\n                if (mutation.attributeName === \"srcset\") {\n                    const srcset = target.srcset;\n                    app.send(new SetNodeAttribute(id, 'srcset', srcset));\n                }\n            }\n        }\n    });\n    app.nodes.attachNodeCallback((node) => {\n        if (!hasTag(node, \"IMG\")) {\n            return;\n        }\n        app.nodes.attachElementListener('error', node, sendImgSrc);\n        app.nodes.attachElementListener('load', node, sendImgSrc);\n        sendImgSrc.call(node);\n        observer.observe(node, { attributes: true, attributeFilter: [\"src\", \"srcset\"] });\n    });\n}\n","import { normSpaces, IN_BROWSER, getLabelAttribute, hasOpenreplayAttribute, } from \"../utils.js\";\nimport { hasTag } from \"../app/guards.js\";\nimport { SetInputTarget, SetInputValue, SetInputChecked } from \"../common/messages.js\";\nconst INPUT_TYPES = ['text', 'password', 'email', 'search', 'number', 'range', 'date'];\nfunction isTextEditable(node) {\n    if (hasTag(node, \"TEXTAREA\")) {\n        return true;\n    }\n    if (!hasTag(node, \"INPUT\")) {\n        return false;\n    }\n    return INPUT_TYPES.includes(node.type);\n}\nfunction isCheckable(node) {\n    if (!hasTag(node, \"INPUT\")) {\n        return false;\n    }\n    const type = node.type;\n    return type === 'checkbox' || type === 'radio';\n}\nconst labelElementFor = IN_BROWSER && 'labels' in HTMLInputElement.prototype\n    ? (node) => {\n        let p = node;\n        while ((p = p.parentNode) !== null) {\n            if (hasTag(p, \"LABEL\")) {\n                return p;\n            }\n        }\n        const labels = node.labels;\n        if (labels !== null && labels.length === 1) {\n            return labels[0];\n        }\n    }\n    : (node) => {\n        let p = node;\n        while ((p = p.parentNode) !== null) {\n            if (hasTag(p, \"LABEL\")) {\n                return p;\n            }\n        }\n        const id = node.id;\n        if (id) {\n            const labels = document.querySelectorAll('label[for=\"' + id + '\"]');\n            if (labels !== null && labels.length === 1) {\n                return labels[0];\n            }\n        }\n    };\nexport function getInputLabel(node) {\n    let label = getLabelAttribute(node);\n    if (label === null) {\n        const labelElement = labelElementFor(node);\n        label = (labelElement && labelElement.innerText)\n            || node.placeholder\n            || node.name\n            || node.id\n            || node.className\n            || node.type;\n    }\n    return normSpaces(label).slice(0, 100);\n}\nexport default function (app, opts) {\n    const options = Object.assign({\n        obscureInputNumbers: true,\n        obscureInputEmails: true,\n        defaultInputMode: 0 /* Plain */,\n        obscureInputDates: false,\n    }, opts);\n    function sendInputTarget(id, node) {\n        const label = getInputLabel(node);\n        if (label !== '') {\n            app.send(new SetInputTarget(id, label));\n        }\n    }\n    function sendInputValue(id, node) {\n        let value = node.value;\n        let inputMode = options.defaultInputMode;\n        if (node.type === 'password' || hasOpenreplayAttribute(node, 'hidden')) {\n            inputMode = 2 /* Hidden */;\n        }\n        else if (hasOpenreplayAttribute(node, 'obscured') ||\n            (inputMode === 0 /* Plain */ &&\n                ((options.obscureInputNumbers && node.type !== 'date' && /\\d\\d\\d\\d/.test(value)) ||\n                    (options.obscureInputDates && node.type === 'date') ||\n                    (options.obscureInputEmails &&\n                        (node.type === 'email' || !!~value.indexOf('@')))))) {\n            inputMode = 1 /* Obscured */;\n        }\n        let mask = 0;\n        switch (inputMode) {\n            case 2 /* Hidden */:\n                mask = -1;\n                value = '';\n                break;\n            case 1 /* Obscured */:\n                mask = value.length;\n                value = '';\n                break;\n        }\n        app.send(new SetInputValue(id, value, mask));\n    }\n    const inputValues = new Map();\n    const checkableValues = new Map();\n    const registeredTargets = new Set();\n    app.attachStopCallback(() => {\n        inputValues.clear();\n        checkableValues.clear();\n        registeredTargets.clear();\n    });\n    app.ticker.attach(() => {\n        inputValues.forEach((value, id) => {\n            const node = app.nodes.getNode(id);\n            if (!node)\n                return;\n            if (!isTextEditable(node)) {\n                inputValues.delete(id);\n                return;\n            }\n            if (value !== node.value) {\n                inputValues.set(id, node.value);\n                if (!registeredTargets.has(id)) {\n                    registeredTargets.add(id);\n                    sendInputTarget(id, node);\n                }\n                sendInputValue(id, node);\n            }\n        });\n        checkableValues.forEach((checked, id) => {\n            const node = app.nodes.getNode(id);\n            if (!node)\n                return;\n            if (!isCheckable(node)) {\n                checkableValues.delete(id);\n                return;\n            }\n            if (checked !== node.checked) {\n                checkableValues.set(id, node.checked);\n                app.send(new SetInputChecked(id, node.checked));\n            }\n        });\n    });\n    app.ticker.attach(Set.prototype.clear, 100, false, registeredTargets);\n    app.nodes.attachNodeCallback(app.safe((node) => {\n        const id = app.nodes.getID(node);\n        if (id === undefined) {\n            return;\n        }\n        // TODO: support multiple select (?): use selectedOptions; Need send target?\n        if (hasTag(node, \"SELECT\")) {\n            sendInputValue(id, node);\n            app.attachEventListener(node, \"change\", () => {\n                sendInputValue(id, node);\n            });\n        }\n        if (isTextEditable(node)) {\n            inputValues.set(id, node.value);\n            sendInputValue(id, node);\n            return;\n        }\n        if (isCheckable(node)) {\n            checkableValues.set(id, node.checked);\n            app.send(new SetInputChecked(id, node.checked));\n            return;\n        }\n    }));\n}\n","import { hasTag, isSVGElement } from \"../app/guards.js\";\nimport { normSpaces, hasOpenreplayAttribute, getLabelAttribute, } from \"../utils.js\";\nimport { MouseMove, MouseClick } from \"../common/messages.js\";\nimport { getInputLabel } from \"./input.js\";\nfunction _getSelector(target) {\n    let el = target;\n    let selector = null;\n    do {\n        if (el.id) {\n            return `#${el.id}` + (selector ? ` > ${selector}` : '');\n        }\n        selector =\n            el.className.split(' ')\n                .map(cn => cn.trim())\n                .filter(cn => cn !== '')\n                .reduce((sel, cn) => `${sel}.${cn}`, el.tagName.toLowerCase()) +\n                (selector ? ` > ${selector}` : '');\n        if (el === document.body) {\n            return selector;\n        }\n        el = el.parentElement;\n    } while (el !== document.body && el !== null);\n    return selector;\n}\nfunction isClickable(element) {\n    const tag = element.tagName.toUpperCase();\n    return tag === 'BUTTON' ||\n        tag === 'A' ||\n        tag === 'LI' ||\n        tag === 'SELECT' ||\n        element.onclick != null ||\n        element.getAttribute('role') === 'button';\n    //|| element.className.includes(\"btn\")\n    // MBTODO: intersect addEventListener\n}\n//TODO: fix (typescript doesn't allow work when the guard is inside the function)\nfunction getTarget(target) {\n    if (target instanceof Element) {\n        return _getTarget(target);\n    }\n    return null;\n}\nfunction _getTarget(target) {\n    let element = target;\n    while (element !== null && element !== document.documentElement) {\n        if (hasOpenreplayAttribute(element, 'masked')) {\n            return null;\n        }\n        element = element.parentElement;\n    }\n    if (isSVGElement(target)) {\n        let owner = target.ownerSVGElement;\n        while (owner !== null) {\n            target = owner;\n            owner = owner.ownerSVGElement;\n        }\n    }\n    element = target;\n    while (element !== null && element !== document.documentElement) {\n        const tag = element.tagName.toUpperCase();\n        if (tag === 'LABEL') {\n            return null;\n        }\n        if (tag === 'INPUT') {\n            return element;\n        }\n        if (isClickable(element) ||\n            getLabelAttribute(element) !== null) {\n            return element;\n        }\n        element = element.parentElement;\n    }\n    return target === document.documentElement ? null : target;\n}\nexport default function (app) {\n    function getTargetLabel(target) {\n        const dl = getLabelAttribute(target);\n        if (dl !== null) {\n            return dl;\n        }\n        if (hasTag(target, \"INPUT\")) {\n            return getInputLabel(target);\n        }\n        if (isClickable(target)) {\n            let label = '';\n            if (target instanceof HTMLElement) {\n                label = app.sanitizer.getInnerTextSecure(target);\n            }\n            label = label || target.id || target.className;\n            return normSpaces(label).slice(0, 100);\n        }\n        return '';\n    }\n    let mousePositionX = -1;\n    let mousePositionY = -1;\n    let mousePositionChanged = false;\n    let mouseTarget = null;\n    let mouseTargetTime = 0;\n    app.attachStopCallback(() => {\n        mousePositionX = -1;\n        mousePositionY = -1;\n        mousePositionChanged = false;\n        mouseTarget = null;\n    });\n    const sendMouseMove = () => {\n        if (mousePositionChanged) {\n            app.send(new MouseMove(mousePositionX, mousePositionY));\n            mousePositionChanged = false;\n        }\n    };\n    const selectorMap = {};\n    function getSelector(id, target) {\n        return selectorMap[id] = selectorMap[id] || _getSelector(target);\n    }\n    app.attachEventListener(document.documentElement, 'mouseover', (e) => {\n        const target = getTarget(e.target);\n        if (target !== mouseTarget) {\n            mouseTarget = target;\n            mouseTargetTime = performance.now();\n        }\n    });\n    app.attachEventListener(document, 'mousemove', (e) => {\n        mousePositionX = e.clientX;\n        mousePositionY = e.clientY;\n        mousePositionChanged = true;\n    }, false);\n    app.attachEventListener(document, 'click', (e) => {\n        const target = getTarget(e.target);\n        if ((!e.clientX && !e.clientY) || target === null) {\n            return;\n        }\n        const id = app.nodes.getID(target);\n        if (id !== undefined) {\n            sendMouseMove();\n            app.send(new MouseClick(id, mouseTarget === target\n                ? Math.round(performance.now() - mouseTargetTime)\n                : 0, getTargetLabel(target), getSelector(id, target)), true);\n        }\n        mouseTarget = null;\n    });\n    app.ticker.attach(sendMouseMove, 10);\n}\n","import { hasTag } from \"../app/guards.js\";\nimport { isURL } from \"../utils.js\";\nimport { ResourceTiming, PageLoadTiming, PageRenderTiming } from \"../common/messages.js\";\nfunction getPaintBlocks(resources) {\n    const paintBlocks = [];\n    const elements = document.getElementsByTagName('*');\n    const styleURL = /url\\((\"[^\"]*\"|'[^']*'|[^)]*)\\)/i;\n    for (let i = 0; i < elements.length; i++) {\n        const element = elements[i];\n        let src = '';\n        if (hasTag(element, \"IMG\")) {\n            src = element.currentSrc || element.src;\n        }\n        if (!src) {\n            const backgroundImage = getComputedStyle(element).getPropertyValue('background-image');\n            if (backgroundImage) {\n                const matches = styleURL.exec(backgroundImage);\n                if (matches !== null) {\n                    src = matches[1];\n                    if (src.startsWith('\"') || src.startsWith(\"'\")) {\n                        src = src.substr(1, src.length - 2);\n                    }\n                }\n            }\n        }\n        if (!src)\n            continue;\n        const time = src.substr(0, 10) === 'data:image' ? 0 : resources[src];\n        if (time === undefined)\n            continue;\n        const rect = element.getBoundingClientRect();\n        const top = Math.max(rect.top, 0);\n        const left = Math.max(rect.left, 0);\n        const bottom = Math.min(rect.bottom, window.innerHeight ||\n            (document.documentElement && document.documentElement.clientHeight) ||\n            0);\n        const right = Math.min(rect.right, window.innerWidth ||\n            (document.documentElement && document.documentElement.clientWidth) ||\n            0);\n        if (bottom <= top || right <= left)\n            continue;\n        const area = (bottom - top) * (right - left);\n        paintBlocks.push({ time, area });\n    }\n    return paintBlocks;\n}\nfunction calculateSpeedIndex(firstContentfulPaint, paintBlocks) {\n    let a = (Math.max((document.documentElement && document.documentElement.clientWidth) || 0, window.innerWidth || 0) *\n        Math.max((document.documentElement && document.documentElement.clientHeight) ||\n            0, window.innerHeight || 0)) /\n        10;\n    let s = a * firstContentfulPaint;\n    for (let i = 0; i < paintBlocks.length; i++) {\n        const { time, area } = paintBlocks[i];\n        a += area;\n        s += area * (time > firstContentfulPaint ? time : firstContentfulPaint);\n    }\n    return a === 0 ? 0 : s / a;\n}\nexport default function (app, opts) {\n    const options = Object.assign({\n        captureResourceTimings: true,\n        capturePageLoadTimings: true,\n        capturePageRenderTimings: true,\n    }, opts);\n    if (!('PerformanceObserver' in window)) {\n        options.captureResourceTimings = false;\n    }\n    if (!options.captureResourceTimings) {\n        return;\n    } // Resources are necessary for all timings\n    let resources = {};\n    function resourceTiming(entry) {\n        if (entry.duration < 0 || !isURL(entry.name) || app.isServiceURL(entry.name))\n            return;\n        if (resources !== null) {\n            resources[entry.name] = entry.startTime + entry.duration;\n        }\n        app.send(new ResourceTiming(entry.startTime + performance.timing.navigationStart, entry.duration, entry.responseStart && entry.startTime\n            ? entry.responseStart - entry.startTime\n            : 0, entry.transferSize > entry.encodedBodySize\n            ? entry.transferSize - entry.encodedBodySize\n            : 0, entry.encodedBodySize || 0, entry.decodedBodySize || 0, entry.name, entry.initiatorType));\n    }\n    const observer = new PerformanceObserver((list) => list.getEntries().forEach(resourceTiming));\n    let prevSessionID;\n    app.attachStartCallback(function ({ sessionID }) {\n        if (sessionID !== prevSessionID) { // Send past page resources on a newly started session\n            performance.getEntriesByType('resource').forEach(resourceTiming);\n            prevSessionID = sessionID;\n        }\n        observer.observe({ entryTypes: ['resource'] });\n    });\n    app.attachStopCallback(function () {\n        observer.disconnect();\n    });\n    let firstPaint = 0, firstContentfulPaint = 0;\n    if (options.capturePageLoadTimings) {\n        let pageLoadTimingSent = false;\n        app.ticker.attach(() => {\n            if (pageLoadTimingSent) {\n                return;\n            }\n            if (firstPaint === 0 || firstContentfulPaint === 0) {\n                performance\n                    .getEntriesByType('paint')\n                    .forEach((entry) => {\n                    const { name, startTime } = entry;\n                    switch (name) {\n                        case 'first-paint':\n                            firstPaint = startTime;\n                            break;\n                        case 'first-contentful-paint':\n                            firstContentfulPaint = startTime;\n                            break;\n                    }\n                });\n            }\n            if (performance.timing.loadEventEnd || performance.now() > 30000) {\n                pageLoadTimingSent = true;\n                const { navigationStart, requestStart, responseStart, responseEnd, domContentLoadedEventStart, domContentLoadedEventEnd, loadEventStart, loadEventEnd, } = performance.timing;\n                app.send(new PageLoadTiming(requestStart - navigationStart || 0, responseStart - navigationStart || 0, responseEnd - navigationStart || 0, domContentLoadedEventStart - navigationStart || 0, domContentLoadedEventEnd - navigationStart || 0, loadEventStart - navigationStart || 0, loadEventEnd - navigationStart || 0, firstPaint, firstContentfulPaint));\n            }\n        }, 30);\n    }\n    if (options.capturePageRenderTimings) {\n        let visuallyComplete = 0, interactiveWindowStartTime = 0, interactiveWindowTickTime = 0, paintBlocks = null;\n        let pageRenderTimingSent = false;\n        app.ticker.attach(() => {\n            if (pageRenderTimingSent) {\n                return;\n            }\n            const time = performance.now();\n            if (resources !== null) {\n                visuallyComplete = Math.max.apply(null, Object.keys(resources).map((k) => resources[k]));\n                if (time - visuallyComplete > 1000) {\n                    paintBlocks = getPaintBlocks(resources);\n                    resources = null;\n                }\n            }\n            if (interactiveWindowTickTime !== null) {\n                if (time - interactiveWindowTickTime > 50) {\n                    interactiveWindowStartTime = time;\n                }\n                interactiveWindowTickTime =\n                    time - interactiveWindowStartTime > 5000 ? null : time;\n            }\n            if ((paintBlocks !== null && interactiveWindowTickTime === null) ||\n                time > 30000) {\n                pageRenderTimingSent = true;\n                resources = null;\n                const speedIndex = paintBlocks === null\n                    ? 0\n                    : calculateSpeedIndex(firstContentfulPaint || firstPaint, paintBlocks);\n                const timeToInteractive = interactiveWindowTickTime === null\n                    ? Math.max(interactiveWindowStartTime, firstContentfulPaint, performance.timing.domContentLoadedEventEnd -\n                        performance.timing.navigationStart || 0)\n                    : 0;\n                app.send(new PageRenderTiming(speedIndex, firstContentfulPaint > visuallyComplete\n                    ? firstContentfulPaint\n                    : visuallyComplete, timeToInteractive));\n            }\n        });\n    }\n}\n","import { SetViewportScroll, SetNodeScroll } from \"../common/messages.js\";\nimport { isElementNode } from \"../app/guards.js\";\nexport default function (app) {\n    let documentScroll = false;\n    const nodeScroll = new Map();\n    const sendSetViewportScroll = app.safe(() => app.send(new SetViewportScroll(window.pageXOffset ||\n        (document.documentElement && document.documentElement.scrollLeft) ||\n        (document.body && document.body.scrollLeft) ||\n        0, window.pageYOffset ||\n        (document.documentElement && document.documentElement.scrollTop) ||\n        (document.body && document.body.scrollTop) ||\n        0)));\n    const sendSetNodeScroll = app.safe((s, node) => {\n        const id = app.nodes.getID(node);\n        if (id !== undefined) {\n            app.send(new SetNodeScroll(id, s[0], s[1]));\n        }\n    });\n    app.attachStartCallback(sendSetViewportScroll);\n    app.attachStopCallback(() => {\n        documentScroll = false;\n        nodeScroll.clear();\n    });\n    app.nodes.attachNodeCallback((node, isStart) => {\n        if (isStart && isElementNode(node) && node.scrollLeft + node.scrollTop > 0) {\n            nodeScroll.set(node, [node.scrollLeft, node.scrollTop]);\n        }\n    });\n    app.attachEventListener(window, 'scroll', (e) => {\n        const target = e.target;\n        if (target === document) {\n            documentScroll = true;\n            return;\n        }\n        if (target instanceof Element) {\n            nodeScroll.set(target, [target.scrollLeft, target.scrollTop]);\n        }\n    });\n    app.ticker.attach(() => {\n        if (documentScroll) {\n            sendSetViewportScroll();\n            documentScroll = false;\n        }\n        nodeScroll.forEach(sendSetNodeScroll);\n        nodeScroll.clear();\n    }, 5, false);\n}\n","import { SetPageLocation, SetViewportSize, SetPageVisibility, } from \"../common/messages.js\";\nexport default function (app) {\n    let url, width, height;\n    let navigationStart = performance.timing.navigationStart;\n    const sendSetPageLocation = app.safe(() => {\n        const { URL } = document;\n        if (URL !== url) {\n            url = URL;\n            app.send(new SetPageLocation(url, document.referrer, navigationStart));\n            navigationStart = 0;\n        }\n    });\n    const sendSetViewportSize = app.safe(() => {\n        const { innerWidth, innerHeight } = window;\n        if (innerWidth !== width || innerHeight !== height) {\n            width = innerWidth;\n            height = innerHeight;\n            app.send(new SetViewportSize(width, height));\n        }\n    });\n    const sendSetPageVisibility = document.hidden === undefined\n        ? Function.prototype\n        : app.safe(() => app.send(new SetPageVisibility(document.hidden)));\n    app.attachStartCallback(() => {\n        url = '';\n        width = height = -1;\n        sendSetPageLocation();\n        sendSetViewportSize();\n        sendSetPageVisibility();\n    });\n    if (document.hidden !== undefined) {\n        app.attachEventListener(document, 'visibilitychange', sendSetPageVisibility, false, false);\n    }\n    app.ticker.attach(sendSetPageLocation, 1, false);\n    app.ticker.attach(sendSetViewportSize, 5, false);\n}\n","import { CSSInsertRuleURLBased, CSSDeleteRule, TechnicalInfo } from \"../common/messages.js\";\nimport { hasTag } from \"../app/guards.js\";\nexport default function (app) {\n    if (app === null) {\n        return;\n    }\n    if (!window.CSSStyleSheet) {\n        app.send(new TechnicalInfo(\"no_stylesheet_prototype_in_window\", \"\"));\n        return;\n    }\n    const processOperation = app.safe((stylesheet, index, rule) => {\n        const sendMessage = typeof rule === 'string'\n            ? (nodeID) => app.send(new CSSInsertRuleURLBased(nodeID, rule, index, app.getBaseHref()))\n            : (nodeID) => app.send(new CSSDeleteRule(nodeID, index));\n        // TODO: Extend messages to maintain nested rules (CSSGroupingRule prototype, as well as CSSKeyframesRule)\n        if (stylesheet.ownerNode == null) {\n            throw new Error(\"Owner Node not found\");\n        }\n        const nodeID = app.nodes.getID(stylesheet.ownerNode);\n        if (nodeID !== undefined) {\n            sendMessage(nodeID);\n        } // else error?\n    });\n    const { insertRule, deleteRule } = CSSStyleSheet.prototype;\n    CSSStyleSheet.prototype.insertRule = function (rule, index = 0) {\n        processOperation(this, index, rule);\n        return insertRule.call(this, rule, index);\n    };\n    CSSStyleSheet.prototype.deleteRule = function (index) {\n        processOperation(this, index);\n        return deleteRule.call(this, index);\n    };\n    app.nodes.attachNodeCallback((node) => {\n        if (!hasTag(node, \"STYLE\") || !node.sheet) {\n            return;\n        }\n        if (node.textContent !== null && node.textContent.trim().length > 0) {\n            return; // Only fully virtual sheets maintained so far\n        }\n        const rules = node.sheet.cssRules;\n        for (let i = 0; i < rules.length; i++) {\n            processOperation(node.sheet, i, rules[i].cssText);\n        }\n    });\n}\n","import App, { DEFAULT_INGEST_POINT } from \"./app/index.js\";\nexport { default as App } from './app/index.js';\nimport { UserAnonymousID, RawCustomEvent, CustomIssue } from \"./common/messages.js\";\nimport * as _Messages from \"./common/messages.js\";\nexport const Messages = _Messages;\nimport Connection from \"./modules/connection.js\";\nimport Console from \"./modules/console.js\";\nimport Exception, { getExceptionMessageFromEvent, getExceptionMessage } from \"./modules/exception.js\";\nimport Img from \"./modules/img.js\";\nimport Input from \"./modules/input.js\";\nimport Mouse from \"./modules/mouse.js\";\nimport Timing from \"./modules/timing.js\";\nimport Performance from \"./modules/performance.js\";\nimport Scroll from \"./modules/scroll.js\";\nimport Viewport from \"./modules/viewport.js\";\nimport CSSRules from \"./modules/cssrules.js\";\nimport { IN_BROWSER, deprecationWarn, DOCS_HOST } from \"./utils.js\";\nconst DOCS_SETUP = '/installation/setup-or';\nfunction processOptions(obj) {\n    if (obj == null) {\n        console.error(`OpenReplay: invalid options argument type. Please, check documentation on ${DOCS_HOST}${DOCS_SETUP}`);\n        return false;\n    }\n    if (typeof obj.projectKey !== 'string') {\n        if (typeof obj.projectKey !== 'number') {\n            if (typeof obj.projectID !== 'number') { // Back compatability\n                console.error(`OpenReplay: projectKey is missing or wrong type (string is expected). Please, check ${DOCS_HOST}${DOCS_SETUP} for more information.`);\n                return false;\n            }\n            else {\n                obj.projectKey = obj.projectID.toString();\n                deprecationWarn(\"`projectID` option\", \"`projectKey` option\", DOCS_SETUP);\n            }\n        }\n        else {\n            console.warn(\"OpenReplay: projectKey is expected to have a string type.\");\n            obj.projectKey = obj.projectKey.toString();\n        }\n    }\n    if (typeof obj.sessionToken !== 'string' && obj.sessionToken != null) {\n        console.warn(`OpenReplay: invalid options argument type. Please, check documentation on ${DOCS_HOST}${DOCS_SETUP}`);\n    }\n    return true;\n}\nexport default class API {\n    constructor(options) {\n        this.options = options;\n        this.app = null;\n        this.handleError = (e) => {\n            if (this.app === null) {\n                return;\n            }\n            if (e instanceof Error) {\n                this.app.send(getExceptionMessage(e, []));\n            }\n            else if (e instanceof ErrorEvent ||\n                ('PromiseRejectionEvent' in window && e instanceof PromiseRejectionEvent)) {\n                const msg = getExceptionMessageFromEvent(e);\n                if (msg != null) {\n                    this.app.send(msg);\n                }\n            }\n        };\n        if (!IN_BROWSER || !processOptions(options)) {\n            return;\n        }\n        if (window.__OPENREPLAY__) {\n            console.error(\"OpenReplay: one tracker instance has been initialised already\");\n            return;\n        }\n        if (!options.__DISABLE_SECURE_MODE && location.protocol !== 'https:') {\n            console.error(\"OpenReplay: Your website must be publicly accessible and running on SSL in order for OpenReplay to properly capture and replay the user session. You can disable this check by setting `__DISABLE_SECURE_MODE` option to `true` if you are testing in localhost. Keep in mind, that asset files on a local machine are not available to the outside world. This might affect tracking if you use css files.\");\n            return;\n        }\n        const doNotTrack = options.respectDoNotTrack &&\n            (navigator.doNotTrack == '1'\n                // @ts-ignore\n                || window.doNotTrack == '1');\n        const app = this.app = doNotTrack ||\n            !('Map' in window) ||\n            !('Set' in window) ||\n            !('MutationObserver' in window) ||\n            !('performance' in window) ||\n            !('timing' in performance) ||\n            !('startsWith' in String.prototype) ||\n            !('Blob' in window) ||\n            !('Worker' in window)\n            ? null\n            : new App(options.projectKey, options.sessionToken, options);\n        if (app !== null) {\n            Viewport(app);\n            CSSRules(app);\n            Connection(app);\n            Console(app, options);\n            Exception(app, options);\n            Img(app);\n            Input(app, options);\n            Mouse(app);\n            Timing(app, options);\n            Performance(app, options);\n            Scroll(app);\n            window.__OPENREPLAY__ = this;\n            if (options.autoResetOnWindowOpen) {\n                const wOpen = window.open;\n                app.attachStartCallback(() => {\n                    // @ts-ignore ?\n                    window.open = function (...args) {\n                        app.resetNextPageSession(true);\n                        wOpen.call(window, ...args);\n                        app.resetNextPageSession(false);\n                    };\n                });\n                app.attachStopCallback(() => {\n                    window.open = wOpen;\n                });\n            }\n        }\n        else {\n            console.log(\"OpenReplay: browser doesn't support API required for tracking or doNotTrack is set to 1.\");\n            const req = new XMLHttpRequest();\n            const orig = options.ingestPoint || DEFAULT_INGEST_POINT;\n            req.open(\"POST\", orig + \"/v1/web/not-started\");\n            // no-cors issue only with text/plain or not-set Content-Type\n            // req.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n            req.send(JSON.stringify({\n                trackerVersion: '3.5.16',\n                projectKey: options.projectKey,\n                doNotTrack,\n                // TODO: add precise reason (an exact API missing)\n            }));\n        }\n    }\n    use(fn) {\n        return fn(this.app, this.options);\n    }\n    isActive() {\n        if (this.app === null) {\n            return false;\n        }\n        return this.app.active();\n    }\n    start(startOpts) {\n        if (!IN_BROWSER) {\n            console.error(`OpenReplay: you are trying to start Tracker on a node.js environment. If you want to use OpenReplay with SSR, please, use componentDidMount or useEffect API for placing the \\`tracker.start()\\` line. Check documentation on ${DOCS_HOST}${DOCS_SETUP}`);\n            return Promise.reject(\"Trying to start not in browser.\");\n        }\n        if (this.app === null) {\n            return Promise.reject(\"Browser doesn't support required api, or doNotTrack is active.\");\n        }\n        // TODO: check argument type\n        return this.app.start(startOpts);\n    }\n    stop() {\n        if (this.app === null) {\n            return;\n        }\n        this.app.stop(true);\n    }\n    getSessionToken() {\n        if (this.app === null) {\n            return null;\n        }\n        return this.app.getSessionToken();\n    }\n    getSessionID() {\n        if (this.app === null) {\n            return null;\n        }\n        return this.app.getSessionID();\n    }\n    sessionID() {\n        deprecationWarn(\"'sessionID' method\", \"'getSessionID' method\", \"/\");\n        return this.getSessionID();\n    }\n    setUserID(id) {\n        if (typeof id === 'string' && this.app !== null) {\n            this.app.session.setUserID(id);\n        }\n    }\n    userID(id) {\n        deprecationWarn(\"'userID' method\", \"'setUserID' method\", \"/\");\n        this.setUserID(id);\n    }\n    setUserAnonymousID(id) {\n        if (typeof id === 'string' && this.app !== null) {\n            this.app.send(new UserAnonymousID(id));\n        }\n    }\n    userAnonymousID(id) {\n        deprecationWarn(\"'userAnonymousID' method\", \"'setUserAnonymousID' method\", \"/\");\n        this.setUserAnonymousID(id);\n    }\n    setMetadata(key, value) {\n        if (typeof key === 'string' &&\n            typeof value === 'string' &&\n            this.app !== null) {\n            this.app.session.setMetadata(key, value);\n        }\n    }\n    metadata(key, value) {\n        deprecationWarn(\"'metadata' method\", \"'setMetadata' method\", \"/\");\n        this.setMetadata(key, value);\n    }\n    event(key, payload, issue = false) {\n        if (typeof key === 'string' && this.app !== null) {\n            if (issue) {\n                return this.issue(key, payload);\n            }\n            else {\n                try {\n                    payload = JSON.stringify(payload);\n                }\n                catch (e) {\n                    return;\n                }\n                this.app.send(new RawCustomEvent(key, payload));\n            }\n        }\n    }\n    issue(key, payload) {\n        if (typeof key === 'string' && this.app !== null) {\n            try {\n                payload = JSON.stringify(payload);\n            }\n            catch (e) {\n                return;\n            }\n            this.app.send(new CustomIssue(key, payload));\n        }\n    }\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Libraries\nimport Tracker, { Options } from \"@openreplay/tracker\";\nimport { v4 as uuidV4 } from \"uuid\";\nexport interface IOpenReplayConfig extends Options {\n  projectKey: string;\n}\n\nexport interface IPayload {\n  name: string;\n  data: any;\n}\n\nexport type ReportError = Error | PromiseRejectedResult | ErrorEvent;\n\nexport interface IOpenReplayAction {\n  type: string;\n  payload?: IPayload | ReportError | string;\n}\n\nconst userId = uuidV4();\n\nconst newTracker = (config: IOpenReplayConfig) => {\n  const tracker = new Tracker(config);\n  tracker.setUserID(userId);\n  import(\"@openreplay/tracker-assist\").then(({ default: trackerAssist }) => {\n    tracker.use(\n      trackerAssist({\n        callConfirm: {\n          text: \"Our support team wants to help you\",\n          confirmBtn: {\n            innerHTML: \"👍 Accept\",\n          },\n          declineBtn: {\n            innerHTML: \"❌ Not at this moment\",\n          },\n        },\n        controlConfirm: {\n          text: \"Would you mind letting us control your application?\",\n          confirmBtn: {\n            innerHTML: \"👍 Accept\",\n          },\n          declineBtn: {\n            innerHTML: \"❌ Not at this moment\",\n          },\n        },\n      })\n    );\n  });\n\n  return tracker;\n};\n\nconst openReplayReducer = (state: any, action: IOpenReplayAction) => {\n  switch (action.type) {\n    case \"init\": {\n      if (!state.tracker) {\n        return { ...state, tracker: newTracker(state.config) };\n      }\n      return state;\n    }\n    case \"start\": {\n      state.tracker.start();\n      return state;\n    }\n    case \"logEvent\": {\n      const { name, data } = action.payload as IPayload;\n      state.tracker?.event(name, data);\n      return state;\n    }\n    case \"logIssue\": {\n      const { name, data } = action.payload as IPayload;\n      state.tracker?.issue(name, data);\n      return state;\n    }\n    case \"reportError\": {\n      const error = action.payload as ReportError;\n      state.tracker?.handleError(error);\n      return state;\n    }\n  }\n};\n\nexport default openReplayReducer;\n","// Libraries\nimport { ReactNode } from \"react\";\nimport { useReducer } from \"react\";\n\n// OpenReplay\nimport TrackerContext from \"./context\";\nimport openReplayReducer, {\n  IOpenReplayConfig,\n  IPayload,\n  ReportError,\n} from \"./reducer\";\n\ninterface TrackerProviderProps {\n  children: ReactNode;\n  config: Partial<IOpenReplayConfig>;\n}\n\nconst TrackerProvider = ({ children, config = {} }: TrackerProviderProps) => {\n  const [, dispatch] = useReducer(openReplayReducer, {\n    tracker: null,\n    config,\n  });\n  const value = {\n    startTracking: () => dispatch({ type: \"start\" }),\n    initTracker: () => dispatch({ type: \"init\" }),\n    logEvent: (evnt: IPayload) => dispatch({ type: \"logEvent\", payload: evnt }),\n    logIssue: (evnt: IPayload) => dispatch({ type: \"logIssue\", payload: evnt }),\n    reportError: (error: ReportError) =>\n      dispatch({ type: \"reportError\", payload: error }),\n  };\n\n  return (\n    <TrackerContext.Provider value={value}>{children}</TrackerContext.Provider>\n  );\n};\n\nexport default TrackerProvider;\n","export * from \"./context\";\nexport * from \"./provider\";\nexport * from \"./reducer\";\nexport { default as TrackerProvider } from \"./provider\";\nexport { default as TrackerContext } from \"./context\";\n","export * from \"./openReplay\";\n","// extracted by mini-css-extract-plugin","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n    var objectProps = ['evalOrigin'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps, objectProps);\n\n    function StackFrame(obj) {\n        if (!obj) return;\n        for (var i = 0; i < props.length; i++) {\n            if (obj[props[i]] !== undefined) {\n                this['set' + _capitalize(props[i])](obj[props[i]]);\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var fileName = this.getFileName() || '';\n            var lineNumber = this.getLineNumber() || '';\n            var columnNumber = this.getColumnNumber() || '';\n            var functionName = this.getFunctionName() || '';\n            if (this.getIsEval()) {\n                if (fileName) {\n                    return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n                }\n                return '[eval]:' + lineNumber + ':' + columnNumber;\n            }\n            if (functionName) {\n                return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n            }\n            return fileName + ':' + lineNumber + ':' + columnNumber;\n        }\n    };\n\n    StackFrame.fromString = function StackFrame$$fromString(str) {\n        var argsStartIndex = str.indexOf('(');\n        var argsEndIndex = str.lastIndexOf(')');\n\n        var functionName = str.substring(0, argsStartIndex);\n        var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');\n        var locationString = str.substring(argsEndIndex + 1);\n\n        if (locationString.indexOf('@') === 0) {\n            var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, '');\n            var fileName = parts[1];\n            var lineNumber = parts[2];\n            var columnNumber = parts[3];\n        }\n\n        return new StackFrame({\n            functionName: functionName,\n            args: args || undefined,\n            fileName: fileName,\n            lineNumber: lineNumber || undefined,\n            columnNumber: columnNumber || undefined\n        });\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","import defineProperty from './_define_property.mjs';\n\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\n\nexport default function _objectSpreadProps(target, source) {\n  source = source != null ? source : {}\n  if (Object.getOwnPropertyDescriptors) {\n    Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n  } else {\n    ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(\n        target,\n        key,\n        Object.getOwnPropertyDescriptor(source, key)\n      );\n    });\n  }\n\n  return target;\n}","(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[888],{\n\n/***/ 3768:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(984)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {}\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?::(\\d+))?(?::(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[()]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^()]*)|(,.*$)/g, '');\n                }\n                var sanitizedLine = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').replace(/^.*?\\s+/, '');\n\n                // capture and preseve the parenthesized location \"(/foo/my bar.js:12:87)\" in\n                // case it has spaces in it, as the string is split on \\s+ later on\n                var location = sanitizedLine.match(/ (\\(.+\\)$)/);\n\n                // remove the parenthesized location from the line, if it was matched\n                sanitizedLine = location ? sanitizedLine.replace(location[0], '') : sanitizedLine;\n\n                // if a location was matched, pass it to extractLocation() otherwise pass all sanitizedLine\n                // because this line doesn't have function name\n                var locationParts = this.extractLocation(location ? location[1] : sanitizedLine);\n                var functionName = location && sanitizedLine || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var functionNameRegex = /((.*\".+\"[^@]*)?[^@]*)(?:@)/;\n                    var matches = line.match(functionNameRegex);\n                    var functionName = matches && matches[1] ? matches[1] : undefined;\n                    var locationParts = this.extractLocation(line.replace(functionNameRegex, ''));\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                    .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                    .replace(/\\([^)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^(]+\\(([^)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n\n\n/***/ }),\n\n/***/ 3425:\n/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {\n\n\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(9871);\n      }\n    ]);\n    if(false) {}\n  \n\n/***/ }),\n\n/***/ 9871:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4737);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1527);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8439);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _vendors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1210);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(959);\n\n\n\n\n\nfunction MyApp(param) {\n    var Component = param.Component, pageProps = param.pageProps;\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_vendors__WEBPACK_IMPORTED_MODULE_2__/* .TrackerProvider */ .w, {\n        config: {\n            // Add projectKey here.\n            projectKey: \"IPQJ2ytBAXqwnwxtPmgh\"\n        },\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Component, (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z)({}, pageProps))\n    });\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (MyApp);\n\n\n/***/ }),\n\n/***/ 1210:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"f\": function() { return /* reexport */ context; },\n  \"w\": function() { return /* reexport */ provider; }\n});\n\n// EXTERNAL MODULE: ./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js\nvar react = __webpack_require__(959);\n;// CONCATENATED MODULE: ./vendors/openReplay/context.ts\n// Libraries\n\nvar TrackerContext = (0,react.createContext)({\n    startTracking: function() {},\n    initTracker: function() {},\n    logEvent: function() {},\n    logIssue: function() {},\n    reportError: function() {}\n});\n/* harmony default export */ var context = (TrackerContext);\n\n// EXTERNAL MODULE: ./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(1527);\n// EXTERNAL MODULE: ./node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_object_spread.mjs + 1 modules\nvar _object_spread = __webpack_require__(4737);\n// EXTERNAL MODULE: ./node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_object_spread_props.mjs\nvar _object_spread_props = __webpack_require__(8316);\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/common/messages.js\nfunction bindNew(Class) {\n    function _Class(...args) {\n        return new Class(...args);\n    }\n    _Class.prototype = Class.prototype;\n    return _Class;\n}\nconst classes = new Map();\nclass _BatchMeta {\n    constructor(pageNo, firstIndex, timestamp) {\n        this.pageNo = pageNo;\n        this.firstIndex = firstIndex;\n        this.timestamp = timestamp;\n        this._id = 80;\n    }\n    encode(writer) {\n        return writer.uint(80) &&\n            writer.uint(this.pageNo) &&\n            writer.uint(this.firstIndex) &&\n            writer.int(this.timestamp);\n    }\n}\nconst BatchMeta = bindNew(_BatchMeta);\nclasses.set(80, BatchMeta);\nclass _Timestamp {\n    constructor(timestamp) {\n        this.timestamp = timestamp;\n        this._id = 0;\n    }\n    encode(writer) {\n        return writer.uint(0) &&\n            writer.uint(this.timestamp);\n    }\n}\nconst Timestamp = bindNew(_Timestamp);\nclasses.set(0, Timestamp);\nclass _SetPageLocation {\n    constructor(url, referrer, navigationStart) {\n        this.url = url;\n        this.referrer = referrer;\n        this.navigationStart = navigationStart;\n        this._id = 4;\n    }\n    encode(writer) {\n        return writer.uint(4) &&\n            writer.string(this.url) &&\n            writer.string(this.referrer) &&\n            writer.uint(this.navigationStart);\n    }\n}\nconst SetPageLocation = bindNew(_SetPageLocation);\nclasses.set(4, SetPageLocation);\nclass _SetViewportSize {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        this._id = 5;\n    }\n    encode(writer) {\n        return writer.uint(5) &&\n            writer.uint(this.width) &&\n            writer.uint(this.height);\n    }\n}\nconst SetViewportSize = bindNew(_SetViewportSize);\nclasses.set(5, SetViewportSize);\nclass _SetViewportScroll {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this._id = 6;\n    }\n    encode(writer) {\n        return writer.uint(6) &&\n            writer.int(this.x) &&\n            writer.int(this.y);\n    }\n}\nconst SetViewportScroll = bindNew(_SetViewportScroll);\nclasses.set(6, SetViewportScroll);\nclass _CreateDocument {\n    constructor() {\n        this._id = 7;\n    }\n    encode(writer) {\n        return writer.uint(7);\n    }\n}\nconst CreateDocument = bindNew(_CreateDocument);\nclasses.set(7, CreateDocument);\nclass _CreateElementNode {\n    constructor(id, parentID, index, tag, svg) {\n        this.id = id;\n        this.parentID = parentID;\n        this.index = index;\n        this.tag = tag;\n        this.svg = svg;\n        this._id = 8;\n    }\n    encode(writer) {\n        return writer.uint(8) &&\n            writer.uint(this.id) &&\n            writer.uint(this.parentID) &&\n            writer.uint(this.index) &&\n            writer.string(this.tag) &&\n            writer.boolean(this.svg);\n    }\n}\nconst CreateElementNode = bindNew(_CreateElementNode);\nclasses.set(8, CreateElementNode);\nclass _CreateTextNode {\n    constructor(id, parentID, index) {\n        this.id = id;\n        this.parentID = parentID;\n        this.index = index;\n        this._id = 9;\n    }\n    encode(writer) {\n        return writer.uint(9) &&\n            writer.uint(this.id) &&\n            writer.uint(this.parentID) &&\n            writer.uint(this.index);\n    }\n}\nconst CreateTextNode = bindNew(_CreateTextNode);\nclasses.set(9, CreateTextNode);\nclass _MoveNode {\n    constructor(id, parentID, index) {\n        this.id = id;\n        this.parentID = parentID;\n        this.index = index;\n        this._id = 10;\n    }\n    encode(writer) {\n        return writer.uint(10) &&\n            writer.uint(this.id) &&\n            writer.uint(this.parentID) &&\n            writer.uint(this.index);\n    }\n}\nconst MoveNode = bindNew(_MoveNode);\nclasses.set(10, MoveNode);\nclass _RemoveNode {\n    constructor(id) {\n        this.id = id;\n        this._id = 11;\n    }\n    encode(writer) {\n        return writer.uint(11) &&\n            writer.uint(this.id);\n    }\n}\nconst RemoveNode = bindNew(_RemoveNode);\nclasses.set(11, RemoveNode);\nclass _SetNodeAttribute {\n    constructor(id, name, value) {\n        this.id = id;\n        this.name = name;\n        this.value = value;\n        this._id = 12;\n    }\n    encode(writer) {\n        return writer.uint(12) &&\n            writer.uint(this.id) &&\n            writer.string(this.name) &&\n            writer.string(this.value);\n    }\n}\nconst SetNodeAttribute = bindNew(_SetNodeAttribute);\nclasses.set(12, SetNodeAttribute);\nclass _RemoveNodeAttribute {\n    constructor(id, name) {\n        this.id = id;\n        this.name = name;\n        this._id = 13;\n    }\n    encode(writer) {\n        return writer.uint(13) &&\n            writer.uint(this.id) &&\n            writer.string(this.name);\n    }\n}\nconst RemoveNodeAttribute = bindNew(_RemoveNodeAttribute);\nclasses.set(13, RemoveNodeAttribute);\nclass _SetNodeData {\n    constructor(id, data) {\n        this.id = id;\n        this.data = data;\n        this._id = 14;\n    }\n    encode(writer) {\n        return writer.uint(14) &&\n            writer.uint(this.id) &&\n            writer.string(this.data);\n    }\n}\nconst SetNodeData = bindNew(_SetNodeData);\nclasses.set(14, SetNodeData);\nclass _SetNodeScroll {\n    constructor(id, x, y) {\n        this.id = id;\n        this.x = x;\n        this.y = y;\n        this._id = 16;\n    }\n    encode(writer) {\n        return writer.uint(16) &&\n            writer.uint(this.id) &&\n            writer.int(this.x) &&\n            writer.int(this.y);\n    }\n}\nconst SetNodeScroll = bindNew(_SetNodeScroll);\nclasses.set(16, SetNodeScroll);\nclass _SetInputTarget {\n    constructor(id, label) {\n        this.id = id;\n        this.label = label;\n        this._id = 17;\n    }\n    encode(writer) {\n        return writer.uint(17) &&\n            writer.uint(this.id) &&\n            writer.string(this.label);\n    }\n}\nconst SetInputTarget = bindNew(_SetInputTarget);\nclasses.set(17, SetInputTarget);\nclass _SetInputValue {\n    constructor(id, value, mask) {\n        this.id = id;\n        this.value = value;\n        this.mask = mask;\n        this._id = 18;\n    }\n    encode(writer) {\n        return writer.uint(18) &&\n            writer.uint(this.id) &&\n            writer.string(this.value) &&\n            writer.int(this.mask);\n    }\n}\nconst SetInputValue = bindNew(_SetInputValue);\nclasses.set(18, SetInputValue);\nclass _SetInputChecked {\n    constructor(id, checked) {\n        this.id = id;\n        this.checked = checked;\n        this._id = 19;\n    }\n    encode(writer) {\n        return writer.uint(19) &&\n            writer.uint(this.id) &&\n            writer.boolean(this.checked);\n    }\n}\nconst SetInputChecked = bindNew(_SetInputChecked);\nclasses.set(19, SetInputChecked);\nclass _MouseMove {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this._id = 20;\n    }\n    encode(writer) {\n        return writer.uint(20) &&\n            writer.uint(this.x) &&\n            writer.uint(this.y);\n    }\n}\nconst MouseMove = bindNew(_MouseMove);\nclasses.set(20, MouseMove);\nclass _ConsoleLog {\n    constructor(level, value) {\n        this.level = level;\n        this.value = value;\n        this._id = 22;\n    }\n    encode(writer) {\n        return writer.uint(22) &&\n            writer.string(this.level) &&\n            writer.string(this.value);\n    }\n}\nconst ConsoleLog = bindNew(_ConsoleLog);\nclasses.set(22, ConsoleLog);\nclass _PageLoadTiming {\n    constructor(requestStart, responseStart, responseEnd, domContentLoadedEventStart, domContentLoadedEventEnd, loadEventStart, loadEventEnd, firstPaint, firstContentfulPaint) {\n        this.requestStart = requestStart;\n        this.responseStart = responseStart;\n        this.responseEnd = responseEnd;\n        this.domContentLoadedEventStart = domContentLoadedEventStart;\n        this.domContentLoadedEventEnd = domContentLoadedEventEnd;\n        this.loadEventStart = loadEventStart;\n        this.loadEventEnd = loadEventEnd;\n        this.firstPaint = firstPaint;\n        this.firstContentfulPaint = firstContentfulPaint;\n        this._id = 23;\n    }\n    encode(writer) {\n        return writer.uint(23) &&\n            writer.uint(this.requestStart) &&\n            writer.uint(this.responseStart) &&\n            writer.uint(this.responseEnd) &&\n            writer.uint(this.domContentLoadedEventStart) &&\n            writer.uint(this.domContentLoadedEventEnd) &&\n            writer.uint(this.loadEventStart) &&\n            writer.uint(this.loadEventEnd) &&\n            writer.uint(this.firstPaint) &&\n            writer.uint(this.firstContentfulPaint);\n    }\n}\nconst PageLoadTiming = bindNew(_PageLoadTiming);\nclasses.set(23, PageLoadTiming);\nclass _PageRenderTiming {\n    constructor(speedIndex, visuallyComplete, timeToInteractive) {\n        this.speedIndex = speedIndex;\n        this.visuallyComplete = visuallyComplete;\n        this.timeToInteractive = timeToInteractive;\n        this._id = 24;\n    }\n    encode(writer) {\n        return writer.uint(24) &&\n            writer.uint(this.speedIndex) &&\n            writer.uint(this.visuallyComplete) &&\n            writer.uint(this.timeToInteractive);\n    }\n}\nconst PageRenderTiming = bindNew(_PageRenderTiming);\nclasses.set(24, PageRenderTiming);\nclass _JSException {\n    constructor(name, message, payload) {\n        this.name = name;\n        this.message = message;\n        this.payload = payload;\n        this._id = 25;\n    }\n    encode(writer) {\n        return writer.uint(25) &&\n            writer.string(this.name) &&\n            writer.string(this.message) &&\n            writer.string(this.payload);\n    }\n}\nconst JSException = bindNew(_JSException);\nclasses.set(25, JSException);\nclass _RawCustomEvent {\n    constructor(name, payload) {\n        this.name = name;\n        this.payload = payload;\n        this._id = 27;\n    }\n    encode(writer) {\n        return writer.uint(27) &&\n            writer.string(this.name) &&\n            writer.string(this.payload);\n    }\n}\nconst RawCustomEvent = bindNew(_RawCustomEvent);\nclasses.set(27, RawCustomEvent);\nclass _UserID {\n    constructor(id) {\n        this.id = id;\n        this._id = 28;\n    }\n    encode(writer) {\n        return writer.uint(28) &&\n            writer.string(this.id);\n    }\n}\nconst UserID = bindNew(_UserID);\nclasses.set(28, UserID);\nclass _UserAnonymousID {\n    constructor(id) {\n        this.id = id;\n        this._id = 29;\n    }\n    encode(writer) {\n        return writer.uint(29) &&\n            writer.string(this.id);\n    }\n}\nconst UserAnonymousID = bindNew(_UserAnonymousID);\nclasses.set(29, UserAnonymousID);\nclass _Metadata {\n    constructor(key, value) {\n        this.key = key;\n        this.value = value;\n        this._id = 30;\n    }\n    encode(writer) {\n        return writer.uint(30) &&\n            writer.string(this.key) &&\n            writer.string(this.value);\n    }\n}\nconst Metadata = bindNew(_Metadata);\nclasses.set(30, Metadata);\nclass _CSSInsertRule {\n    constructor(id, rule, index) {\n        this.id = id;\n        this.rule = rule;\n        this.index = index;\n        this._id = 37;\n    }\n    encode(writer) {\n        return writer.uint(37) &&\n            writer.uint(this.id) &&\n            writer.string(this.rule) &&\n            writer.uint(this.index);\n    }\n}\nconst CSSInsertRule = bindNew(_CSSInsertRule);\nclasses.set(37, CSSInsertRule);\nclass _CSSDeleteRule {\n    constructor(id, index) {\n        this.id = id;\n        this.index = index;\n        this._id = 38;\n    }\n    encode(writer) {\n        return writer.uint(38) &&\n            writer.uint(this.id) &&\n            writer.uint(this.index);\n    }\n}\nconst CSSDeleteRule = bindNew(_CSSDeleteRule);\nclasses.set(38, CSSDeleteRule);\nclass _Fetch {\n    constructor(method, url, request, response, status, timestamp, duration) {\n        this.method = method;\n        this.url = url;\n        this.request = request;\n        this.response = response;\n        this.status = status;\n        this.timestamp = timestamp;\n        this.duration = duration;\n        this._id = 39;\n    }\n    encode(writer) {\n        return writer.uint(39) &&\n            writer.string(this.method) &&\n            writer.string(this.url) &&\n            writer.string(this.request) &&\n            writer.string(this.response) &&\n            writer.uint(this.status) &&\n            writer.uint(this.timestamp) &&\n            writer.uint(this.duration);\n    }\n}\nconst Fetch = bindNew(_Fetch);\nclasses.set(39, Fetch);\nclass _Profiler {\n    constructor(name, duration, args, result) {\n        this.name = name;\n        this.duration = duration;\n        this.args = args;\n        this.result = result;\n        this._id = 40;\n    }\n    encode(writer) {\n        return writer.uint(40) &&\n            writer.string(this.name) &&\n            writer.uint(this.duration) &&\n            writer.string(this.args) &&\n            writer.string(this.result);\n    }\n}\nconst Profiler = bindNew(_Profiler);\nclasses.set(40, Profiler);\nclass _OTable {\n    constructor(key, value) {\n        this.key = key;\n        this.value = value;\n        this._id = 41;\n    }\n    encode(writer) {\n        return writer.uint(41) &&\n            writer.string(this.key) &&\n            writer.string(this.value);\n    }\n}\nconst OTable = bindNew(_OTable);\nclasses.set(41, OTable);\nclass _StateAction {\n    constructor(type) {\n        this.type = type;\n        this._id = 42;\n    }\n    encode(writer) {\n        return writer.uint(42) &&\n            writer.string(this.type);\n    }\n}\nconst StateAction = bindNew(_StateAction);\nclasses.set(42, StateAction);\nclass _Redux {\n    constructor(action, state, duration) {\n        this.action = action;\n        this.state = state;\n        this.duration = duration;\n        this._id = 44;\n    }\n    encode(writer) {\n        return writer.uint(44) &&\n            writer.string(this.action) &&\n            writer.string(this.state) &&\n            writer.uint(this.duration);\n    }\n}\nconst Redux = bindNew(_Redux);\nclasses.set(44, Redux);\nclass _Vuex {\n    constructor(mutation, state) {\n        this.mutation = mutation;\n        this.state = state;\n        this._id = 45;\n    }\n    encode(writer) {\n        return writer.uint(45) &&\n            writer.string(this.mutation) &&\n            writer.string(this.state);\n    }\n}\nconst Vuex = bindNew(_Vuex);\nclasses.set(45, Vuex);\nclass _MobX {\n    constructor(type, payload) {\n        this.type = type;\n        this.payload = payload;\n        this._id = 46;\n    }\n    encode(writer) {\n        return writer.uint(46) &&\n            writer.string(this.type) &&\n            writer.string(this.payload);\n    }\n}\nconst MobX = bindNew(_MobX);\nclasses.set(46, MobX);\nclass _NgRx {\n    constructor(action, state, duration) {\n        this.action = action;\n        this.state = state;\n        this.duration = duration;\n        this._id = 47;\n    }\n    encode(writer) {\n        return writer.uint(47) &&\n            writer.string(this.action) &&\n            writer.string(this.state) &&\n            writer.uint(this.duration);\n    }\n}\nconst NgRx = bindNew(_NgRx);\nclasses.set(47, NgRx);\nclass _GraphQL {\n    constructor(operationKind, operationName, variables, response) {\n        this.operationKind = operationKind;\n        this.operationName = operationName;\n        this.variables = variables;\n        this.response = response;\n        this._id = 48;\n    }\n    encode(writer) {\n        return writer.uint(48) &&\n            writer.string(this.operationKind) &&\n            writer.string(this.operationName) &&\n            writer.string(this.variables) &&\n            writer.string(this.response);\n    }\n}\nconst GraphQL = bindNew(_GraphQL);\nclasses.set(48, GraphQL);\nclass _PerformanceTrack {\n    constructor(frames, ticks, totalJSHeapSize, usedJSHeapSize) {\n        this.frames = frames;\n        this.ticks = ticks;\n        this.totalJSHeapSize = totalJSHeapSize;\n        this.usedJSHeapSize = usedJSHeapSize;\n        this._id = 49;\n    }\n    encode(writer) {\n        return writer.uint(49) &&\n            writer.int(this.frames) &&\n            writer.int(this.ticks) &&\n            writer.uint(this.totalJSHeapSize) &&\n            writer.uint(this.usedJSHeapSize);\n    }\n}\nconst PerformanceTrack = bindNew(_PerformanceTrack);\nclasses.set(49, PerformanceTrack);\nclass _ResourceTiming {\n    constructor(timestamp, duration, ttfb, headerSize, encodedBodySize, decodedBodySize, url, initiator) {\n        this.timestamp = timestamp;\n        this.duration = duration;\n        this.ttfb = ttfb;\n        this.headerSize = headerSize;\n        this.encodedBodySize = encodedBodySize;\n        this.decodedBodySize = decodedBodySize;\n        this.url = url;\n        this.initiator = initiator;\n        this._id = 53;\n    }\n    encode(writer) {\n        return writer.uint(53) &&\n            writer.uint(this.timestamp) &&\n            writer.uint(this.duration) &&\n            writer.uint(this.ttfb) &&\n            writer.uint(this.headerSize) &&\n            writer.uint(this.encodedBodySize) &&\n            writer.uint(this.decodedBodySize) &&\n            writer.string(this.url) &&\n            writer.string(this.initiator);\n    }\n}\nconst ResourceTiming = bindNew(_ResourceTiming);\nclasses.set(53, ResourceTiming);\nclass _ConnectionInformation {\n    constructor(downlink, type) {\n        this.downlink = downlink;\n        this.type = type;\n        this._id = 54;\n    }\n    encode(writer) {\n        return writer.uint(54) &&\n            writer.uint(this.downlink) &&\n            writer.string(this.type);\n    }\n}\nconst ConnectionInformation = bindNew(_ConnectionInformation);\nclasses.set(54, ConnectionInformation);\nclass _SetPageVisibility {\n    constructor(hidden) {\n        this.hidden = hidden;\n        this._id = 55;\n    }\n    encode(writer) {\n        return writer.uint(55) &&\n            writer.boolean(this.hidden);\n    }\n}\nconst SetPageVisibility = bindNew(_SetPageVisibility);\nclasses.set(55, SetPageVisibility);\nclass _LongTask {\n    constructor(timestamp, duration, context, containerType, containerSrc, containerId, containerName) {\n        this.timestamp = timestamp;\n        this.duration = duration;\n        this.context = context;\n        this.containerType = containerType;\n        this.containerSrc = containerSrc;\n        this.containerId = containerId;\n        this.containerName = containerName;\n        this._id = 59;\n    }\n    encode(writer) {\n        return writer.uint(59) &&\n            writer.uint(this.timestamp) &&\n            writer.uint(this.duration) &&\n            writer.uint(this.context) &&\n            writer.uint(this.containerType) &&\n            writer.string(this.containerSrc) &&\n            writer.string(this.containerId) &&\n            writer.string(this.containerName);\n    }\n}\nconst LongTask = bindNew(_LongTask);\nclasses.set(59, LongTask);\nclass _SetNodeAttributeURLBased {\n    constructor(id, name, value, baseURL) {\n        this.id = id;\n        this.name = name;\n        this.value = value;\n        this.baseURL = baseURL;\n        this._id = 60;\n    }\n    encode(writer) {\n        return writer.uint(60) &&\n            writer.uint(this.id) &&\n            writer.string(this.name) &&\n            writer.string(this.value) &&\n            writer.string(this.baseURL);\n    }\n}\nconst SetNodeAttributeURLBased = bindNew(_SetNodeAttributeURLBased);\nclasses.set(60, SetNodeAttributeURLBased);\nclass _SetCSSDataURLBased {\n    constructor(id, data, baseURL) {\n        this.id = id;\n        this.data = data;\n        this.baseURL = baseURL;\n        this._id = 61;\n    }\n    encode(writer) {\n        return writer.uint(61) &&\n            writer.uint(this.id) &&\n            writer.string(this.data) &&\n            writer.string(this.baseURL);\n    }\n}\nconst SetCSSDataURLBased = bindNew(_SetCSSDataURLBased);\nclasses.set(61, SetCSSDataURLBased);\nclass _TechnicalInfo {\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n        this._id = 63;\n    }\n    encode(writer) {\n        return writer.uint(63) &&\n            writer.string(this.type) &&\n            writer.string(this.value);\n    }\n}\nconst TechnicalInfo = bindNew(_TechnicalInfo);\nclasses.set(63, TechnicalInfo);\nclass _CustomIssue {\n    constructor(name, payload) {\n        this.name = name;\n        this.payload = payload;\n        this._id = 64;\n    }\n    encode(writer) {\n        return writer.uint(64) &&\n            writer.string(this.name) &&\n            writer.string(this.payload);\n    }\n}\nconst CustomIssue = bindNew(_CustomIssue);\nclasses.set(64, CustomIssue);\nclass _PageClose {\n    constructor() {\n        this._id = 65;\n    }\n    encode(writer) {\n        return writer.uint(65);\n    }\n}\nconst PageClose = bindNew(_PageClose);\nclasses.set(65, PageClose);\nclass _CSSInsertRuleURLBased {\n    constructor(id, rule, index, baseURL) {\n        this.id = id;\n        this.rule = rule;\n        this.index = index;\n        this.baseURL = baseURL;\n        this._id = 67;\n    }\n    encode(writer) {\n        return writer.uint(67) &&\n            writer.uint(this.id) &&\n            writer.string(this.rule) &&\n            writer.uint(this.index) &&\n            writer.string(this.baseURL);\n    }\n}\nconst CSSInsertRuleURLBased = bindNew(_CSSInsertRuleURLBased);\nclasses.set(67, CSSInsertRuleURLBased);\nclass _MouseClick {\n    constructor(id, hesitationTime, label, selector) {\n        this.id = id;\n        this.hesitationTime = hesitationTime;\n        this.label = label;\n        this.selector = selector;\n        this._id = 69;\n    }\n    encode(writer) {\n        return writer.uint(69) &&\n            writer.uint(this.id) &&\n            writer.uint(this.hesitationTime) &&\n            writer.string(this.label) &&\n            writer.string(this.selector);\n    }\n}\nconst MouseClick = bindNew(_MouseClick);\nclasses.set(69, MouseClick);\nclass _CreateIFrameDocument {\n    constructor(frameID, id) {\n        this.frameID = frameID;\n        this.id = id;\n        this._id = 70;\n    }\n    encode(writer) {\n        return writer.uint(70) &&\n            writer.uint(this.frameID) &&\n            writer.uint(this.id);\n    }\n}\nconst CreateIFrameDocument = bindNew(_CreateIFrameDocument);\nclasses.set(70, CreateIFrameDocument);\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/utils.js\nfunction timestamp() {\n    return Math.round(performance.now()) + performance.timing.navigationStart;\n}\nconst stars = 'repeat' in String.prototype\n    ? (str) => '*'.repeat(str.length)\n    : (str) => str.replace(/./g, '*');\nfunction normSpaces(str) {\n    return str.trim().replace(/\\s+/g, ' ');\n}\n// isAbsoluteUrl regexp:  /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url)\nfunction isURL(s) {\n    return s.startsWith('https://') || s.startsWith('http://');\n}\nconst IN_BROWSER = !(typeof window === \"undefined\");\n// TODO: JOIN IT WITH LOGGER somehow (use logging decorators?); Don't forget about index.js loggin when there is no logger instance.\nconst DOCS_HOST = 'https://docs.openreplay.com';\nconst warnedFeatures = {};\nfunction deprecationWarn(nameOfFeature, useInstead, docsPath = \"/\") {\n    if (warnedFeatures[nameOfFeature]) {\n        return;\n    }\n    console.warn(`OpenReplay: ${nameOfFeature} is deprecated. ${useInstead ? `Please, use ${useInstead} instead.` : \"\"} Visit ${DOCS_HOST}${docsPath} for more information.`);\n    warnedFeatures[nameOfFeature] = true;\n}\nfunction getLabelAttribute(e) {\n    let value = e.getAttribute(\"data-openreplay-label\");\n    if (value !== null) {\n        return value;\n    }\n    value = e.getAttribute(\"data-asayer-label\");\n    if (value !== null) {\n        deprecationWarn(`\"data-asayer-label\" attribute`, `\"data-openreplay-label\" attribute`, \"/\");\n    }\n    return value;\n}\nfunction hasOpenreplayAttribute(e, name) {\n    const newName = `data-openreplay-${name}`;\n    if (e.hasAttribute(newName)) {\n        return true;\n    }\n    const oldName = `data-asayer-${name}`;\n    if (e.hasAttribute(oldName)) {\n        deprecationWarn(`\"${oldName}\" attribute`, `\"${newName}\" attribute`, \"/installation/sanitize-data\");\n        return true;\n    }\n    return false;\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/app/nodes.js\nclass Nodes {\n    constructor(node_id) {\n        this.node_id = node_id;\n        this.nodes = [];\n        this.nodeCallbacks = [];\n        this.elementListeners = new Map();\n    }\n    attachNodeCallback(nodeCallback) {\n        this.nodeCallbacks.push(nodeCallback);\n    }\n    attachElementListener(type, node, elementListener) {\n        const id = this.getID(node);\n        if (id === undefined) {\n            return;\n        }\n        node.addEventListener(type, elementListener);\n        let listeners = this.elementListeners.get(id);\n        if (listeners === undefined) {\n            listeners = [];\n            this.elementListeners.set(id, listeners);\n            return;\n        }\n        listeners.push([type, elementListener]);\n    }\n    registerNode(node) {\n        let id = node[this.node_id];\n        const isNew = id === undefined;\n        if (isNew) {\n            id = this.nodes.length;\n            this.nodes[id] = node;\n            node[this.node_id] = id;\n        }\n        return [id, isNew];\n    }\n    unregisterNode(node) {\n        const id = node[this.node_id];\n        if (id !== undefined) {\n            delete node[this.node_id];\n            delete this.nodes[id];\n            const listeners = this.elementListeners.get(id);\n            if (listeners !== undefined) {\n                this.elementListeners.delete(id);\n                listeners.forEach((listener) => node.removeEventListener(listener[0], listener[1]));\n            }\n        }\n        return id;\n    }\n    cleanTree() {\n        // sadly we keep empty items in array here resulting in some memory still being used\n        // but its still better than keeping dead nodes or undef elements\n        // plus we keep our index positions for new/alive nodes\n        // performance test: 3ms for 30k nodes with 17k dead ones\n        for (let i = 0; i < this.nodes.length; i++) {\n            const node = this.nodes[i];\n            if (node && !document.contains(node)) {\n                this.unregisterNode(node);\n            }\n        }\n    }\n    callNodeCallbacks(node, isStart) {\n        this.nodeCallbacks.forEach((cb) => cb(node, isStart));\n    }\n    getID(node) {\n        return node[this.node_id];\n    }\n    getNode(id) {\n        return this.nodes[id];\n    }\n    clear() {\n        for (let id = 0; id < this.nodes.length; id++) {\n            const node = this.nodes[id];\n            if (node === undefined) {\n                continue;\n            }\n            this.unregisterNode(node);\n        }\n        this.nodes.length = 0;\n    }\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/app/guards.js\nfunction isSVGElement(node) {\n    return node.namespaceURI === 'http://www.w3.org/2000/svg';\n}\nfunction isElementNode(node) {\n    return node.nodeType === Node.ELEMENT_NODE;\n}\nfunction isTextNode(node) {\n    return node.nodeType === Node.TEXT_NODE;\n}\nfunction isRootNode(node) {\n    return node.nodeType === Node.DOCUMENT_NODE ||\n        node.nodeType === Node.DOCUMENT_FRAGMENT_NODE;\n}\nfunction hasTag(el, tagName) {\n    return el.nodeName === tagName;\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/app/observer/observer.js\n\n\nfunction isIgnored(node) {\n    if (isTextNode(node)) {\n        return false;\n    }\n    if (!isElementNode(node)) {\n        return true;\n    }\n    const tag = node.tagName.toUpperCase();\n    if (tag === 'LINK') {\n        const rel = node.getAttribute('rel');\n        const as = node.getAttribute('as');\n        return !((rel === null || rel === void 0 ? void 0 : rel.includes('stylesheet')) || as === \"style\" || as === \"font\");\n    }\n    return (tag === 'SCRIPT' ||\n        tag === 'NOSCRIPT' ||\n        tag === 'META' ||\n        tag === 'TITLE' ||\n        tag === 'BASE');\n}\nfunction isObservable(node) {\n    if (isRootNode(node)) {\n        return true;\n    }\n    return !isIgnored(node);\n}\n/*\n  TODO:\n    - fix unbinding logic + send all removals first (ensure sequence is correct)\n    - use document as a 0-node in the upper context (should be updated in player at first)\n*/\n/*\n  Nikita:\n    - rn we only send unbind event for parent (all child nodes will be cut in the live replay anyways)\n      to prevent sending 1k+ unbinds for child nodes and making replay file bigger than it should be\n*/\nvar RecentsType;\n(function (RecentsType) {\n    RecentsType[RecentsType[\"New\"] = 0] = \"New\";\n    RecentsType[RecentsType[\"Removed\"] = 1] = \"Removed\";\n    RecentsType[RecentsType[\"Changed\"] = 2] = \"Changed\";\n    RecentsType[RecentsType[\"RemovedChild\"] = 3] = \"RemovedChild\";\n})(RecentsType || (RecentsType = {}));\nclass Observer {\n    constructor(app, isTopContext = false) {\n        this.app = app;\n        this.isTopContext = isTopContext;\n        this.commited = [];\n        this.recents = new Map();\n        this.indexes = [];\n        this.attributesMap = new Map();\n        this.textSet = new Set();\n        this.observer = new MutationObserver(this.app.safe((mutations) => {\n            for (const mutation of mutations) { // mutations order is sequential\n                const target = mutation.target;\n                const type = mutation.type;\n                if (!isObservable(target)) {\n                    continue;\n                }\n                if (type === 'childList') {\n                    for (let i = 0; i < mutation.removedNodes.length; i++) {\n                        this.bindTree(mutation.removedNodes[i], true);\n                    }\n                    for (let i = 0; i < mutation.addedNodes.length; i++) {\n                        this.bindTree(mutation.addedNodes[i]);\n                    }\n                    continue;\n                }\n                const id = this.app.nodes.getID(target);\n                if (id === undefined) {\n                    continue;\n                }\n                if (!this.recents.has(id)) {\n                    this.recents.set(id, RecentsType.Changed); // TODO only when altered\n                }\n                if (type === 'attributes') {\n                    const name = mutation.attributeName;\n                    if (name === null) {\n                        continue;\n                    }\n                    let attr = this.attributesMap.get(id);\n                    if (attr === undefined) {\n                        this.attributesMap.set(id, attr = new Set());\n                    }\n                    attr.add(name);\n                    continue;\n                }\n                if (type === 'characterData') {\n                    this.textSet.add(id);\n                    continue;\n                }\n            }\n            this.commitNodes();\n        }));\n    }\n    clear() {\n        this.commited.length = 0;\n        this.recents.clear();\n        this.indexes.length = 1;\n        this.attributesMap.clear();\n        this.textSet.clear();\n    }\n    sendNodeAttribute(id, node, name, value) {\n        if (isSVGElement(node)) {\n            if (name.substr(0, 6) === 'xlink:') {\n                name = name.substr(6);\n            }\n            if (value === null) {\n                this.app.send(new RemoveNodeAttribute(id, name));\n            }\n            else if (name === 'href') {\n                if (value.length > 1e5) {\n                    value = '';\n                }\n                this.app.send(new SetNodeAttributeURLBased(id, name, value, this.app.getBaseHref()));\n            }\n            else {\n                this.app.send(new SetNodeAttribute(id, name, value));\n            }\n            return;\n        }\n        if (name === 'src' ||\n            name === 'srcset' ||\n            name === 'integrity' ||\n            name === 'crossorigin' ||\n            name === 'autocomplete' ||\n            name.substr(0, 2) === 'on') {\n            return;\n        }\n        if (name === 'value' &&\n            hasTag(node, \"INPUT\") &&\n            node.type !== 'button' &&\n            node.type !== 'reset' &&\n            node.type !== 'submit') {\n            return;\n        }\n        if (value === null) {\n            this.app.send(new RemoveNodeAttribute(id, name));\n            return;\n        }\n        if (name === 'style' || name === 'href' && hasTag(node, \"LINK\")) {\n            this.app.send(new SetNodeAttributeURLBased(id, name, value, this.app.getBaseHref()));\n            return;\n        }\n        if (name === 'href' || value.length > 1e5) {\n            value = '';\n        }\n        this.app.send(new SetNodeAttribute(id, name, value));\n    }\n    sendNodeData(id, parentElement, data) {\n        if (hasTag(parentElement, \"STYLE\") || hasTag(parentElement, \"style\")) {\n            this.app.send(new SetCSSDataURLBased(id, data, this.app.getBaseHref()));\n            return;\n        }\n        data = this.app.sanitizer.sanitize(id, data);\n        this.app.send(new SetNodeData(id, data));\n    }\n    bindNode(node) {\n        const [id, isNew] = this.app.nodes.registerNode(node);\n        if (isNew) {\n            this.recents.set(id, RecentsType.New);\n        }\n        else if (this.recents.get(id) !== RecentsType.New) { // can we do just `else` here?\n            this.recents.set(id, RecentsType.Removed);\n        }\n    }\n    unbindChildNode(node) {\n        const [id] = this.app.nodes.registerNode(node);\n        this.recents.set(id, RecentsType.RemovedChild);\n    }\n    bindTree(node, isChildUnbinding = false) {\n        if (!isObservable(node)) {\n            return;\n        }\n        this.bindNode(node);\n        const walker = document.createTreeWalker(node, NodeFilter.SHOW_ELEMENT + NodeFilter.SHOW_TEXT, {\n            acceptNode: (node) => isIgnored(node)\n                || (this.app.nodes.getID(node) !== undefined && !isChildUnbinding)\n                ? NodeFilter.FILTER_REJECT\n                : NodeFilter.FILTER_ACCEPT,\n        }, \n        // @ts-ignore\n        false);\n        while (walker.nextNode()) {\n            if (isChildUnbinding) {\n                this.unbindChildNode(walker.currentNode);\n            }\n            else {\n                this.bindNode(walker.currentNode);\n            }\n        }\n    }\n    unbindNode(node) {\n        const id = this.app.nodes.unregisterNode(node);\n        if (id !== undefined && this.recents.get(id) === RecentsType.Removed) {\n            this.app.send(new RemoveNode(id));\n        }\n    }\n    // A top-consumption function on the infinite lists test. (~1% of performance resources)\n    _commitNode(id, node) {\n        if (isRootNode(node)) {\n            return true;\n        }\n        const parent = node.parentNode;\n        let parentID;\n        // Disable parent check for the upper context HTMLHtmlElement, because it is root there... (before)\n        // TODO: get rid of \"special\" cases (there is an issue with CreateDocument altered behaviour though)\n        // TODO: Clean the logic (though now it workd fine)\n        if (!hasTag(node, \"HTML\") || !this.isTopContext) {\n            if (parent === null) {\n                // Sometimes one observation contains attribute mutations for the removimg node, which gets ignored here.\n                // That shouldn't affect the visual rendering ( should it? )\n                this.unbindNode(node);\n                return false;\n            }\n            parentID = this.app.nodes.getID(parent);\n            if (parentID === undefined) {\n                this.unbindNode(node);\n                return false;\n            }\n            if (!this.commitNode(parentID)) {\n                this.unbindNode(node);\n                return false;\n            }\n            this.app.sanitizer.handleNode(id, parentID, node);\n            if (this.app.sanitizer.isMaskedContainer(parentID)) {\n                return false;\n            }\n        }\n        // From here parentID === undefined if node is top context HTML node\n        let sibling = node.previousSibling;\n        while (sibling !== null) {\n            const siblingID = this.app.nodes.getID(sibling);\n            if (siblingID !== undefined) {\n                this.commitNode(siblingID);\n                this.indexes[id] = this.indexes[siblingID] + 1;\n                break;\n            }\n            sibling = sibling.previousSibling;\n        }\n        if (sibling === null) {\n            this.indexes[id] = 0;\n        }\n        const recentsType = this.recents.get(id);\n        const isNew = recentsType === RecentsType.New;\n        const index = this.indexes[id];\n        if (index === undefined) {\n            throw 'commitNode: missing node index';\n        }\n        if (isNew) {\n            if (isElementNode(node)) {\n                let el = node;\n                if (parentID !== undefined) {\n                    if (this.app.sanitizer.isMaskedContainer(id)) {\n                        const width = el.clientWidth;\n                        const height = el.clientHeight;\n                        el = node.cloneNode();\n                        el.style.width = width + 'px';\n                        el.style.height = height + 'px';\n                    }\n                    this.app.send(new CreateElementNode(id, parentID, index, el.tagName, isSVGElement(node)));\n                }\n                for (let i = 0; i < el.attributes.length; i++) {\n                    const attr = el.attributes[i];\n                    this.sendNodeAttribute(id, el, attr.nodeName, attr.value);\n                }\n            }\n            else if (isTextNode(node)) {\n                // for text node id != 0, hence parentID !== undefined and parent is Element\n                this.app.send(new CreateTextNode(id, parentID, index));\n                this.sendNodeData(id, parent, node.data);\n            }\n            return true;\n        }\n        if (recentsType === RecentsType.Removed && parentID !== undefined) {\n            this.app.send(new MoveNode(id, parentID, index));\n        }\n        const attr = this.attributesMap.get(id);\n        if (attr !== undefined) {\n            if (!isElementNode(node)) {\n                throw 'commitNode: node is not an element';\n            }\n            for (const name of attr) {\n                this.sendNodeAttribute(id, node, name, node.getAttribute(name));\n            }\n        }\n        if (this.textSet.has(id)) {\n            if (!isTextNode(node)) {\n                throw 'commitNode: node is not a text';\n            }\n            // for text node id != 0, hence parent is Element\n            this.sendNodeData(id, parent, node.data);\n        }\n        return true;\n    }\n    commitNode(id) {\n        const node = this.app.nodes.getNode(id);\n        if (node === undefined) {\n            return false;\n        }\n        const cmt = this.commited[id];\n        if (cmt !== undefined) {\n            return cmt;\n        }\n        return (this.commited[id] = this._commitNode(id, node));\n    }\n    commitNodes(isStart = false) {\n        let node;\n        this.recents.forEach((type, id) => {\n            this.commitNode(id);\n            if (type === RecentsType.New && (node = this.app.nodes.getNode(id))) {\n                this.app.nodes.callNodeCallbacks(node, isStart);\n            }\n        });\n        this.clear();\n    }\n    // ISSSUE\n    observeRoot(node, beforeCommit, nodeToBind = node) {\n        this.observer.observe(node, {\n            childList: true,\n            attributes: true,\n            characterData: true,\n            subtree: true,\n            attributeOldValue: false,\n            characterDataOldValue: false,\n        });\n        this.bindTree(nodeToBind);\n        beforeCommit(this.app.nodes.getID(node));\n        this.commitNodes(true);\n    }\n    disconnect() {\n        this.observer.disconnect();\n        this.clear();\n    }\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/app/observer/iframe_observer.js\n\n\nclass IFrameObserver extends Observer {\n    observe(iframe) {\n        const doc = iframe.contentDocument;\n        const hostID = this.app.nodes.getID(iframe);\n        if (!doc || hostID === undefined) {\n            return;\n        } //log TODO common app.logger\n        // Have to observe document, because the inner <html> might be changed\n        this.observeRoot(doc, (docID) => {\n            if (docID === undefined) {\n                console.log(\"OpenReplay: Iframe document not bound\");\n                return;\n            }\n            this.app.send(CreateIFrameDocument(hostID, docID));\n        });\n    }\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/app/observer/shadow_root_observer.js\n\n\nclass ShadowRootObserver extends Observer {\n    observe(el) {\n        const shRoot = el.shadowRoot;\n        const hostID = this.app.nodes.getID(el);\n        if (!shRoot || hostID === undefined) {\n            return;\n        } // log\n        this.observeRoot(shRoot, (rootID) => {\n            if (rootID === undefined) {\n                console.log(\"OpenReplay: Shadow Root was not bound\");\n                return;\n            }\n            this.app.send(CreateIFrameDocument(hostID, rootID));\n        });\n    }\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/app/observer/top_observer.js\n\n\n\n\n\n\nconst attachShadowNativeFn = IN_BROWSER ? Element.prototype.attachShadow : () => new ShadowRoot();\nclass TopObserver extends Observer {\n    constructor(app, options) {\n        super(app, true);\n        this.iframeObservers = [];\n        this.shadowRootObservers = [];\n        this.options = Object.assign({\n            captureIFrames: true\n        }, options);\n        // IFrames\n        this.app.nodes.attachNodeCallback(node => {\n            if (hasTag(node, \"IFRAME\") &&\n                ((this.options.captureIFrames && !hasOpenreplayAttribute(node, \"obscured\"))\n                    || hasOpenreplayAttribute(node, \"capture\"))) {\n                this.handleIframe(node);\n            }\n        });\n        // ShadowDOM\n        this.app.nodes.attachNodeCallback(node => {\n            if (isElementNode(node) && node.shadowRoot !== null) {\n                this.handleShadowRoot(node.shadowRoot);\n            }\n        });\n    }\n    handleIframe(iframe) {\n        let doc = null;\n        const handle = this.app.safe(() => {\n            const id = this.app.nodes.getID(iframe);\n            if (id === undefined) {\n                return;\n            } //log\n            if (iframe.contentDocument === doc) {\n                return;\n            } // How frequently can it happen?\n            doc = iframe.contentDocument;\n            if (!doc || !iframe.contentWindow) {\n                return;\n            }\n            const observer = new IFrameObserver(this.app);\n            this.iframeObservers.push(observer);\n            observer.observe(iframe);\n        });\n        iframe.addEventListener(\"load\", handle); // why app.attachEventListener not working?\n        handle();\n    }\n    handleShadowRoot(shRoot) {\n        const observer = new ShadowRootObserver(this.app);\n        this.shadowRootObservers.push(observer);\n        observer.observe(shRoot.host);\n    }\n    observe() {\n        // Protection from several subsequent calls?\n        const observer = this;\n        Element.prototype.attachShadow = function () {\n            const shadow = attachShadowNativeFn.apply(this, arguments);\n            observer.handleShadowRoot(shadow);\n            return shadow;\n        };\n        // Can observe documentElement (<html>) here, because it is not supposed to be changing.\n        // However, it is possible in some exotic cases and may cause an ignorance of the newly created <html>\n        // In this case context.document have to be observed, but this will cause \n        // the change in the re-player behaviour caused by CreateDocument message: \n        //   the 0-node (\"fRoot\") will become #document rather than documentElement as it is now.\n        // Alternatively - observe(#document) then bindNode(documentElement)\n        this.observeRoot(window.document, () => {\n            this.app.send(new CreateDocument());\n        }, window.document.documentElement);\n    }\n    disconnect() {\n        Element.prototype.attachShadow = attachShadowNativeFn;\n        this.iframeObservers.forEach(o => o.disconnect());\n        this.iframeObservers = [];\n        this.shadowRootObservers.forEach(o => o.disconnect());\n        this.shadowRootObservers = [];\n        super.disconnect();\n    }\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/app/sanitizer.js\n\n\nclass Sanitizer {\n    constructor(app, options) {\n        this.app = app;\n        this.masked = new Set();\n        this.maskedContainers = new Set();\n        this.options = Object.assign({\n            obscureTextEmails: true,\n            obscureTextNumbers: false,\n        }, options);\n    }\n    handleNode(id, parentID, node) {\n        if (this.masked.has(parentID) ||\n            (isElementNode(node) &&\n                hasOpenreplayAttribute(node, 'masked'))) {\n            this.masked.add(id);\n        }\n        if (this.maskedContainers.has(parentID) ||\n            (isElementNode(node) &&\n                hasOpenreplayAttribute(node, 'htmlmasked'))) {\n            this.maskedContainers.add(id);\n        }\n    }\n    sanitize(id, data) {\n        if (this.masked.has(id)) {\n            // TODO: is it the best place to put trim() ? Might trimmed spaces be considered in layout in certain cases?\n            return data.trim().replace(/[^\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]/g, '█');\n        }\n        if (this.options.obscureTextNumbers) {\n            data = data.replace(/\\d/g, '0');\n        }\n        if (this.options.obscureTextEmails) {\n            data = data.replace(/([^\\s]+)@([^\\s]+)\\.([^\\s]+)/g, (...f) => stars(f[1]) + '@' + stars(f[2]) + '.' + stars(f[3]));\n        }\n        return data;\n    }\n    isMasked(id) {\n        return this.masked.has(id);\n    }\n    isMaskedContainer(id) {\n        return this.maskedContainers.has(id);\n    }\n    getInnerTextSecure(el) {\n        const id = this.app.nodes.getID(el);\n        if (!id) {\n            return '';\n        }\n        return this.sanitize(id, el.innerText);\n    }\n    clear() {\n        this.masked.clear();\n        this.maskedContainers.clear();\n    }\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/app/ticker.js\nfunction wrap(callback, n) {\n    let t = 0;\n    return () => {\n        if (t++ >= n) {\n            t = 0;\n            callback();\n        }\n    };\n}\nclass Ticker {\n    constructor(app) {\n        this.app = app;\n        this.timer = null;\n        this.callbacks = [];\n    }\n    attach(callback, n = 0, useSafe = true, thisArg) {\n        if (thisArg) {\n            callback = callback.bind(thisArg);\n        }\n        if (useSafe) {\n            callback = this.app.safe(callback);\n        }\n        this.callbacks.unshift(n ? wrap(callback, n) : callback) - 1;\n    }\n    start() {\n        if (this.timer === null) {\n            this.timer = setInterval(() => this.callbacks.forEach((cb) => {\n                if (cb)\n                    cb();\n            }), 30);\n        }\n    }\n    stop() {\n        if (this.timer !== null) {\n            clearInterval(this.timer);\n            this.timer = null;\n        }\n    }\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/app/logger.js\nconst LogLevel = {\n    Verbose: 5,\n    Log: 4,\n    Warnings: 3,\n    Errors: 2,\n    Silent: 0,\n};\nfunction IsCustomLevel(l) {\n    return typeof l === 'object';\n}\nclass Logger {\n    constructor(options = LogLevel.Silent) {\n        this.options = options === true\n            ? { level: LogLevel.Verbose }\n            : typeof options === \"number\" ? { level: options } : options;\n    }\n    log(...args) {\n        if (IsCustomLevel(this.options.level)\n            ? this.options.level.log\n            : this.options.level >= LogLevel.Log) {\n            console.log(...args);\n        }\n    }\n    warn(...args) {\n        if (IsCustomLevel(this.options.level)\n            ? this.options.level.warn\n            : this.options.level >= LogLevel.Warnings) {\n            console.warn(...args);\n        }\n    }\n    error(...args) {\n        if (IsCustomLevel(this.options.level)\n            ? this.options.level.error\n            : this.options.level >= LogLevel.Errors) {\n            console.error(...args);\n        }\n    }\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/app/session.js\nclass Session {\n    constructor() {\n        this.metadata = {};\n        this.userID = null;\n        this.sessionID = null;\n        this.callbacks = [];\n    }\n    attachUpdateCallback(cb) {\n        this.callbacks.push(cb);\n    }\n    handleUpdate(newInfo) {\n        if (newInfo.userID == null) {\n            delete newInfo.userID;\n        }\n        if (newInfo.sessionID == null) {\n            delete newInfo.sessionID;\n        }\n        this.callbacks.forEach(cb => cb(newInfo));\n    }\n    update(newInfo) {\n        if (newInfo.userID !== undefined) { // TODO clear nullable/undefinable types\n            this.userID = newInfo.userID;\n        }\n        if (newInfo.metadata !== undefined) {\n            Object.entries(newInfo.metadata).forEach(([k, v]) => this.metadata[k] = v);\n        }\n        if (newInfo.sessionID !== undefined) {\n            this.sessionID = newInfo.sessionID;\n        }\n        this.handleUpdate(newInfo);\n    }\n    setMetadata(key, value) {\n        this.metadata[key] = value;\n        this.handleUpdate({ metadata: { [key]: value } });\n    }\n    setUserID(userID) {\n        this.userID = userID;\n        this.handleUpdate({ userID });\n    }\n    getInfo() {\n        return {\n            sessionID: this.sessionID,\n            metadata: this.metadata,\n            userID: this.userID,\n        };\n    }\n    reset() {\n        this.metadata = {};\n        this.userID = null;\n        this.sessionID = null;\n    }\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/modules/performance.js\n\n\nconst perf = IN_BROWSER && 'performance' in window && 'memory' in performance // works in Chrome only\n    ? performance\n    : { memory: {} };\nconst deviceMemory = IN_BROWSER ? (navigator.deviceMemory || 0) * 1024 : 0;\nconst jsHeapSizeLimit = perf.memory.jsHeapSizeLimit || 0;\n/* harmony default export */ function modules_performance(app, opts) {\n    const options = Object.assign({\n        capturePerformance: true,\n    }, opts);\n    if (!options.capturePerformance) {\n        return;\n    }\n    let frames;\n    let ticks;\n    const nextFrame = () => {\n        if (frames === undefined || frames === -1) {\n            return;\n        }\n        frames++;\n        requestAnimationFrame(nextFrame);\n    };\n    app.ticker.attach(() => {\n        if (ticks === undefined || ticks === -1) {\n            return;\n        }\n        ticks++;\n    }, 0, false);\n    const sendPerformanceTrack = () => {\n        if (frames === undefined || ticks === undefined) {\n            return;\n        }\n        app.send(new PerformanceTrack(frames, ticks, perf.memory.totalJSHeapSize || 0, perf.memory.usedJSHeapSize || 0));\n        ticks = frames = document.hidden ? -1 : 0;\n    };\n    app.attachStartCallback(() => {\n        ticks = frames = -1;\n        sendPerformanceTrack();\n        nextFrame();\n    });\n    app.attachStopCallback(() => {\n        ticks = frames = undefined;\n    });\n    app.ticker.attach(sendPerformanceTrack, 40, false);\n    if (document.hidden !== undefined) {\n        app.attachEventListener(document, 'visibilitychange', sendPerformanceTrack, false, false);\n    }\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/app/index.js\n\n\n\n\n\n\n\n\n\nconst CANCELED = \"canceled\";\nconst START_ERROR = \":(\";\nconst UnsuccessfulStart = (reason) => ({ reason, success: false });\nconst SuccessfulStart = (body) => (Object.assign(Object.assign({}, body), { success: true }));\nvar ActivityState;\n(function (ActivityState) {\n    ActivityState[ActivityState[\"NotActive\"] = 0] = \"NotActive\";\n    ActivityState[ActivityState[\"Starting\"] = 1] = \"Starting\";\n    ActivityState[ActivityState[\"Active\"] = 2] = \"Active\";\n})(ActivityState || (ActivityState = {}));\n// TODO: use backendHost only\nconst DEFAULT_INGEST_POINT = 'https://api.openreplay.com/ingest';\nclass App {\n    constructor(projectKey, sessionToken, options) {\n        // if (options.onStart !== undefined) {\n        //   deprecationWarn(\"'onStart' option\", \"tracker.start().then(/* handle session info */)\")\n        // } ?? maybe onStart is good\n        this.messages = [];\n        this.startCallbacks = [];\n        this.stopCallbacks = [];\n        this.commitCallbacks = [];\n        this.activityState = ActivityState.NotActive;\n        this.version = '3.5.16'; // TODO: version compatability check inside each plugin.\n        this.projectKey = projectKey;\n        this.options = Object.assign({\n            revID: '',\n            node_id: '__openreplay_id',\n            session_token_key: '__openreplay_token',\n            session_pageno_key: '__openreplay_pageno',\n            session_reset_key: '__openreplay_reset',\n            local_uuid_key: '__openreplay_uuid',\n            ingestPoint: DEFAULT_INGEST_POINT,\n            resourceBaseHref: null,\n            verbose: false,\n            __is_snippet: false,\n            __debug_report_edp: null,\n            localStorage: window.localStorage,\n            sessionStorage: window.sessionStorage,\n        }, options);\n        this.revID = this.options.revID;\n        this.sanitizer = new Sanitizer(this, options);\n        this.nodes = new Nodes(this.options.node_id);\n        this.observer = new TopObserver(this, options);\n        this.ticker = new Ticker(this);\n        this.ticker.attach(() => this.commit());\n        this.debug = new Logger(this.options.__debug__);\n        this.notify = new Logger(this.options.verbose ? LogLevel.Warnings : LogLevel.Silent);\n        this.session = new Session();\n        this.session.attachUpdateCallback(({ userID, metadata }) => {\n            if (userID != null) { // TODO: nullable userID\n                this.send(new UserID(userID));\n            }\n            if (metadata != null) {\n                Object.entries(metadata).forEach(([key, value]) => this.send(new Metadata(key, value)));\n            }\n        });\n        this.localStorage = this.options.localStorage;\n        this.sessionStorage = this.options.sessionStorage;\n        if (sessionToken != null) {\n            this.sessionStorage.setItem(this.options.session_token_key, sessionToken);\n        }\n        try {\n            this.worker = new Worker(URL.createObjectURL(new Blob([`\"use strict\";function t(t){function i(...i){return new t(...i)}return i.prototype=t.prototype,i}const i=new Map;const s=t(class{constructor(t,i,s){this.pageNo=t,this.firstIndex=i,this.timestamp=s,this._id=80}encode(t){return t.uint(80)&&t.uint(this.pageNo)&&t.uint(this.firstIndex)&&t.int(this.timestamp)}});i.set(80,s);const e=t(class{constructor(t){this.timestamp=t,this._id=0}encode(t){return t.uint(0)&&t.uint(this.timestamp)}});i.set(0,e);const n=t(class{constructor(t,i,s){this.url=t,this.referrer=i,this.navigationStart=s,this._id=4}encode(t){return t.uint(4)&&t.string(this.url)&&t.string(this.referrer)&&t.uint(this.navigationStart)}});i.set(4,n);const r=t(class{constructor(t,i){this.width=t,this.height=i,this._id=5}encode(t){return t.uint(5)&&t.uint(this.width)&&t.uint(this.height)}});i.set(5,r);const h=t(class{constructor(t,i){this.x=t,this.y=i,this._id=6}encode(t){return t.uint(6)&&t.int(this.x)&&t.int(this.y)}});i.set(6,h);const o=t(class{constructor(){this._id=7}encode(t){return t.uint(7)}});i.set(7,o);const c=t(class{constructor(t,i,s,e,n){this.id=t,this.parentID=i,this.index=s,this.tag=e,this.svg=n,this._id=8}encode(t){return t.uint(8)&&t.uint(this.id)&&t.uint(this.parentID)&&t.uint(this.index)&&t.string(this.tag)&&t.boolean(this.svg)}});i.set(8,c);const a=t(class{constructor(t,i,s){this.id=t,this.parentID=i,this.index=s,this._id=9}encode(t){return t.uint(9)&&t.uint(this.id)&&t.uint(this.parentID)&&t.uint(this.index)}});i.set(9,a);const u=t(class{constructor(t,i,s){this.id=t,this.parentID=i,this.index=s,this._id=10}encode(t){return t.uint(10)&&t.uint(this.id)&&t.uint(this.parentID)&&t.uint(this.index)}});i.set(10,u);const d=t(class{constructor(t){this.id=t,this._id=11}encode(t){return t.uint(11)&&t.uint(this.id)}});i.set(11,d);const l=t(class{constructor(t,i,s){this.id=t,this.name=i,this.value=s,this._id=12}encode(t){return t.uint(12)&&t.uint(this.id)&&t.string(this.name)&&t.string(this.value)}});i.set(12,l);const p=t(class{constructor(t,i){this.id=t,this.name=i,this._id=13}encode(t){return t.uint(13)&&t.uint(this.id)&&t.string(this.name)}});i.set(13,p);const g=t(class{constructor(t,i){this.id=t,this.data=i,this._id=14}encode(t){return t.uint(14)&&t.uint(this.id)&&t.string(this.data)}});i.set(14,g);const m=t(class{constructor(t,i,s){this.id=t,this.x=i,this.y=s,this._id=16}encode(t){return t.uint(16)&&t.uint(this.id)&&t.int(this.x)&&t.int(this.y)}});i.set(16,m);const f=t(class{constructor(t,i){this.id=t,this.label=i,this._id=17}encode(t){return t.uint(17)&&t.uint(this.id)&&t.string(this.label)}});i.set(17,f);const y=t(class{constructor(t,i,s){this.id=t,this.value=i,this.mask=s,this._id=18}encode(t){return t.uint(18)&&t.uint(this.id)&&t.string(this.value)&&t.int(this.mask)}});i.set(18,y);const _=t(class{constructor(t,i){this.id=t,this.checked=i,this._id=19}encode(t){return t.uint(19)&&t.uint(this.id)&&t.boolean(this.checked)}});i.set(19,_);const v=t(class{constructor(t,i){this.x=t,this.y=i,this._id=20}encode(t){return t.uint(20)&&t.uint(this.x)&&t.uint(this.y)}});i.set(20,v);const S=t(class{constructor(t,i){this.level=t,this.value=i,this._id=22}encode(t){return t.uint(22)&&t.string(this.level)&&t.string(this.value)}});i.set(22,S);const b=t(class{constructor(t,i,s,e,n,r,h,o,c){this.requestStart=t,this.responseStart=i,this.responseEnd=s,this.domContentLoadedEventStart=e,this.domContentLoadedEventEnd=n,this.loadEventStart=r,this.loadEventEnd=h,this.firstPaint=o,this.firstContentfulPaint=c,this._id=23}encode(t){return t.uint(23)&&t.uint(this.requestStart)&&t.uint(this.responseStart)&&t.uint(this.responseEnd)&&t.uint(this.domContentLoadedEventStart)&&t.uint(this.domContentLoadedEventEnd)&&t.uint(this.loadEventStart)&&t.uint(this.loadEventEnd)&&t.uint(this.firstPaint)&&t.uint(this.firstContentfulPaint)}});i.set(23,b);const w=t(class{constructor(t,i,s){this.speedIndex=t,this.visuallyComplete=i,this.timeToInteractive=s,this._id=24}encode(t){return t.uint(24)&&t.uint(this.speedIndex)&&t.uint(this.visuallyComplete)&&t.uint(this.timeToInteractive)}});i.set(24,w);const E=t(class{constructor(t,i,s){this.name=t,this.message=i,this.payload=s,this._id=25}encode(t){return t.uint(25)&&t.string(this.name)&&t.string(this.message)&&t.string(this.payload)}});i.set(25,E);const x=t(class{constructor(t,i){this.name=t,this.payload=i,this._id=27}encode(t){return t.uint(27)&&t.string(this.name)&&t.string(this.payload)}});i.set(27,x);const T=t(class{constructor(t){this.id=t,this._id=28}encode(t){return t.uint(28)&&t.string(this.id)}});i.set(28,T);const z=t(class{constructor(t){this.id=t,this._id=29}encode(t){return t.uint(29)&&t.string(this.id)}});i.set(29,z);const k=t(class{constructor(t,i){this.key=t,this.value=i,this._id=30}encode(t){return t.uint(30)&&t.string(this.key)&&t.string(this.value)}});i.set(30,k);const A=t(class{constructor(t,i,s){this.id=t,this.rule=i,this.index=s,this._id=37}encode(t){return t.uint(37)&&t.uint(this.id)&&t.string(this.rule)&&t.uint(this.index)}});i.set(37,A);const I=t(class{constructor(t,i){this.id=t,this.index=i,this._id=38}encode(t){return t.uint(38)&&t.uint(this.id)&&t.uint(this.index)}});i.set(38,I);const L=t(class{constructor(t,i,s,e,n,r,h){this.method=t,this.url=i,this.request=s,this.response=e,this.status=n,this.timestamp=r,this.duration=h,this._id=39}encode(t){return t.uint(39)&&t.string(this.method)&&t.string(this.url)&&t.string(this.request)&&t.string(this.response)&&t.uint(this.status)&&t.uint(this.timestamp)&&t.uint(this.duration)}});i.set(39,L);const C=t(class{constructor(t,i,s,e){this.name=t,this.duration=i,this.args=s,this.result=e,this._id=40}encode(t){return t.uint(40)&&t.string(this.name)&&t.uint(this.duration)&&t.string(this.args)&&t.string(this.result)}});i.set(40,C);const M=t(class{constructor(t,i){this.key=t,this.value=i,this._id=41}encode(t){return t.uint(41)&&t.string(this.key)&&t.string(this.value)}});i.set(41,M);const N=t(class{constructor(t){this.type=t,this._id=42}encode(t){return t.uint(42)&&t.string(this.type)}});i.set(42,N);const B=t(class{constructor(t,i,s){this.action=t,this.state=i,this.duration=s,this._id=44}encode(t){return t.uint(44)&&t.string(this.action)&&t.string(this.state)&&t.uint(this.duration)}});i.set(44,B);const U=t(class{constructor(t,i){this.mutation=t,this.state=i,this._id=45}encode(t){return t.uint(45)&&t.string(this.mutation)&&t.string(this.state)}});i.set(45,U);const R=t(class{constructor(t,i){this.type=t,this.payload=i,this._id=46}encode(t){return t.uint(46)&&t.string(this.type)&&t.string(this.payload)}});i.set(46,R);const O=t(class{constructor(t,i,s){this.action=t,this.state=i,this.duration=s,this._id=47}encode(t){return t.uint(47)&&t.string(this.action)&&t.string(this.state)&&t.uint(this.duration)}});i.set(47,O);const P=t(class{constructor(t,i,s,e){this.operationKind=t,this.operationName=i,this.variables=s,this.response=e,this._id=48}encode(t){return t.uint(48)&&t.string(this.operationKind)&&t.string(this.operationName)&&t.string(this.variables)&&t.string(this.response)}});i.set(48,P);const q=t(class{constructor(t,i,s,e){this.frames=t,this.ticks=i,this.totalJSHeapSize=s,this.usedJSHeapSize=e,this._id=49}encode(t){return t.uint(49)&&t.int(this.frames)&&t.int(this.ticks)&&t.uint(this.totalJSHeapSize)&&t.uint(this.usedJSHeapSize)}});i.set(49,q);const D=t(class{constructor(t,i,s,e,n,r,h,o){this.timestamp=t,this.duration=i,this.ttfb=s,this.headerSize=e,this.encodedBodySize=n,this.decodedBodySize=r,this.url=h,this.initiator=o,this._id=53}encode(t){return t.uint(53)&&t.uint(this.timestamp)&&t.uint(this.duration)&&t.uint(this.ttfb)&&t.uint(this.headerSize)&&t.uint(this.encodedBodySize)&&t.uint(this.decodedBodySize)&&t.string(this.url)&&t.string(this.initiator)}});i.set(53,D);const W=t(class{constructor(t,i){this.downlink=t,this.type=i,this._id=54}encode(t){return t.uint(54)&&t.uint(this.downlink)&&t.string(this.type)}});i.set(54,W);const H=t(class{constructor(t){this.hidden=t,this._id=55}encode(t){return t.uint(55)&&t.boolean(this.hidden)}});i.set(55,H);const J=t(class{constructor(t,i,s,e,n,r,h){this.timestamp=t,this.duration=i,this.context=s,this.containerType=e,this.containerSrc=n,this.containerId=r,this.containerName=h,this._id=59}encode(t){return t.uint(59)&&t.uint(this.timestamp)&&t.uint(this.duration)&&t.uint(this.context)&&t.uint(this.containerType)&&t.string(this.containerSrc)&&t.string(this.containerId)&&t.string(this.containerName)}});i.set(59,J);const F=t(class{constructor(t,i,s,e){this.id=t,this.name=i,this.value=s,this.baseURL=e,this._id=60}encode(t){return t.uint(60)&&t.uint(this.id)&&t.string(this.name)&&t.string(this.value)&&t.string(this.baseURL)}});i.set(60,F);const X=t(class{constructor(t,i,s){this.id=t,this.data=i,this.baseURL=s,this._id=61}encode(t){return t.uint(61)&&t.uint(this.id)&&t.string(this.data)&&t.string(this.baseURL)}});i.set(61,X);const G=t(class{constructor(t,i){this.type=t,this.value=i,this._id=63}encode(t){return t.uint(63)&&t.string(this.type)&&t.string(this.value)}});i.set(63,G);const K=t(class{constructor(t,i){this.name=t,this.payload=i,this._id=64}encode(t){return t.uint(64)&&t.string(this.name)&&t.string(this.payload)}});i.set(64,K);const j=t(class{constructor(){this._id=65}encode(t){return t.uint(65)}});i.set(65,j);const Q=t(class{constructor(t,i,s,e){this.id=t,this.rule=i,this.index=s,this.baseURL=e,this._id=67}encode(t){return t.uint(67)&&t.uint(this.id)&&t.string(this.rule)&&t.uint(this.index)&&t.string(this.baseURL)}});i.set(67,Q);const V=t(class{constructor(t,i,s,e){this.id=t,this.hesitationTime=i,this.label=s,this.selector=e,this._id=69}encode(t){return t.uint(69)&&t.uint(this.id)&&t.uint(this.hesitationTime)&&t.string(this.label)&&t.string(this.selector)}});i.set(69,V);const Y=t(class{constructor(t,i){this.frameID=t,this.id=i,this._id=70}encode(t){return t.uint(70)&&t.uint(this.frameID)&&t.uint(this.id)}});i.set(70,Y);class Z{constructor(t,i,s,e=10,n=1e3){this.onUnauthorised=i,this.onFailure=s,this.MAX_ATTEMPTS_COUNT=e,this.ATTEMPT_TIMEOUT=n,this.attemptsCount=0,this.busy=!1,this.queue=[],this.token=null,this.ingestURL=t+\"/v1/web/i\"}authorise(t){this.token=t}push(t){this.busy||!this.token?this.queue.push(t):this.sendBatch(t)}retry(t){this.attemptsCount>=this.MAX_ATTEMPTS_COUNT?this.onFailure():(this.attemptsCount++,setTimeout(()=>this.sendBatch(t),this.ATTEMPT_TIMEOUT*this.attemptsCount))}sendBatch(t){this.busy=!0,fetch(this.ingestURL,{body:t,method:\"POST\",headers:{Authorization:\"Bearer \"+this.token},keepalive:t.length<65536}).then(i=>{if(401===i.status)return this.busy=!1,void this.onUnauthorised();if(i.status>=400)return void this.retry(t);this.attemptsCount=0;const s=this.queue.shift();s?this.sendBatch(s):this.busy=!1}).catch(i=>{console.warn(\"OpenReplay:\",i),this.retry(t)})}clean(){this.queue.length=0}}const tt=\"function\"==typeof TextEncoder?new TextEncoder:{encode(t){const i=t.length,s=new Uint8Array(3*i);let e=-1;for(var n=0,r=0,h=0;h!==i;){if(n=t.charCodeAt(h),h+=1,n>=55296&&n<=56319){if(h===i){s[e+=1]=239,s[e+=1]=191,s[e+=1]=189;break}if(!((r=t.charCodeAt(h))>=56320&&r<=57343)){s[e+=1]=239,s[e+=1]=191,s[e+=1]=189;continue}if(h+=1,(n=1024*(n-55296)+r-56320+65536)>65535){s[e+=1]=240|n>>>18,s[e+=1]=128|n>>>12&63,s[e+=1]=128|n>>>6&63,s[e+=1]=128|63&n;continue}}n<=127?s[e+=1]=0|n:n<=2047?(s[e+=1]=192|n>>>6,s[e+=1]=128|63&n):(s[e+=1]=224|n>>>12,s[e+=1]=128|n>>>6&63,s[e+=1]=128|63&n)}return s.subarray(0,e+1)}};class it{constructor(t){this.size=t,this.offset=0,this.checkpointOffset=0,this.data=new Uint8Array(t)}checkpoint(){this.checkpointOffset=this.offset}isEmpty(){return 0===this.offset}boolean(t){return this.data[this.offset++]=+t,this.offset<=this.size}uint(t){for((t<0||t>Number.MAX_SAFE_INTEGER)&&(t=0);t>=128;)this.data[this.offset++]=t%256|128,t=Math.floor(t/128);return this.data[this.offset++]=t,this.offset<=this.size}int(t){return t=Math.round(t),this.uint(t>=0?2*t:-2*t-1)}string(t){const i=tt.encode(t),s=i.byteLength;return!(!this.uint(s)||this.offset+s>this.size)&&(this.data.set(i,this.offset),this.offset+=s,!0)}reset(){this.offset=0,this.checkpointOffset=0}flush(){const t=this.data.slice(0,this.checkpointOffset);return this.reset(),t}}class st{constructor(t,i,s){this.pageNo=t,this.timestamp=i,this.onBatch=s,this.nextIndex=0,this.beaconSize=2e5,this.writer=new it(this.beaconSize),this.isEmpty=!0,this.beaconSizeLimit=1e6,this.prepare()}prepare(){this.writer.isEmpty()&&new s(this.pageNo,this.nextIndex,this.timestamp).encode(this.writer)}write(t){const i=t.encode(this.writer);return i&&(this.isEmpty=!1,this.writer.checkpoint(),this.nextIndex++),i}setBeaconSizeLimit(t){this.beaconSizeLimit=t}writeMessage(t){for(t instanceof e&&(this.timestamp=t.timestamp);!this.write(t);){if(this.finaliseBatch(),this.beaconSize===this.beaconSizeLimit)return console.warn(\"OpenReplay: beacon size overflow. Skipping large message.\"),this.writer.reset(),this.prepare(),void(this.isEmpty=!0);this.beaconSize=Math.min(2*this.beaconSize,this.beaconSizeLimit),this.writer=new it(this.beaconSize),this.prepare(),this.isEmpty=!0}}finaliseBatch(){this.isEmpty||(this.onBatch(this.writer.flush()),this.prepare(),this.isEmpty=!0)}clean(){this.writer.reset()}}var et;!function(t){t[t.NotActive=0]=\"NotActive\",t[t.Starting=1]=\"Starting\",t[t.Stopping=2]=\"Stopping\",t[t.Active=3]=\"Active\"}(et||(et={}));let nt=null,rt=null;function ht(){rt&&rt.finaliseBatch()}function ot(){et.Stopping,null!==at&&(clearInterval(at),at=null),rt&&(rt.clean(),rt=null),et.NotActive}et.NotActive;let ct,at=null;self.onmessage=({data:t})=>{if(null!=t){if(\"stop\"===t)return ht(),void ot();if(Array.isArray(t)){if(!rt)throw new Error(\"WebWorker: writer not initialised. Service Should be Started.\");const s=rt;t.forEach(t=>{const e=new(i.get(t._id));Object.assign(e,t),e instanceof H&&(e.hidden?ct=setTimeout(()=>self.postMessage(\"restart\"),18e5):clearTimeout(ct)),s.writeMessage(e)})}else{if(\"start\"===t.type)return et.Starting,nt=new Z(t.ingestPoint,()=>{self.postMessage(\"restart\")},()=>{nt&&(nt.clean(),nt=null),ot(),self.postMessage(\"failed\")},t.connAttemptCount,t.connAttemptGap),rt=new st(t.pageNo,t.timestamp,t=>nt&&nt.push(t)),null===at&&(at=setInterval(ht,1e4)),et.Active;if(\"auth\"===t.type){if(!nt)throw new Error(\"WebWorker: sender not initialised. Received auth.\");if(!rt)throw new Error(\"WebWorker: writer not initialised. Received auth.\");return nt.authorise(t.token),void(t.beaconSizeLimit&&rt.setBeaconSizeLimit(t.beaconSizeLimit))}}}else ht()};\n`], { type: 'text/javascript' })));\n            this.worker.onerror = e => {\n                this._debug(\"webworker_error\", e);\n            };\n            this.worker.onmessage = ({ data }) => {\n                if (data === \"failed\") {\n                    this.stop();\n                    this._debug(\"worker_failed\", {}); // add context (from worker)\n                }\n                else if (data === \"restart\") {\n                    this.stop();\n                    this.start({ forceNew: true });\n                }\n            };\n            const alertWorker = () => {\n                if (this.worker) {\n                    this.worker.postMessage(null);\n                }\n            };\n            // keep better tactics, discard others?\n            this.attachEventListener(window, 'beforeunload', alertWorker, false);\n            this.attachEventListener(document.body, 'mouseleave', alertWorker, false, false);\n            // TODO: stop session after inactivity timeout (make configurable)\n            this.attachEventListener(document, 'visibilitychange', alertWorker, false);\n        }\n        catch (e) {\n            this._debug(\"worker_start\", e);\n        }\n    }\n    _debug(context, e) {\n        if (this.options.__debug_report_edp !== null) {\n            fetch(this.options.__debug_report_edp, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    context,\n                    error: `${e}`\n                })\n            });\n        }\n        this.debug.error(\"OpenReplay error: \", context, e);\n    }\n    send(message, urgent = false) {\n        if (this.activityState === ActivityState.NotActive) {\n            return;\n        }\n        this.messages.push(message);\n        // TODO: commit on start if there were `urgent` sends; \n        // Clearify where urgent can be used for;\n        // Clearify workflow for each type of message in case it was sent before start \n        //      (like Fetch before start; maybe add an option \"preCapture: boolean\" or sth alike)\n        if (this.activityState === ActivityState.Active && urgent) {\n            this.commit();\n        }\n    }\n    commit() {\n        if (this.worker && this.messages.length) {\n            this.messages.unshift(new Timestamp(timestamp()));\n            this.worker.postMessage(this.messages);\n            this.commitCallbacks.forEach(cb => cb(this.messages));\n            this.messages.length = 0;\n        }\n    }\n    safe(fn) {\n        const app = this;\n        return function (...args) {\n            try {\n                fn.apply(this, args);\n            }\n            catch (e) {\n                app._debug(\"safe_fn_call\", e);\n                // time: timestamp(),\n                // name: e.name,\n                // message: e.message,\n                // stack: e.stack\n            }\n        }; // TODO: correct typing\n    }\n    attachCommitCallback(cb) {\n        this.commitCallbacks.push(cb);\n    }\n    attachStartCallback(cb) {\n        this.startCallbacks.push(cb);\n    }\n    attachStopCallback(cb) {\n        this.stopCallbacks.push(cb);\n    }\n    attachEventListener(target, type, listener, useSafe = true, useCapture = true) {\n        if (useSafe) {\n            listener = this.safe(listener);\n        }\n        this.attachStartCallback(() => target.addEventListener(type, listener, useCapture));\n        this.attachStopCallback(() => target.removeEventListener(type, listener, useCapture));\n    }\n    // TODO: full correct semantic\n    checkRequiredVersion(version) {\n        const reqVer = version.split(/[.-]/);\n        const ver = this.version.split(/[.-]/);\n        for (let i = 0; i < 3; i++) {\n            if (Number(ver[i]) < Number(reqVer[i]) || isNaN(Number(ver[i])) || isNaN(Number(reqVer[i]))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    getStartInfo() {\n        return {\n            userUUID: this.localStorage.getItem(this.options.local_uuid_key),\n            projectKey: this.projectKey,\n            revID: this.revID,\n            timestamp: timestamp(),\n            trackerVersion: this.version,\n            isSnippet: this.options.__is_snippet,\n        };\n    }\n    getSessionInfo() {\n        return Object.assign(Object.assign({}, this.session.getInfo()), this.getStartInfo());\n    }\n    getSessionToken() {\n        const token = this.sessionStorage.getItem(this.options.session_token_key);\n        if (token !== null) {\n            return token;\n        }\n    }\n    getSessionID() {\n        return this.session.getInfo().sessionID || undefined;\n    }\n    getHost() {\n        return new URL(this.options.ingestPoint).hostname;\n    }\n    getProjectKey() {\n        return this.projectKey;\n    }\n    getBaseHref() {\n        var _a, _b;\n        if (typeof this.options.resourceBaseHref === 'string') {\n            return this.options.resourceBaseHref;\n        }\n        else if (typeof this.options.resourceBaseHref === 'object') {\n            //switch between  types\n        }\n        if (document.baseURI) {\n            return document.baseURI;\n        }\n        // IE only\n        return ((_b = (_a = document.head) === null || _a === void 0 ? void 0 : _a.getElementsByTagName(\"base\")[0]) === null || _b === void 0 ? void 0 : _b.getAttribute(\"href\")) || location.origin + location.pathname;\n    }\n    resolveResourceURL(resourceURL) {\n        const base = new URL(this.getBaseHref());\n        base.pathname += \"/\" + new URL(resourceURL).pathname;\n        base.pathname.replace(/\\/+/g, \"/\");\n        return base.toString();\n    }\n    isServiceURL(url) {\n        return url.startsWith(this.options.ingestPoint);\n    }\n    active() {\n        return this.activityState === ActivityState.Active;\n    }\n    resetNextPageSession(flag) {\n        if (flag) {\n            this.sessionStorage.setItem(this.options.session_reset_key, 't');\n        }\n        else {\n            this.sessionStorage.removeItem(this.options.session_reset_key);\n        }\n    }\n    _start(startOpts) {\n        if (!this.worker) {\n            return Promise.resolve(UnsuccessfulStart(\"No worker found: perhaps, CSP is not set.\"));\n        }\n        if (this.activityState !== ActivityState.NotActive) {\n            return Promise.resolve(UnsuccessfulStart(\"OpenReplay: trying to call `start()` on the instance that has been started already.\"));\n        }\n        this.activityState = ActivityState.Starting;\n        let pageNo = 0;\n        const pageNoStr = this.sessionStorage.getItem(this.options.session_pageno_key);\n        if (pageNoStr != null) {\n            pageNo = parseInt(pageNoStr);\n            pageNo++;\n        }\n        this.sessionStorage.setItem(this.options.session_pageno_key, pageNo.toString());\n        const startInfo = this.getStartInfo();\n        const startWorkerMsg = {\n            type: \"start\",\n            pageNo,\n            ingestPoint: this.options.ingestPoint,\n            timestamp: startInfo.timestamp,\n            connAttemptCount: this.options.connAttemptCount,\n            connAttemptGap: this.options.connAttemptGap,\n        };\n        this.worker.postMessage(startWorkerMsg);\n        this.session.update({\n            // \"updating\" with old metadata in order to trigger session's UpdateCallbacks. \n            // (for the case of internal .start() calls, like on \"restart\" webworker signal or assistent connection in tracker-assist )\n            metadata: startOpts.metadata || this.session.getInfo().metadata,\n            userID: startOpts.userID,\n        });\n        const sReset = this.sessionStorage.getItem(this.options.session_reset_key);\n        this.sessionStorage.removeItem(this.options.session_reset_key);\n        return window.fetch(this.options.ingestPoint + '/v1/web/start', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(Object.assign(Object.assign({}, startInfo), { userID: this.session.getInfo().userID, token: this.sessionStorage.getItem(this.options.session_token_key), deviceMemory: deviceMemory,\n                jsHeapSizeLimit: jsHeapSizeLimit, reset: startOpts.forceNew || sReset !== null })),\n        })\n            .then(r => {\n            if (r.status === 200) {\n                return r.json();\n            }\n            else {\n                return r.text().then(text => text === CANCELED\n                    ? Promise.reject(CANCELED)\n                    : Promise.reject(`Server error: ${r.status}. ${text}`));\n            }\n        })\n            .then(r => {\n            if (!this.worker) {\n                return Promise.reject(\"no worker found after start request (this might not happen)\");\n            }\n            const { token, userUUID, sessionID, beaconSizeLimit } = r;\n            if (typeof token !== 'string' ||\n                typeof userUUID !== 'string' ||\n                (typeof beaconSizeLimit !== 'number' && typeof beaconSizeLimit !== 'undefined')) {\n                return Promise.reject(`Incorrect server response: ${JSON.stringify(r)}`);\n            }\n            this.sessionStorage.setItem(this.options.session_token_key, token);\n            this.localStorage.setItem(this.options.local_uuid_key, userUUID);\n            this.session.update({ sessionID }); // TODO: no no-explicit 'any'\n            const startWorkerMsg = {\n                type: \"auth\",\n                token,\n                beaconSizeLimit\n            };\n            this.worker.postMessage(startWorkerMsg);\n            this.activityState = ActivityState.Active;\n            const onStartInfo = { sessionToken: token, userUUID, sessionID };\n            this.startCallbacks.forEach((cb) => cb(onStartInfo)); // TODO: start as early as possible (before receiving the token)\n            this.observer.observe();\n            this.ticker.start();\n            this.notify.log(\"OpenReplay tracking started.\");\n            // get rid of onStart ?\n            if (typeof this.options.onStart === 'function') {\n                this.options.onStart(onStartInfo);\n            }\n            return SuccessfulStart(onStartInfo);\n        })\n            .catch(reason => {\n            this.sessionStorage.removeItem(this.options.session_token_key);\n            this.stop();\n            if (reason === CANCELED) {\n                return UnsuccessfulStart(CANCELED);\n            }\n            this.notify.log(\"OpenReplay was unable to start. \", reason);\n            this._debug(\"session_start\", reason);\n            return UnsuccessfulStart(START_ERROR);\n        });\n    }\n    start(options = {}) {\n        if (!document.hidden) {\n            return this._start(options);\n        }\n        else {\n            return new Promise((resolve) => {\n                const onVisibilityChange = () => {\n                    if (!document.hidden) {\n                        document.removeEventListener(\"visibilitychange\", onVisibilityChange);\n                        resolve(this._start(options));\n                    }\n                };\n                document.addEventListener(\"visibilitychange\", onVisibilityChange);\n            });\n        }\n    }\n    stop(calledFromAPI = false, restarting = false) {\n        if (this.activityState !== ActivityState.NotActive) {\n            try {\n                this.sanitizer.clear();\n                this.observer.disconnect();\n                this.nodes.clear();\n                this.ticker.stop();\n                this.stopCallbacks.forEach((cb) => cb());\n                if (calledFromAPI) {\n                    this.session.reset();\n                }\n                this.notify.log(\"OpenReplay tracking stopped.\");\n                if (this.worker && !restarting) {\n                    this.worker.postMessage(\"stop\");\n                }\n            }\n            finally {\n                this.activityState = ActivityState.NotActive;\n            }\n        }\n    }\n    restart() {\n        this.stop(false, true);\n        this.start({ forceNew: false });\n    }\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/modules/connection.js\n\n/* harmony default export */ function connection(app) {\n    const connection = navigator.connection ||\n        navigator.mozConnection ||\n        navigator.webkitConnection;\n    if (connection === undefined) {\n        return;\n    }\n    const sendConnectionInformation = () => app.send(new ConnectionInformation(Math.round(connection.downlink * 1000), connection.type || 'unknown'));\n    sendConnectionInformation();\n    connection.addEventListener('change', sendConnectionInformation);\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/modules/console.js\n\n\n\nconst printError = IN_BROWSER && 'InstallTrigger' in window // detect Firefox\n    ? (e) => e.message + '\\n' + e.stack\n    : (e) => e.stack || e.message;\nfunction printString(arg) {\n    if (arg === undefined) {\n        return 'undefined';\n    }\n    if (arg === null) {\n        return 'null';\n    }\n    if (arg instanceof Error) {\n        return printError(arg);\n    }\n    if (Array.isArray(arg)) {\n        return `Array(${arg.length})`;\n    }\n    return String(arg);\n}\nfunction printFloat(arg) {\n    if (typeof arg !== 'number')\n        return 'NaN';\n    return arg.toString();\n}\nfunction printInt(arg) {\n    if (typeof arg !== 'number')\n        return 'NaN';\n    return Math.floor(arg).toString();\n}\nfunction printObject(arg) {\n    if (arg === undefined) {\n        return 'undefined';\n    }\n    if (arg === null) {\n        return 'null';\n    }\n    if (arg instanceof Error) {\n        return printError(arg);\n    }\n    if (Array.isArray(arg)) {\n        const length = arg.length;\n        const values = arg.slice(0, 10).map(printString).join(', ');\n        return `Array(${length})[${values}]`;\n    }\n    if (typeof arg === 'object') {\n        const res = [];\n        let i = 0;\n        for (const k in arg) {\n            if (++i === 10) {\n                break;\n            }\n            const v = arg[k];\n            res.push(k + ': ' + printString(v));\n        }\n        return '{' + res.join(', ') + '}';\n    }\n    return arg.toString();\n}\nfunction printf(args) {\n    if (typeof args[0] === 'string') {\n        args.unshift(args.shift().replace(/%(o|s|f|d|i)/g, (s, t) => {\n            const arg = args.shift();\n            if (arg === undefined)\n                return s;\n            switch (t) {\n                case 'o':\n                    return printObject(arg);\n                case 's':\n                    return printString(arg);\n                case 'f':\n                    return printFloat(arg);\n                case 'd':\n                case 'i':\n                    return printInt(arg);\n                default:\n                    return s;\n            }\n        }));\n    }\n    return args.map(printObject).join(' ');\n}\nconst consoleMethods = ['log', 'info', 'warn', 'error', 'debug', 'assert'];\n/* harmony default export */ function modules_console(app, opts) {\n    const options = Object.assign({\n        consoleMethods,\n        consoleThrottling: 30,\n    }, opts);\n    if (!Array.isArray(options.consoleMethods) ||\n        options.consoleMethods.length === 0) {\n        return;\n    }\n    const sendConsoleLog = app.safe((level, args) => app.send(new ConsoleLog(level, printf(args))));\n    let n;\n    const reset = () => {\n        n = 0;\n    };\n    app.attachStartCallback(reset);\n    app.ticker.attach(reset, 33, false);\n    const patchConsole = (console) => options.consoleMethods.forEach((method) => {\n        if (consoleMethods.indexOf(method) === -1) {\n            console.error(`OpenReplay: unsupported console method \"${method}\"`);\n            return;\n        }\n        const fn = console[method];\n        console[method] = function (...args) {\n            fn.apply(this, args);\n            if (n++ > options.consoleThrottling) {\n                return;\n            }\n            sendConsoleLog(method, args);\n        };\n    });\n    patchConsole(window.console);\n    app.nodes.attachNodeCallback(app.safe(node => {\n        if (hasTag(node, \"IFRAME\")) { // TODO: newContextCallback\n            let context = node.contentWindow;\n            if (context) {\n                patchConsole(context.console);\n            }\n            app.attachEventListener(node, \"load\", () => {\n                if (node.contentWindow !== context) {\n                    context = node.contentWindow;\n                    patchConsole(context.console);\n                }\n            });\n        }\n    }));\n}\n\n// EXTERNAL MODULE: ./node_modules/.pnpm/error-stack-parser@2.1.4/node_modules/error-stack-parser/error-stack-parser.js\nvar error_stack_parser = __webpack_require__(3768);\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/modules/exception.js\n\n\nfunction getDefaultStack(e) {\n    return [{\n            columnNumber: e.colno,\n            lineNumber: e.lineno,\n            fileName: e.filename,\n            functionName: \"\",\n            source: \"\",\n        }];\n}\nfunction getExceptionMessage(error, fallbackStack) {\n    let stack = fallbackStack;\n    try {\n        stack = error_stack_parser.parse(error);\n    }\n    catch (e) {\n    }\n    return new JSException(error.name, error.message, JSON.stringify(stack));\n}\nfunction getExceptionMessageFromEvent(e) {\n    if (e instanceof ErrorEvent) {\n        if (e.error instanceof Error) {\n            return getExceptionMessage(e.error, getDefaultStack(e));\n        }\n        else {\n            let [name, message] = e.message.split(':');\n            if (!message) {\n                name = 'Error';\n                message = e.message;\n            }\n            return new JSException(name, message, JSON.stringify(getDefaultStack(e)));\n        }\n    }\n    else if ('PromiseRejectionEvent' in window && e instanceof PromiseRejectionEvent) {\n        if (e.reason instanceof Error) {\n            return getExceptionMessage(e.reason, []);\n        }\n        else {\n            let message;\n            try {\n                message = JSON.stringify(e.reason);\n            }\n            catch (_) {\n                message = String(e.reason);\n            }\n            return new JSException('Unhandled Promise Rejection', message, '[]');\n        }\n    }\n    return null;\n}\n/* harmony default export */ function exception(app, opts) {\n    const options = Object.assign({\n        captureExceptions: true,\n    }, opts);\n    if (options.captureExceptions) {\n        const handler = (e) => {\n            const msg = getExceptionMessageFromEvent(e);\n            if (msg != null) {\n                app.send(msg);\n            }\n        };\n        app.attachEventListener(window, 'unhandledrejection', (e) => handler(e));\n        app.attachEventListener(window, 'error', (e) => handler(e));\n    }\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/modules/img.js\n\n\n\nfunction resolveURL(url, location = document.location) {\n    url = url.trim();\n    if (url.startsWith('/')) {\n        return location.origin + url;\n    }\n    else if (url.startsWith('http://') ||\n        url.startsWith('https://') ||\n        url.startsWith('data:') // any other possible value here?\n    ) {\n        return url;\n    }\n    else {\n        return location.origin + location.pathname + url;\n    }\n}\nconst PLACEHOLDER_SRC = \"https://static.openreplay.com/tracker/placeholder.jpeg\";\n/* harmony default export */ function img(app) {\n    function sendPlaceholder(id, node) {\n        app.send(new SetNodeAttribute(id, \"src\", PLACEHOLDER_SRC));\n        const { width, height } = node.getBoundingClientRect();\n        if (!node.hasAttribute(\"width\")) {\n            app.send(new SetNodeAttribute(id, \"width\", String(width)));\n        }\n        if (!node.hasAttribute(\"height\")) {\n            app.send(new SetNodeAttribute(id, \"height\", String(height)));\n        }\n    }\n    const sendImgSrc = app.safe(function () {\n        const id = app.nodes.getID(this);\n        if (id === undefined) {\n            return;\n        }\n        const { src, complete, naturalWidth, naturalHeight, srcset } = this;\n        if (!complete) {\n            return;\n        }\n        const resolvedSrc = resolveURL(src || ''); // Src type is null sometimes. - is it true?\n        if (naturalWidth === 0 && naturalHeight === 0) {\n            if (isURL(resolvedSrc)) {\n                app.send(new ResourceTiming(timestamp(), 0, 0, 0, 0, 0, resolvedSrc, 'img'));\n            }\n        }\n        else if (resolvedSrc.length >= 1e5 || app.sanitizer.isMasked(id)) {\n            sendPlaceholder(id, this);\n        }\n        else {\n            app.send(new SetNodeAttribute(id, 'src', resolvedSrc));\n            if (srcset) {\n                const resolvedSrcset = srcset.split(',').map(str => resolveURL(str)).join(',');\n                app.send(new SetNodeAttribute(id, 'srcset', resolvedSrcset));\n            }\n        }\n    });\n    const observer = new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type === \"attributes\") {\n                const target = mutation.target;\n                const id = app.nodes.getID(target);\n                if (id === undefined) {\n                    return;\n                }\n                if (mutation.attributeName === \"src\") {\n                    const src = target.src;\n                    app.send(new SetNodeAttributeURLBased(id, 'src', src, app.getBaseHref()));\n                }\n                if (mutation.attributeName === \"srcset\") {\n                    const srcset = target.srcset;\n                    app.send(new SetNodeAttribute(id, 'srcset', srcset));\n                }\n            }\n        }\n    });\n    app.nodes.attachNodeCallback((node) => {\n        if (!hasTag(node, \"IMG\")) {\n            return;\n        }\n        app.nodes.attachElementListener('error', node, sendImgSrc);\n        app.nodes.attachElementListener('load', node, sendImgSrc);\n        sendImgSrc.call(node);\n        observer.observe(node, { attributes: true, attributeFilter: [\"src\", \"srcset\"] });\n    });\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/modules/input.js\n\n\n\nconst INPUT_TYPES = ['text', 'password', 'email', 'search', 'number', 'range', 'date'];\nfunction isTextEditable(node) {\n    if (hasTag(node, \"TEXTAREA\")) {\n        return true;\n    }\n    if (!hasTag(node, \"INPUT\")) {\n        return false;\n    }\n    return INPUT_TYPES.includes(node.type);\n}\nfunction isCheckable(node) {\n    if (!hasTag(node, \"INPUT\")) {\n        return false;\n    }\n    const type = node.type;\n    return type === 'checkbox' || type === 'radio';\n}\nconst labelElementFor = IN_BROWSER && 'labels' in HTMLInputElement.prototype\n    ? (node) => {\n        let p = node;\n        while ((p = p.parentNode) !== null) {\n            if (hasTag(p, \"LABEL\")) {\n                return p;\n            }\n        }\n        const labels = node.labels;\n        if (labels !== null && labels.length === 1) {\n            return labels[0];\n        }\n    }\n    : (node) => {\n        let p = node;\n        while ((p = p.parentNode) !== null) {\n            if (hasTag(p, \"LABEL\")) {\n                return p;\n            }\n        }\n        const id = node.id;\n        if (id) {\n            const labels = document.querySelectorAll('label[for=\"' + id + '\"]');\n            if (labels !== null && labels.length === 1) {\n                return labels[0];\n            }\n        }\n    };\nfunction getInputLabel(node) {\n    let label = getLabelAttribute(node);\n    if (label === null) {\n        const labelElement = labelElementFor(node);\n        label = (labelElement && labelElement.innerText)\n            || node.placeholder\n            || node.name\n            || node.id\n            || node.className\n            || node.type;\n    }\n    return normSpaces(label).slice(0, 100);\n}\n/* harmony default export */ function input(app, opts) {\n    const options = Object.assign({\n        obscureInputNumbers: true,\n        obscureInputEmails: true,\n        defaultInputMode: 0 /* Plain */,\n        obscureInputDates: false,\n    }, opts);\n    function sendInputTarget(id, node) {\n        const label = getInputLabel(node);\n        if (label !== '') {\n            app.send(new SetInputTarget(id, label));\n        }\n    }\n    function sendInputValue(id, node) {\n        let value = node.value;\n        let inputMode = options.defaultInputMode;\n        if (node.type === 'password' || hasOpenreplayAttribute(node, 'hidden')) {\n            inputMode = 2 /* Hidden */;\n        }\n        else if (hasOpenreplayAttribute(node, 'obscured') ||\n            (inputMode === 0 /* Plain */ &&\n                ((options.obscureInputNumbers && node.type !== 'date' && /\\d\\d\\d\\d/.test(value)) ||\n                    (options.obscureInputDates && node.type === 'date') ||\n                    (options.obscureInputEmails &&\n                        (node.type === 'email' || !!~value.indexOf('@')))))) {\n            inputMode = 1 /* Obscured */;\n        }\n        let mask = 0;\n        switch (inputMode) {\n            case 2 /* Hidden */:\n                mask = -1;\n                value = '';\n                break;\n            case 1 /* Obscured */:\n                mask = value.length;\n                value = '';\n                break;\n        }\n        app.send(new SetInputValue(id, value, mask));\n    }\n    const inputValues = new Map();\n    const checkableValues = new Map();\n    const registeredTargets = new Set();\n    app.attachStopCallback(() => {\n        inputValues.clear();\n        checkableValues.clear();\n        registeredTargets.clear();\n    });\n    app.ticker.attach(() => {\n        inputValues.forEach((value, id) => {\n            const node = app.nodes.getNode(id);\n            if (!node)\n                return;\n            if (!isTextEditable(node)) {\n                inputValues.delete(id);\n                return;\n            }\n            if (value !== node.value) {\n                inputValues.set(id, node.value);\n                if (!registeredTargets.has(id)) {\n                    registeredTargets.add(id);\n                    sendInputTarget(id, node);\n                }\n                sendInputValue(id, node);\n            }\n        });\n        checkableValues.forEach((checked, id) => {\n            const node = app.nodes.getNode(id);\n            if (!node)\n                return;\n            if (!isCheckable(node)) {\n                checkableValues.delete(id);\n                return;\n            }\n            if (checked !== node.checked) {\n                checkableValues.set(id, node.checked);\n                app.send(new SetInputChecked(id, node.checked));\n            }\n        });\n    });\n    app.ticker.attach(Set.prototype.clear, 100, false, registeredTargets);\n    app.nodes.attachNodeCallback(app.safe((node) => {\n        const id = app.nodes.getID(node);\n        if (id === undefined) {\n            return;\n        }\n        // TODO: support multiple select (?): use selectedOptions; Need send target?\n        if (hasTag(node, \"SELECT\")) {\n            sendInputValue(id, node);\n            app.attachEventListener(node, \"change\", () => {\n                sendInputValue(id, node);\n            });\n        }\n        if (isTextEditable(node)) {\n            inputValues.set(id, node.value);\n            sendInputValue(id, node);\n            return;\n        }\n        if (isCheckable(node)) {\n            checkableValues.set(id, node.checked);\n            app.send(new SetInputChecked(id, node.checked));\n            return;\n        }\n    }));\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/modules/mouse.js\n\n\n\n\nfunction _getSelector(target) {\n    let el = target;\n    let selector = null;\n    do {\n        if (el.id) {\n            return `#${el.id}` + (selector ? ` > ${selector}` : '');\n        }\n        selector =\n            el.className.split(' ')\n                .map(cn => cn.trim())\n                .filter(cn => cn !== '')\n                .reduce((sel, cn) => `${sel}.${cn}`, el.tagName.toLowerCase()) +\n                (selector ? ` > ${selector}` : '');\n        if (el === document.body) {\n            return selector;\n        }\n        el = el.parentElement;\n    } while (el !== document.body && el !== null);\n    return selector;\n}\nfunction isClickable(element) {\n    const tag = element.tagName.toUpperCase();\n    return tag === 'BUTTON' ||\n        tag === 'A' ||\n        tag === 'LI' ||\n        tag === 'SELECT' ||\n        element.onclick != null ||\n        element.getAttribute('role') === 'button';\n    //|| element.className.includes(\"btn\")\n    // MBTODO: intersect addEventListener\n}\n//TODO: fix (typescript doesn't allow work when the guard is inside the function)\nfunction getTarget(target) {\n    if (target instanceof Element) {\n        return _getTarget(target);\n    }\n    return null;\n}\nfunction _getTarget(target) {\n    let element = target;\n    while (element !== null && element !== document.documentElement) {\n        if (hasOpenreplayAttribute(element, 'masked')) {\n            return null;\n        }\n        element = element.parentElement;\n    }\n    if (isSVGElement(target)) {\n        let owner = target.ownerSVGElement;\n        while (owner !== null) {\n            target = owner;\n            owner = owner.ownerSVGElement;\n        }\n    }\n    element = target;\n    while (element !== null && element !== document.documentElement) {\n        const tag = element.tagName.toUpperCase();\n        if (tag === 'LABEL') {\n            return null;\n        }\n        if (tag === 'INPUT') {\n            return element;\n        }\n        if (isClickable(element) ||\n            getLabelAttribute(element) !== null) {\n            return element;\n        }\n        element = element.parentElement;\n    }\n    return target === document.documentElement ? null : target;\n}\n/* harmony default export */ function mouse(app) {\n    function getTargetLabel(target) {\n        const dl = getLabelAttribute(target);\n        if (dl !== null) {\n            return dl;\n        }\n        if (hasTag(target, \"INPUT\")) {\n            return getInputLabel(target);\n        }\n        if (isClickable(target)) {\n            let label = '';\n            if (target instanceof HTMLElement) {\n                label = app.sanitizer.getInnerTextSecure(target);\n            }\n            label = label || target.id || target.className;\n            return normSpaces(label).slice(0, 100);\n        }\n        return '';\n    }\n    let mousePositionX = -1;\n    let mousePositionY = -1;\n    let mousePositionChanged = false;\n    let mouseTarget = null;\n    let mouseTargetTime = 0;\n    app.attachStopCallback(() => {\n        mousePositionX = -1;\n        mousePositionY = -1;\n        mousePositionChanged = false;\n        mouseTarget = null;\n    });\n    const sendMouseMove = () => {\n        if (mousePositionChanged) {\n            app.send(new MouseMove(mousePositionX, mousePositionY));\n            mousePositionChanged = false;\n        }\n    };\n    const selectorMap = {};\n    function getSelector(id, target) {\n        return selectorMap[id] = selectorMap[id] || _getSelector(target);\n    }\n    app.attachEventListener(document.documentElement, 'mouseover', (e) => {\n        const target = getTarget(e.target);\n        if (target !== mouseTarget) {\n            mouseTarget = target;\n            mouseTargetTime = performance.now();\n        }\n    });\n    app.attachEventListener(document, 'mousemove', (e) => {\n        mousePositionX = e.clientX;\n        mousePositionY = e.clientY;\n        mousePositionChanged = true;\n    }, false);\n    app.attachEventListener(document, 'click', (e) => {\n        const target = getTarget(e.target);\n        if ((!e.clientX && !e.clientY) || target === null) {\n            return;\n        }\n        const id = app.nodes.getID(target);\n        if (id !== undefined) {\n            sendMouseMove();\n            app.send(new MouseClick(id, mouseTarget === target\n                ? Math.round(performance.now() - mouseTargetTime)\n                : 0, getTargetLabel(target), getSelector(id, target)), true);\n        }\n        mouseTarget = null;\n    });\n    app.ticker.attach(sendMouseMove, 10);\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/modules/timing.js\n\n\n\nfunction getPaintBlocks(resources) {\n    const paintBlocks = [];\n    const elements = document.getElementsByTagName('*');\n    const styleURL = /url\\((\"[^\"]*\"|'[^']*'|[^)]*)\\)/i;\n    for (let i = 0; i < elements.length; i++) {\n        const element = elements[i];\n        let src = '';\n        if (hasTag(element, \"IMG\")) {\n            src = element.currentSrc || element.src;\n        }\n        if (!src) {\n            const backgroundImage = getComputedStyle(element).getPropertyValue('background-image');\n            if (backgroundImage) {\n                const matches = styleURL.exec(backgroundImage);\n                if (matches !== null) {\n                    src = matches[1];\n                    if (src.startsWith('\"') || src.startsWith(\"'\")) {\n                        src = src.substr(1, src.length - 2);\n                    }\n                }\n            }\n        }\n        if (!src)\n            continue;\n        const time = src.substr(0, 10) === 'data:image' ? 0 : resources[src];\n        if (time === undefined)\n            continue;\n        const rect = element.getBoundingClientRect();\n        const top = Math.max(rect.top, 0);\n        const left = Math.max(rect.left, 0);\n        const bottom = Math.min(rect.bottom, window.innerHeight ||\n            (document.documentElement && document.documentElement.clientHeight) ||\n            0);\n        const right = Math.min(rect.right, window.innerWidth ||\n            (document.documentElement && document.documentElement.clientWidth) ||\n            0);\n        if (bottom <= top || right <= left)\n            continue;\n        const area = (bottom - top) * (right - left);\n        paintBlocks.push({ time, area });\n    }\n    return paintBlocks;\n}\nfunction calculateSpeedIndex(firstContentfulPaint, paintBlocks) {\n    let a = (Math.max((document.documentElement && document.documentElement.clientWidth) || 0, window.innerWidth || 0) *\n        Math.max((document.documentElement && document.documentElement.clientHeight) ||\n            0, window.innerHeight || 0)) /\n        10;\n    let s = a * firstContentfulPaint;\n    for (let i = 0; i < paintBlocks.length; i++) {\n        const { time, area } = paintBlocks[i];\n        a += area;\n        s += area * (time > firstContentfulPaint ? time : firstContentfulPaint);\n    }\n    return a === 0 ? 0 : s / a;\n}\n/* harmony default export */ function timing(app, opts) {\n    const options = Object.assign({\n        captureResourceTimings: true,\n        capturePageLoadTimings: true,\n        capturePageRenderTimings: true,\n    }, opts);\n    if (!('PerformanceObserver' in window)) {\n        options.captureResourceTimings = false;\n    }\n    if (!options.captureResourceTimings) {\n        return;\n    } // Resources are necessary for all timings\n    let resources = {};\n    function resourceTiming(entry) {\n        if (entry.duration < 0 || !isURL(entry.name) || app.isServiceURL(entry.name))\n            return;\n        if (resources !== null) {\n            resources[entry.name] = entry.startTime + entry.duration;\n        }\n        app.send(new ResourceTiming(entry.startTime + performance.timing.navigationStart, entry.duration, entry.responseStart && entry.startTime\n            ? entry.responseStart - entry.startTime\n            : 0, entry.transferSize > entry.encodedBodySize\n            ? entry.transferSize - entry.encodedBodySize\n            : 0, entry.encodedBodySize || 0, entry.decodedBodySize || 0, entry.name, entry.initiatorType));\n    }\n    const observer = new PerformanceObserver((list) => list.getEntries().forEach(resourceTiming));\n    let prevSessionID;\n    app.attachStartCallback(function ({ sessionID }) {\n        if (sessionID !== prevSessionID) { // Send past page resources on a newly started session\n            performance.getEntriesByType('resource').forEach(resourceTiming);\n            prevSessionID = sessionID;\n        }\n        observer.observe({ entryTypes: ['resource'] });\n    });\n    app.attachStopCallback(function () {\n        observer.disconnect();\n    });\n    let firstPaint = 0, firstContentfulPaint = 0;\n    if (options.capturePageLoadTimings) {\n        let pageLoadTimingSent = false;\n        app.ticker.attach(() => {\n            if (pageLoadTimingSent) {\n                return;\n            }\n            if (firstPaint === 0 || firstContentfulPaint === 0) {\n                performance\n                    .getEntriesByType('paint')\n                    .forEach((entry) => {\n                    const { name, startTime } = entry;\n                    switch (name) {\n                        case 'first-paint':\n                            firstPaint = startTime;\n                            break;\n                        case 'first-contentful-paint':\n                            firstContentfulPaint = startTime;\n                            break;\n                    }\n                });\n            }\n            if (performance.timing.loadEventEnd || performance.now() > 30000) {\n                pageLoadTimingSent = true;\n                const { navigationStart, requestStart, responseStart, responseEnd, domContentLoadedEventStart, domContentLoadedEventEnd, loadEventStart, loadEventEnd, } = performance.timing;\n                app.send(new PageLoadTiming(requestStart - navigationStart || 0, responseStart - navigationStart || 0, responseEnd - navigationStart || 0, domContentLoadedEventStart - navigationStart || 0, domContentLoadedEventEnd - navigationStart || 0, loadEventStart - navigationStart || 0, loadEventEnd - navigationStart || 0, firstPaint, firstContentfulPaint));\n            }\n        }, 30);\n    }\n    if (options.capturePageRenderTimings) {\n        let visuallyComplete = 0, interactiveWindowStartTime = 0, interactiveWindowTickTime = 0, paintBlocks = null;\n        let pageRenderTimingSent = false;\n        app.ticker.attach(() => {\n            if (pageRenderTimingSent) {\n                return;\n            }\n            const time = performance.now();\n            if (resources !== null) {\n                visuallyComplete = Math.max.apply(null, Object.keys(resources).map((k) => resources[k]));\n                if (time - visuallyComplete > 1000) {\n                    paintBlocks = getPaintBlocks(resources);\n                    resources = null;\n                }\n            }\n            if (interactiveWindowTickTime !== null) {\n                if (time - interactiveWindowTickTime > 50) {\n                    interactiveWindowStartTime = time;\n                }\n                interactiveWindowTickTime =\n                    time - interactiveWindowStartTime > 5000 ? null : time;\n            }\n            if ((paintBlocks !== null && interactiveWindowTickTime === null) ||\n                time > 30000) {\n                pageRenderTimingSent = true;\n                resources = null;\n                const speedIndex = paintBlocks === null\n                    ? 0\n                    : calculateSpeedIndex(firstContentfulPaint || firstPaint, paintBlocks);\n                const timeToInteractive = interactiveWindowTickTime === null\n                    ? Math.max(interactiveWindowStartTime, firstContentfulPaint, performance.timing.domContentLoadedEventEnd -\n                        performance.timing.navigationStart || 0)\n                    : 0;\n                app.send(new PageRenderTiming(speedIndex, firstContentfulPaint > visuallyComplete\n                    ? firstContentfulPaint\n                    : visuallyComplete, timeToInteractive));\n            }\n        });\n    }\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/modules/scroll.js\n\n\n/* harmony default export */ function modules_scroll(app) {\n    let documentScroll = false;\n    const nodeScroll = new Map();\n    const sendSetViewportScroll = app.safe(() => app.send(new SetViewportScroll(window.pageXOffset ||\n        (document.documentElement && document.documentElement.scrollLeft) ||\n        (document.body && document.body.scrollLeft) ||\n        0, window.pageYOffset ||\n        (document.documentElement && document.documentElement.scrollTop) ||\n        (document.body && document.body.scrollTop) ||\n        0)));\n    const sendSetNodeScroll = app.safe((s, node) => {\n        const id = app.nodes.getID(node);\n        if (id !== undefined) {\n            app.send(new SetNodeScroll(id, s[0], s[1]));\n        }\n    });\n    app.attachStartCallback(sendSetViewportScroll);\n    app.attachStopCallback(() => {\n        documentScroll = false;\n        nodeScroll.clear();\n    });\n    app.nodes.attachNodeCallback((node, isStart) => {\n        if (isStart && isElementNode(node) && node.scrollLeft + node.scrollTop > 0) {\n            nodeScroll.set(node, [node.scrollLeft, node.scrollTop]);\n        }\n    });\n    app.attachEventListener(window, 'scroll', (e) => {\n        const target = e.target;\n        if (target === document) {\n            documentScroll = true;\n            return;\n        }\n        if (target instanceof Element) {\n            nodeScroll.set(target, [target.scrollLeft, target.scrollTop]);\n        }\n    });\n    app.ticker.attach(() => {\n        if (documentScroll) {\n            sendSetViewportScroll();\n            documentScroll = false;\n        }\n        nodeScroll.forEach(sendSetNodeScroll);\n        nodeScroll.clear();\n    }, 5, false);\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/modules/viewport.js\n\n/* harmony default export */ function viewport(app) {\n    let url, width, height;\n    let navigationStart = performance.timing.navigationStart;\n    const sendSetPageLocation = app.safe(() => {\n        const { URL } = document;\n        if (URL !== url) {\n            url = URL;\n            app.send(new SetPageLocation(url, document.referrer, navigationStart));\n            navigationStart = 0;\n        }\n    });\n    const sendSetViewportSize = app.safe(() => {\n        const { innerWidth, innerHeight } = window;\n        if (innerWidth !== width || innerHeight !== height) {\n            width = innerWidth;\n            height = innerHeight;\n            app.send(new SetViewportSize(width, height));\n        }\n    });\n    const sendSetPageVisibility = document.hidden === undefined\n        ? Function.prototype\n        : app.safe(() => app.send(new SetPageVisibility(document.hidden)));\n    app.attachStartCallback(() => {\n        url = '';\n        width = height = -1;\n        sendSetPageLocation();\n        sendSetViewportSize();\n        sendSetPageVisibility();\n    });\n    if (document.hidden !== undefined) {\n        app.attachEventListener(document, 'visibilitychange', sendSetPageVisibility, false, false);\n    }\n    app.ticker.attach(sendSetPageLocation, 1, false);\n    app.ticker.attach(sendSetViewportSize, 5, false);\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/modules/cssrules.js\n\n\n/* harmony default export */ function cssrules(app) {\n    if (app === null) {\n        return;\n    }\n    if (!window.CSSStyleSheet) {\n        app.send(new TechnicalInfo(\"no_stylesheet_prototype_in_window\", \"\"));\n        return;\n    }\n    const processOperation = app.safe((stylesheet, index, rule) => {\n        const sendMessage = typeof rule === 'string'\n            ? (nodeID) => app.send(new CSSInsertRuleURLBased(nodeID, rule, index, app.getBaseHref()))\n            : (nodeID) => app.send(new CSSDeleteRule(nodeID, index));\n        // TODO: Extend messages to maintain nested rules (CSSGroupingRule prototype, as well as CSSKeyframesRule)\n        if (stylesheet.ownerNode == null) {\n            throw new Error(\"Owner Node not found\");\n        }\n        const nodeID = app.nodes.getID(stylesheet.ownerNode);\n        if (nodeID !== undefined) {\n            sendMessage(nodeID);\n        } // else error?\n    });\n    const { insertRule, deleteRule } = CSSStyleSheet.prototype;\n    CSSStyleSheet.prototype.insertRule = function (rule, index = 0) {\n        processOperation(this, index, rule);\n        return insertRule.call(this, rule, index);\n    };\n    CSSStyleSheet.prototype.deleteRule = function (index) {\n        processOperation(this, index);\n        return deleteRule.call(this, index);\n    };\n    app.nodes.attachNodeCallback((node) => {\n        if (!hasTag(node, \"STYLE\") || !node.sheet) {\n            return;\n        }\n        if (node.textContent !== null && node.textContent.trim().length > 0) {\n            return; // Only fully virtual sheets maintained so far\n        }\n        const rules = node.sheet.cssRules;\n        for (let i = 0; i < rules.length; i++) {\n            processOperation(node.sheet, i, rules[i].cssText);\n        }\n    });\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@openreplay+tracker@3.5.16/node_modules/@openreplay/tracker/lib/index.js\n\n\n\n\nconst Messages = (/* unused pure expression or super */ null && (_Messages));\n\n\n\n\n\n\n\n\n\n\n\n\nconst DOCS_SETUP = '/installation/setup-or';\nfunction processOptions(obj) {\n    if (obj == null) {\n        console.error(`OpenReplay: invalid options argument type. Please, check documentation on ${DOCS_HOST}${DOCS_SETUP}`);\n        return false;\n    }\n    if (typeof obj.projectKey !== 'string') {\n        if (typeof obj.projectKey !== 'number') {\n            if (typeof obj.projectID !== 'number') { // Back compatability\n                console.error(`OpenReplay: projectKey is missing or wrong type (string is expected). Please, check ${DOCS_HOST}${DOCS_SETUP} for more information.`);\n                return false;\n            }\n            else {\n                obj.projectKey = obj.projectID.toString();\n                deprecationWarn(\"`projectID` option\", \"`projectKey` option\", DOCS_SETUP);\n            }\n        }\n        else {\n            console.warn(\"OpenReplay: projectKey is expected to have a string type.\");\n            obj.projectKey = obj.projectKey.toString();\n        }\n    }\n    if (typeof obj.sessionToken !== 'string' && obj.sessionToken != null) {\n        console.warn(`OpenReplay: invalid options argument type. Please, check documentation on ${DOCS_HOST}${DOCS_SETUP}`);\n    }\n    return true;\n}\nclass API {\n    constructor(options) {\n        this.options = options;\n        this.app = null;\n        this.handleError = (e) => {\n            if (this.app === null) {\n                return;\n            }\n            if (e instanceof Error) {\n                this.app.send(getExceptionMessage(e, []));\n            }\n            else if (e instanceof ErrorEvent ||\n                ('PromiseRejectionEvent' in window && e instanceof PromiseRejectionEvent)) {\n                const msg = getExceptionMessageFromEvent(e);\n                if (msg != null) {\n                    this.app.send(msg);\n                }\n            }\n        };\n        if (!IN_BROWSER || !processOptions(options)) {\n            return;\n        }\n        if (window.__OPENREPLAY__) {\n            console.error(\"OpenReplay: one tracker instance has been initialised already\");\n            return;\n        }\n        if (!options.__DISABLE_SECURE_MODE && location.protocol !== 'https:') {\n            console.error(\"OpenReplay: Your website must be publicly accessible and running on SSL in order for OpenReplay to properly capture and replay the user session. You can disable this check by setting `__DISABLE_SECURE_MODE` option to `true` if you are testing in localhost. Keep in mind, that asset files on a local machine are not available to the outside world. This might affect tracking if you use css files.\");\n            return;\n        }\n        const doNotTrack = options.respectDoNotTrack &&\n            (navigator.doNotTrack == '1'\n                // @ts-ignore\n                || window.doNotTrack == '1');\n        const app = this.app = doNotTrack ||\n            !('Map' in window) ||\n            !('Set' in window) ||\n            !('MutationObserver' in window) ||\n            !('performance' in window) ||\n            !('timing' in performance) ||\n            !('startsWith' in String.prototype) ||\n            !('Blob' in window) ||\n            !('Worker' in window)\n            ? null\n            : new App(options.projectKey, options.sessionToken, options);\n        if (app !== null) {\n            viewport(app);\n            cssrules(app);\n            connection(app);\n            modules_console(app, options);\n            exception(app, options);\n            img(app);\n            input(app, options);\n            mouse(app);\n            timing(app, options);\n            modules_performance(app, options);\n            modules_scroll(app);\n            window.__OPENREPLAY__ = this;\n            if (options.autoResetOnWindowOpen) {\n                const wOpen = window.open;\n                app.attachStartCallback(() => {\n                    // @ts-ignore ?\n                    window.open = function (...args) {\n                        app.resetNextPageSession(true);\n                        wOpen.call(window, ...args);\n                        app.resetNextPageSession(false);\n                    };\n                });\n                app.attachStopCallback(() => {\n                    window.open = wOpen;\n                });\n            }\n        }\n        else {\n            console.log(\"OpenReplay: browser doesn't support API required for tracking or doNotTrack is set to 1.\");\n            const req = new XMLHttpRequest();\n            const orig = options.ingestPoint || DEFAULT_INGEST_POINT;\n            req.open(\"POST\", orig + \"/v1/web/not-started\");\n            // no-cors issue only with text/plain or not-set Content-Type\n            // req.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n            req.send(JSON.stringify({\n                trackerVersion: '3.5.16',\n                projectKey: options.projectKey,\n                doNotTrack,\n                // TODO: add precise reason (an exact API missing)\n            }));\n        }\n    }\n    use(fn) {\n        return fn(this.app, this.options);\n    }\n    isActive() {\n        if (this.app === null) {\n            return false;\n        }\n        return this.app.active();\n    }\n    start(startOpts) {\n        if (!IN_BROWSER) {\n            console.error(`OpenReplay: you are trying to start Tracker on a node.js environment. If you want to use OpenReplay with SSR, please, use componentDidMount or useEffect API for placing the \\`tracker.start()\\` line. Check documentation on ${DOCS_HOST}${DOCS_SETUP}`);\n            return Promise.reject(\"Trying to start not in browser.\");\n        }\n        if (this.app === null) {\n            return Promise.reject(\"Browser doesn't support required api, or doNotTrack is active.\");\n        }\n        // TODO: check argument type\n        return this.app.start(startOpts);\n    }\n    stop() {\n        if (this.app === null) {\n            return;\n        }\n        this.app.stop(true);\n    }\n    getSessionToken() {\n        if (this.app === null) {\n            return null;\n        }\n        return this.app.getSessionToken();\n    }\n    getSessionID() {\n        if (this.app === null) {\n            return null;\n        }\n        return this.app.getSessionID();\n    }\n    sessionID() {\n        deprecationWarn(\"'sessionID' method\", \"'getSessionID' method\", \"/\");\n        return this.getSessionID();\n    }\n    setUserID(id) {\n        if (typeof id === 'string' && this.app !== null) {\n            this.app.session.setUserID(id);\n        }\n    }\n    userID(id) {\n        deprecationWarn(\"'userID' method\", \"'setUserID' method\", \"/\");\n        this.setUserID(id);\n    }\n    setUserAnonymousID(id) {\n        if (typeof id === 'string' && this.app !== null) {\n            this.app.send(new UserAnonymousID(id));\n        }\n    }\n    userAnonymousID(id) {\n        deprecationWarn(\"'userAnonymousID' method\", \"'setUserAnonymousID' method\", \"/\");\n        this.setUserAnonymousID(id);\n    }\n    setMetadata(key, value) {\n        if (typeof key === 'string' &&\n            typeof value === 'string' &&\n            this.app !== null) {\n            this.app.session.setMetadata(key, value);\n        }\n    }\n    metadata(key, value) {\n        deprecationWarn(\"'metadata' method\", \"'setMetadata' method\", \"/\");\n        this.setMetadata(key, value);\n    }\n    event(key, payload, issue = false) {\n        if (typeof key === 'string' && this.app !== null) {\n            if (issue) {\n                return this.issue(key, payload);\n            }\n            else {\n                try {\n                    payload = JSON.stringify(payload);\n                }\n                catch (e) {\n                    return;\n                }\n                this.app.send(new RawCustomEvent(key, payload));\n            }\n        }\n    }\n    issue(key, payload) {\n        if (typeof key === 'string' && this.app !== null) {\n            try {\n                payload = JSON.stringify(payload);\n            }\n            catch (e) {\n                return;\n            }\n            this.app.send(new CustomIssue(key, payload));\n        }\n    }\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/rng.js\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}\n;// CONCATENATED MODULE: ./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/regex.js\n/* harmony default export */ var regex = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);\n;// CONCATENATED MODULE: ./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/validate.js\n\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && regex.test(uuid);\n}\n\n/* harmony default export */ var esm_browser_validate = (validate);\n;// CONCATENATED MODULE: ./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/stringify.js\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!esm_browser_validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\n/* harmony default export */ var esm_browser_stringify = (stringify);\n;// CONCATENATED MODULE: ./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v4.js\n\n\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return esm_browser_stringify(rnds);\n}\n\n/* harmony default export */ var esm_browser_v4 = (v4);\n;// CONCATENATED MODULE: ./vendors/openReplay/reducer.ts\n// Libraries\n\n\n\n\nvar userId = esm_browser_v4();\nvar newTracker = function(config) {\n    var tracker = new API(config);\n    tracker.setUserID(userId);\n    __webpack_require__.e(/* import() */ 630).then(__webpack_require__.bind(__webpack_require__, 9630)).then(function(param) {\n        var trackerAssist = param.default;\n        tracker.use(trackerAssist({\n            callConfirm: {\n                text: \"Our support team wants to help you\",\n                confirmBtn: {\n                    innerHTML: \"\\uD83D\\uDC4D Accept\"\n                },\n                declineBtn: {\n                    innerHTML: \"❌ Not at this moment\"\n                }\n            },\n            controlConfirm: {\n                text: \"Would you mind letting us control your application?\",\n                confirmBtn: {\n                    innerHTML: \"\\uD83D\\uDC4D Accept\"\n                },\n                declineBtn: {\n                    innerHTML: \"❌ Not at this moment\"\n                }\n            }\n        }));\n    });\n    return tracker;\n};\nvar openReplayReducer = function(state, action) {\n    switch(action.type){\n        case \"init\":\n            {\n                if (!state.tracker) {\n                    return (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, state), {\n                        tracker: newTracker(state.config)\n                    });\n                }\n                return state;\n            }\n        case \"start\":\n            {\n                state.tracker.start();\n                return state;\n            }\n        case \"logEvent\":\n            {\n                var ref;\n                var _payload = action.payload, name = _payload.name, data = _payload.data;\n                (ref = state.tracker) === null || ref === void 0 ? void 0 : ref.event(name, data);\n                return state;\n            }\n        case \"logIssue\":\n            {\n                var ref1;\n                var _payload1 = action.payload, name1 = _payload1.name, data1 = _payload1.data;\n                (ref1 = state.tracker) === null || ref1 === void 0 ? void 0 : ref1.issue(name1, data1);\n                return state;\n            }\n        case \"reportError\":\n            {\n                var ref2;\n                var error = action.payload;\n                (ref2 = state.tracker) === null || ref2 === void 0 ? void 0 : ref2.handleError(error);\n                return state;\n            }\n    }\n};\n/* harmony default export */ var reducer = (openReplayReducer);\n\n;// CONCATENATED MODULE: ./vendors/openReplay/provider.tsx\n// Libraries\n\n\n// OpenReplay\n\n\nvar TrackerProvider = function(param) {\n    var children = param.children, _config = param.config, config = _config === void 0 ? {} : _config;\n    var ref = (0,react.useReducer)(reducer, {\n        tracker: null,\n        config: config\n    }), dispatch = ref[1];\n    var value = {\n        startTracking: function() {\n            return dispatch({\n                type: \"start\"\n            });\n        },\n        initTracker: function() {\n            return dispatch({\n                type: \"init\"\n            });\n        },\n        logEvent: function(evnt) {\n            return dispatch({\n                type: \"logEvent\",\n                payload: evnt\n            });\n        },\n        logIssue: function(evnt) {\n            return dispatch({\n                type: \"logIssue\",\n                payload: evnt\n            });\n        },\n        reportError: function(error) {\n            return dispatch({\n                type: \"reportError\",\n                payload: error\n            });\n        }\n    };\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(context.Provider, {\n        value: value,\n        children: children\n    });\n};\n/* harmony default export */ var provider = (TrackerProvider);\n\n;// CONCATENATED MODULE: ./vendors/openReplay/index.ts\n\n\n\n\n\n\n;// CONCATENATED MODULE: ./vendors/index.ts\n\n\n\n/***/ }),\n\n/***/ 8439:\n/***/ (function() {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n\n/***/ 984:\n/***/ (function(module, exports) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {}\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n    var objectProps = ['evalOrigin'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps, objectProps);\n\n    function StackFrame(obj) {\n        if (!obj) return;\n        for (var i = 0; i < props.length; i++) {\n            if (obj[props[i]] !== undefined) {\n                this['set' + _capitalize(props[i])](obj[props[i]]);\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var fileName = this.getFileName() || '';\n            var lineNumber = this.getLineNumber() || '';\n            var columnNumber = this.getColumnNumber() || '';\n            var functionName = this.getFunctionName() || '';\n            if (this.getIsEval()) {\n                if (fileName) {\n                    return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n                }\n                return '[eval]:' + lineNumber + ':' + columnNumber;\n            }\n            if (functionName) {\n                return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n            }\n            return fileName + ':' + lineNumber + ':' + columnNumber;\n        }\n    };\n\n    StackFrame.fromString = function StackFrame$$fromString(str) {\n        var argsStartIndex = str.indexOf('(');\n        var argsEndIndex = str.lastIndexOf(')');\n\n        var functionName = str.substring(0, argsStartIndex);\n        var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');\n        var locationString = str.substring(argsEndIndex + 1);\n\n        if (locationString.indexOf('@') === 0) {\n            var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, '');\n            var fileName = parts[1];\n            var lineNumber = parts[2];\n            var columnNumber = parts[3];\n        }\n\n        return new StackFrame({\n            functionName: functionName,\n            args: args || undefined,\n            fileName: fileName,\n            lineNumber: lineNumber || undefined,\n            columnNumber: columnNumber || undefined\n        });\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n\n\n/***/ }),\n\n/***/ 4737:\n/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": function() { return /* binding */ _objectSpread; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_define_property.mjs\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_object_spread.mjs\n\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\n/***/ }),\n\n/***/ 8316:\n/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": function() { return /* binding */ _objectSpreadProps; }\n/* harmony export */ });\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\n\nfunction _objectSpreadProps(target, source) {\n  source = source != null ? source : {}\n  if (Object.getOwnPropertyDescriptors) {\n    Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n  } else {\n    ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(\n        target,\n        key,\n        Object.getOwnPropertyDescriptor(source, key)\n      );\n    });\n  }\n\n  return target;\n}\n\n/***/ })\n\n},\n/******/ function(__webpack_require__) { // webpackRuntimeModules\n/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }\n/******/ __webpack_require__.O(0, [774,179], function() { return __webpack_exec__(3425), __webpack_exec__(1896); });\n/******/ var __webpack_exports__ = __webpack_require__.O();\n/******/ _N_E = __webpack_exports__;\n/******/ }\n]);"],"names":["self","push","module","exports","__webpack_require__","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","undefined","apply","StackFrame","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","SAFARI_NATIVE_CODE_REGEXP","parse","error","stacktrace","parseOpera","stack","match","parseV8OrIE","parseFFOrSafari","extractLocation","urlLike","indexOf","parts","regExp","exec","replace","filtered","split","filter","line","map","sanitizedLine","location","locationParts","functionName","fileName","lineNumber","columnNumber","source","functionNameRegex","matches","e","message","length","parseOpera9","parseOpera11","parseOpera10","lineRE","lines","result","i","len","argsRaw","tokens","pop","functionCall","shift","args","__unused_webpack_module","__unused_webpack_exports","window","__NEXT_P","__webpack_exports__","r","_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","_vendors__WEBPACK_IMPORTED_MODULE_2__","param","Component","pageProps","jsx","w","config","projectKey","children","Z","d","context","provider","RecentsType","ActivityState","getRandomValues","react","createContext","startTracking","initTracker","logEvent","logIssue","reportError","jsx_runtime","_object_spread","_object_spread_props","bindNew","Class","_Class","prototype","classes","Map","BatchMeta","constructor","pageNo","firstIndex","timestamp","_id","writer","uint","int","set","Timestamp","SetPageLocation","url","referrer","navigationStart","string","SetViewportSize","width","height","SetViewportScroll","x","y","CreateDocument","CreateElementNode","id","parentID","index","tag","svg","boolean","CreateTextNode","MoveNode","RemoveNode","SetNodeAttribute","name","value","RemoveNodeAttribute","SetNodeData","data","SetNodeScroll","SetInputTarget","label","SetInputValue","mask","SetInputChecked","checked","MouseMove","ConsoleLog","level","PageLoadTiming","requestStart","responseStart","responseEnd","domContentLoadedEventStart","domContentLoadedEventEnd","loadEventStart","loadEventEnd","firstPaint","firstContentfulPaint","PageRenderTiming","speedIndex","visuallyComplete","timeToInteractive","JSException","payload","RawCustomEvent","UserID","UserAnonymousID","Metadata","key","CSSInsertRule","rule","CSSDeleteRule","Fetch","method","request","response","status","duration","Profiler","OTable","StateAction","type","Redux","action","state","Vuex","mutation","MobX","NgRx","GraphQL","operationKind","operationName","variables","PerformanceTrack","frames","ticks","totalJSHeapSize","usedJSHeapSize","ResourceTiming","ttfb","headerSize","encodedBodySize","decodedBodySize","initiator","ConnectionInformation","downlink","SetPageVisibility","hidden","LongTask","containerType","containerSrc","containerId","containerName","SetNodeAttributeURLBased","baseURL","SetCSSDataURLBased","TechnicalInfo","CustomIssue","PageClose","CSSInsertRuleURLBased","MouseClick","hesitationTime","selector","CreateIFrameDocument","frameID","Math","round","performance","now","timing","stars","String","repeat","str","normSpaces","trim","isURL","s","startsWith","IN_BROWSER","DOCS_HOST","warnedFeatures","deprecationWarn","nameOfFeature","useInstead","docsPath","console","warn","getLabelAttribute","getAttribute","hasOpenreplayAttribute","newName","hasAttribute","oldName","isSVGElement","node","namespaceURI","isElementNode","nodeType","Node","ELEMENT_NODE","isTextNode","TEXT_NODE","isRootNode","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","hasTag","el","tagName","nodeName","isIgnored","toUpperCase","rel","as","includes","isObservable","Observer","app","isTopContext","commited","recents","indexes","attributesMap","textSet","Set","observer","MutationObserver","safe","mutations","target","removedNodes","bindTree","addedNodes","nodes","getID","has","Changed","attributeName","attr","get","add","commitNodes","clear","substr","send","getBaseHref","parentElement","sanitizer","sanitize","isNew","registerNode","New","Removed","RemovedChild","isChildUnbinding","bindNode","walker","document","createTreeWalker","NodeFilter","SHOW_ELEMENT","SHOW_TEXT","acceptNode","FILTER_REJECT","FILTER_ACCEPT","nextNode","unbindChildNode","currentNode","unregisterNode","parent","parentNode","commitNode","unbindNode","handleNode","isMaskedContainer","sibling","previousSibling","siblingID","recentsType","clientWidth","clientHeight","cloneNode","style","attributes","sendNodeAttribute","sendNodeData","getNode","cmt","_commitNode","isStart","forEach","callNodeCallbacks","beforeCommit","nodeToBind","observe","childList","characterData","subtree","attributeOldValue","characterDataOldValue","disconnect","IFrameObserver","iframe","doc","contentDocument","hostID","observeRoot","docID","log","ShadowRootObserver","shRoot","shadowRoot","rootID","attachShadowNativeFn","Element","attachShadow","ShadowRoot","LogLevel","Verbose","Log","Warnings","Errors","Silent","IsCustomLevel","l","Logger","options","perf","memory","deviceMemory","navigator","jsHeapSizeLimit","CANCELED","UnsuccessfulStart","reason","success","SuccessfulStart","Object","assign","body","DEFAULT_INGEST_POINT","printError","printString","arg","Error","Array","isArray","printObject","values","slice","join","res","k","v","toString","consoleMethods","error_stack_parser","getDefaultStack","colno","lineno","filename","getExceptionMessage","fallbackStack","JSON","stringify","getExceptionMessageFromEvent","ErrorEvent","PromiseRejectionEvent","_","resolveURL","origin","pathname","INPUT_TYPES","isTextEditable","isCheckable","labelElementFor","HTMLInputElement","p","labels","querySelectorAll","getInputLabel","labelElement","innerText","placeholder","className","isClickable","element","onclick","getTarget","_getTarget","documentElement","owner","ownerSVGElement","DOCS_SETUP","API","handleError","msg","processOptions","obj","projectID","sessionToken","__OPENREPLAY__","__DISABLE_SECURE_MODE","protocol","doNotTrack","respectDoNotTrack","messages","startCallbacks","stopCallbacks","commitCallbacks","activityState","NotActive","version","revID","node_id","session_token_key","session_pageno_key","session_reset_key","local_uuid_key","ingestPoint","resourceBaseHref","verbose","__is_snippet","__debug_report_edp","localStorage","sessionStorage","masked","maskedContainers","obscureTextEmails","obscureTextNumbers","f","nodeCallbacks","elementListeners","nodeCallback","elementListener","addEventListener","listeners","delete","removeEventListener","listener","contains","cb","iframeObservers","shadowRootObservers","captureIFrames","attachNodeCallback","handleIframe","handleShadowRoot","handle","contentWindow","host","shadow","arguments","o","ticker","timer","callbacks","callback","n","useSafe","thisArg","bind","t","unshift","setInterval","clearInterval","attach","commit","debug","__debug__","notify","session","metadata","userID","sessionID","newInfo","entries","handleUpdate","attachUpdateCallback","setItem","worker","Worker","URL","createObjectURL","Blob","onerror","_debug","onmessage","stop","start","forceNew","alertWorker","postMessage","attachEventListener","fetch","headers","urgent","Active","fn","useCapture","attachStartCallback","attachStopCallback","reqVer","ver","Number","isNaN","userUUID","getItem","trackerVersion","isSnippet","getInfo","getStartInfo","token","hostname","_a","_b","baseURI","head","getElementsByTagName","resourceURL","base","flag","removeItem","startOpts","Promise","resolve","Starting","pageNoStr","parseInt","startInfo","startWorkerMsg","connAttemptCount","connAttemptGap","update","sReset","reset","then","json","text","reject","beaconSizeLimit","onStartInfo","onStart","catch","onVisibilityChange","_start","calledFromAPI","restarting","viewport","sendSetPageLocation","sendSetViewportSize","innerWidth","innerHeight","sendSetPageVisibility","Function","cssrules","CSSStyleSheet","processOperation","stylesheet","ownerNode","nodeID","sendMessage","insertRule","deleteRule","call","sheet","textContent","rules","cssRules","cssText","connection","mozConnection","webkitConnection","sendConnectionInformation","modules_console","opts","consoleThrottling","sendConsoleLog","floor","patchConsole","exception","captureExceptions","handler","img","sendImgSrc","src","complete","naturalWidth","naturalHeight","srcset","resolvedSrc","isMasked","sendPlaceholder","getBoundingClientRect","resolvedSrcset","attachElementListener","attributeFilter","input","obscureInputNumbers","obscureInputEmails","defaultInputMode","obscureInputDates","sendInputValue","inputMode","test","inputValues","checkableValues","registeredTargets","sendInputTarget","mouse","mousePositionX","mousePositionY","mousePositionChanged","mouseTarget","mouseTargetTime","sendMouseMove","selectorMap","clientX","clientY","getTargetLabel","dl","HTMLElement","getInnerTextSecure","_getSelector","cn","reduce","sel","toLowerCase","captureResourceTimings","capturePageLoadTimings","capturePageRenderTimings","resources","resourceTiming","entry","isServiceURL","startTime","transferSize","initiatorType","PerformanceObserver","list","getEntries","prevSessionID","getEntriesByType","entryTypes","pageLoadTimingSent","interactiveWindowStartTime","interactiveWindowTickTime","paintBlocks","pageRenderTimingSent","time","max","keys","getPaintBlocks","elements","styleURL","currentSrc","backgroundImage","getComputedStyle","getPropertyValue","rect","top","left","bottom","min","right","area","calculateSpeedIndex","a","modules_performance","capturePerformance","nextFrame","requestAnimationFrame","sendPerformanceTrack","modules_scroll","documentScroll","nodeScroll","sendSetViewportScroll","pageXOffset","scrollLeft","pageYOffset","scrollTop","sendSetNodeScroll","autoResetOnWindowOpen","wOpen","open","resetNextPageSession","req","XMLHttpRequest","orig","active","getSessionToken","getSessionID","setUserID","setUserAnonymousID","setMetadata","issue","rnds8","Uint8Array","rng","crypto","msCrypto","regex","byteToHex","esm_browser_stringify","arr","uuid","offset","TypeError","userId","esm_browser_v4","buf","rnds","random","newTracker","tracker","trackerAssist","default","use","callConfirm","confirmBtn","innerHTML","declineBtn","controlConfirm","reducer","ref","_payload","event","ref1","_payload1","name1","data1","ref2","_config","useReducer","dispatch","Provider","evnt","_isNumber","parseFloat","isFinite","_capitalize","charAt","substring","_getter","booleanProps","numericProps","stringProps","props","concat","getArgs","setArgs","getEvalOrigin","evalOrigin","setEvalOrigin","getFileName","getLineNumber","getColumnNumber","getFunctionName","getIsEval","fromString","argsStartIndex","argsEndIndex","lastIndexOf","locationString","Boolean","j","__unused_webpack___webpack_module__","_defineProperty","defineProperty","enumerable","configurable","writable","_objectSpread","ownKeys","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","_objectSpreadProps","getOwnPropertyDescriptors","defineProperties","object","enumerableOnly","symbols","__webpack_exec__","moduleId","O","_N_E"],"sourceRoot":""}