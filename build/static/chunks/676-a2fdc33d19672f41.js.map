{"version":3,"file":"static/chunks/676-a2fdc33d19672f41.js","mappings":"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","sources":["webpack://_N_E/./node_modules/.pnpm/@sentry+utils@7.12.1/node_modules/@sentry/utils/esm/misc.js","webpack://_N_E/./node_modules/.pnpm/@sentry+utils@7.12.1/node_modules/@sentry/utils/esm/logger.js","webpack://_N_E/./node_modules/.pnpm/@sentry+utils@7.12.1/node_modules/@sentry/utils/esm/syncpromise.js","webpack://_N_E/./node_modules/.pnpm/@sentry+utils@7.12.1/node_modules/@sentry/utils/esm/is.js","webpack://_N_E/./node_modules/.pnpm/@sentry+utils@7.12.1/node_modules/@sentry/utils/esm/browser.js","webpack://_N_E/./node_modules/.pnpm/@sentry+utils@7.12.1/node_modules/@sentry/utils/esm/object.js","webpack://_N_E/./node_modules/.pnpm/@sentry+hub@7.12.1/node_modules/@sentry/hub/esm/session.js","webpack://_N_E/./node_modules/.pnpm/@sentry+hub@7.12.1/node_modules/@sentry/hub/esm/scope.js","webpack://_N_E/./node_modules/.pnpm/@sentry+hub@7.12.1/node_modules/@sentry/hub/esm/hub.js","webpack://_N_E/./node_modules/.pnpm/@sentry+utils@7.12.1/node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js","webpack://_N_E/./node_modules/.pnpm/@sentry+utils@7.12.1/node_modules/@sentry/utils/esm/stacktrace.js","webpack://_N_E/./node_modules/.pnpm/@sentry+utils@7.12.1/node_modules/@sentry/utils/esm/normalize.js","webpack://_N_E/./node_modules/.pnpm/@sentry+utils@7.12.1/node_modules/@sentry/utils/esm/memo.js","webpack://_N_E/./node_modules/.pnpm/@sentry+utils@7.12.1/node_modules/@sentry/utils/esm/requestdata.js","webpack://_N_E/./node_modules/.pnpm/@sentry+utils@7.12.1/node_modules/@sentry/utils/esm/url.js","webpack://_N_E/./node_modules/.pnpm/@sentry+nextjs@7.12.1_next@12.2.5+react@18.2.0/node_modules/@sentry/nextjs/esm/utils/_error.js","webpack://_N_E/./node_modules/.pnpm/@sentry+hub@7.12.1/node_modules/@sentry/hub/esm/exports.js","webpack://_N_E/./node_modules/.pnpm/@sentry+utils@7.12.1/node_modules/@sentry/utils/esm/global.js","webpack://_N_E/./node_modules/.pnpm/@sentry+utils@7.12.1/node_modules/@sentry/utils/esm/node.js","webpack://_N_E/./node_modules/.pnpm/@sentry+utils@7.12.1/node_modules/@sentry/utils/esm/env.js","webpack://_N_E/./node_modules/.pnpm/@sentry+utils@7.12.1/node_modules/@sentry/utils/esm/time.js","webpack://_N_E/./node_modules/.pnpm/next@12.2.5_biqbaboplfbrettd7655fr4n2y/node_modules/next/dist/build/polyfills/process.js","webpack://_N_E/./node_modules/.pnpm/next@12.2.5_biqbaboplfbrettd7655fr4n2y/node_modules/next/dist/compiled/process/browser.js","webpack://_N_E/./node_modules/.pnpm/next@12.2.5_biqbaboplfbrettd7655fr4n2y/node_modules/next/error.js","webpack://_N_E/./node_modules/.pnpm/@swc+helpers@0.4.3/node_modules/@swc/helpers/src/_async_to_generator.mjs"],"sourcesContent":["import { getGlobalObject } from './global.js';\nimport { addNonEnumerableProperty } from './object.js';\nimport { snipLine } from './string.js';\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  var global = getGlobalObject() ;\n  var crypto = (global.crypto || global.msCrypto) ;\n\n  if (crypto && crypto.randomUUID) {\n    return crypto.randomUUID().replace(/-/g, '');\n  }\n\n  var getRandomByte =\n    crypto && crypto.getRandomValues ? () => crypto.getRandomValues(new Uint8Array(1))[0] : () => Math.random() * 16;\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n        ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  var firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  var exception = (event.exception = event.exception || {});\n  var values = (exception.values = exception.values || []);\n  var firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  var firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  var defaultMechanism = { type: 'generic', handled: true };\n  var currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    var mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nvar SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  var match = input.match(SEMVER_REGEXP) || [];\n  var major = parseInt(match[1], 10);\n  var minor = parseInt(match[2], 10);\n  var patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  var lineno = frame.lineno || 0;\n  var maxLines = lines.length;\n  var sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n    if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\nexport { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, arrayify, checkOrSetAlreadyCaught, getEventDescription, parseSemver, uuid4 };\n//# sourceMappingURL=misc.js.map\n","import { getGlobalObject, getGlobalSingleton } from './global.js';\n\n// TODO: Implement different loggers for different environments\nvar global = getGlobalObject();\n\n/** Prefix for logging strings */\nvar PREFIX = 'Sentry Logger ';\n\nvar CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] ;\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  var global = getGlobalObject();\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  var originalConsole = global.console ;\n  var wrappedLevels = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    var originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] ).__sentry_original__;\n    if (level in global.console && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] ;\n      originalConsole[level] = originalWrappedFunc ;\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level ];\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  var logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    CONSOLE_LEVELS.forEach(name => {\n            logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            global.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger;\nif ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n  logger = getGlobalSingleton('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\nexport { CONSOLE_LEVELS, consoleSandbox, logger };\n//# sourceMappingURL=logger.js.map\n","import { isThenable } from './is.js';\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  var PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  var RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  var REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n   __init() {this._state = States.PENDING;}\n   __init2() {this._handlers = [];}\n  \n\n   constructor(\n    executor,\n  ) {;SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);SyncPromise.prototype.__init5.call(this);SyncPromise.prototype.__init6.call(this);\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init3() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init4() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init5() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init6() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    var cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n                handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };\n//# sourceMappingURL=syncpromise.js.map\n","var objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n    return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isNaN, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable };\n//# sourceMappingURL=is.js.map\n","import { getGlobalObject } from './global.js';\nimport { isString } from './is.js';\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(elem, keyAttrs) {\n  \n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    var MAX_TRAVERSE_HEIGHT = 5;\n    var MAX_OUTPUT_LEN = 80;\n    var out = [];\n    let height = 0;\n    let len = 0;\n    var separator = ' > ';\n    var sepLength = separator.length;\n    let nextStr;\n\n        while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  var elem = el \n\n;\n\n  var out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  var keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n        className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  var allowedAttrs = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  var global = getGlobalObject();\n  try {\n    return global.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `var element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\nfunction getDomElement(selector) {\n  var global = getGlobalObject();\n  if (global.document && global.document.querySelector) {\n    return global.document.querySelector(selector) ;\n  }\n  return null;\n}\n\nexport { getDomElement, getLocationHref, htmlTreeAsString };\n//# sourceMappingURL=browser.js.map\n","import { htmlTreeAsString } from './browser.js';\nimport { isError, isEvent, isInstanceOf, isElement, isPlainObject, isPrimitive } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  var original = source[name] ;\n  var wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n    value: value,\n    writable: true,\n    configurable: true,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  var proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(\n  value,\n)\n\n {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    var newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    var extractedProps = {};\n    for (var property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  var keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    var serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  var memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPlainObject(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    var memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    var returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (var key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    var memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    var returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n            objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexport { addNonEnumerableProperty, convertToPlainObject, dropUndefinedKeys, extractExceptionKeysForMessage, fill, getOriginalFunction, markFunctionWrapped, objectify, urlEncode };\n//# sourceMappingURL=object.js.map\n","import { timestampInSeconds, uuid4, dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  var startingTime = timestampInSeconds();\n\n  var session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    var duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\nexport { closeSession, makeSession, updateSession };\n//# sourceMappingURL=session.js.map\n","import { isPlainObject, dateTimestampInSeconds, getGlobalSingleton, SyncPromise, logger, isThenable, arrayify } from '@sentry/utils';\nimport { updateSession } from './session.js';\n\n/**\n * Absolute maximum number of breadcrumbs added to an event.\n * The `maxBreadcrumbs` option cannot be higher than this value.\n */\nvar MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {\n  /** Flag if notifying is happening. */\n  \n\n  /** Callback for client to receive scope changes. */\n  \n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  \n\n  /** Array of breadcrumbs. */\n  \n\n  /** User */\n  \n\n  /** Tags */\n  \n\n  /** Extra */\n  \n\n  /** Contexts */\n  \n\n  /** Attachments */\n  \n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n  \n\n  /** Fingerprint */\n  \n\n  /** Severity */\n    \n\n  /** Transaction Name */\n  \n\n  /** Span */\n  \n\n  /** Session */\n  \n\n  /** Request Mode Session Status */\n  \n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n   static clone(scope) {\n    var newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n      newScope._attachments = [...scope._attachments];\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this._user = user || {};\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n        level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n            delete this._contexts[key];\n    } else {\n      this._contexts = { ...this._contexts, [key]: context };\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    var span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      var updatedScope = (captureContext )(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n    } else if (isPlainObject(captureContext)) {\n            captureContext = captureContext ;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    var maxCrumbs = typeof maxBreadcrumbs === 'number' ? Math.min(maxBreadcrumbs, MAX_BREADCRUMBS) : MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    var mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n    this._breadcrumbs = [...this._breadcrumbs, mergedBreadcrumb].slice(-maxCrumbs);\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getAttachments() {\n    return this._attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   */\n   applyToEvent(event, hint = {}) {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      var transactionName = this._span.transaction && this._span.transaction.name;\n      if (transactionName) {\n        event.tags = { transaction: transactionName, ...event.tags };\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = { ...event.sdkProcessingMetadata, ...this._sdkProcessingMetadata };\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n   _notifyEventProcessors(\n    processors,\n    event,\n    hint,\n    index = 0,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      var processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        var result = processor({ ...event }, hint) ;\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          processor.id &&\n          result === null &&\n          logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n        if (isThenable(result)) {\n          void result\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          void this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n   _applyFingerprint(event) {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n  return getGlobalSingleton('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nfunction addGlobalEventProcessor(callback) {\n  getGlobalEventProcessors().push(callback);\n}\n\nexport { Scope, addGlobalEventProcessor };\n//# sourceMappingURL=scope.js.map\n","import { uuid4, dateTimestampInSeconds, consoleSandbox, logger, getGlobalObject, getGlobalSingleton, isNodeEnv } from '@sentry/utils';\nimport { Scope } from './scope.js';\nimport { closeSession, makeSession, updateSession } from './session.js';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nvar API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 100;\n\n/**\n * A layer in the process stack.\n * @hidden\n */\n\n/**\n * @inheritDoc\n */\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n    __init() {this._stack = [{}];}\n\n  /** Contains the last event id of a captured event.  */\n  \n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n   constructor(client, scope = new Scope(),   _version = API_VERSION) {;this._version = _version;Hub.prototype.__init.call(this);\n    this.getStackTop().scope = scope;\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   bindClient(client) {\n    var top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    var scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   popScope() {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   withScope(callback) {\n    var scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /** Returns the scope of the top stack. */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n   getStack() {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n     captureException(exception, hint) {\n    var eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    var syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n        level,\n    hint,\n  ) {\n    var eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    var syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    var eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (event.type !== 'transaction') {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    const { scope, client } = this.getStackTop();\n\n    if (!scope || !client) return;\n\n        const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    var timestamp = dateTimestampInSeconds();\n    var mergedBreadcrumb = { timestamp, ...breadcrumb };\n    var finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    var scope = this.getScope();\n    if (scope) scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    var scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    var scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    var scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    var scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n     setContext(name, context) {\n    var scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   configureScope(callback) {\n    const { scope, client } = this.getStackTop();\n    if (scope && client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   run(callback) {\n    var oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    var client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startTransaction(context, customSamplingContext) {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   endSession() {\n    var layer = this.getStackTop();\n    var scope = layer && layer.scope;\n    var session = scope && scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    if (scope) {\n      scope.setSession();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startSession(context) {\n    const { scope, client } = this.getStackTop();\n    const { release, environment } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    var global = getGlobalObject();\n    const { userAgent } = global.navigator || {};\n\n    var session = makeSession({\n      release,\n      environment,\n      ...(scope && { user: scope.getUser() }),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    if (scope) {\n      // End existing session if there's one\n      var currentSession = scope.getSession && scope.getSession();\n      if (currentSession && currentSession.status === 'ok') {\n        updateSession(currentSession, { status: 'exited' });\n      }\n      this.endSession();\n\n      // Afterwards we set the new session on the scope\n      scope.setSession(session);\n    }\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   */\n   shouldSendDefaultPii() {\n    var client = this.getClient();\n    var options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    const { scope, client } = this.getStackTop();\n    if (!scope) return;\n\n    var session = scope.getSession();\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n   _withClient(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n     _callExtensionMethod(method, ...args) {\n    var carrier = getMainCarrier();\n    var sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  var carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nfunction makeMain(hub) {\n  var registry = getMainCarrier();\n  var oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  var registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry) {\n  try {\n    var sentry = getMainCarrier().__SENTRY__;\n    var activeDomain = sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nfunction getHubFromCarrier(carrier) {\n  return getGlobalSingleton('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  var __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\nexport { API_VERSION, Hub, getCurrentHub, getHubFromCarrier, getMainCarrier, makeMain, setHubOnCarrier };\n//# sourceMappingURL=hub.js.map\n","/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    var op = ops[i] ;\n    var fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     var op = ops[i];\n//     var fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\nexport { _optionalChain };\n//# sourceMappingURL=_optionalChain.js.map\n","import { _optionalChain } from './buildPolyfills';\n\nvar STACKTRACE_LIMIT = 50;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  var sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirst = 0) => {\n    var frames = [];\n\n    for (var line of stack.split('\\n').slice(skipFirst)) {\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      var cleanedLine = line.replace(/\\(error: (.*)\\)/, '$1');\n\n      for (var parser of sortedParsers) {\n        var frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  var firstFrameFunction = localStack[0].function || '';\n  var lastFrameFunction = localStack[localStack.length - 1].function || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .slice(0, STACKTRACE_LIMIT)\n    .map(frame => ({\n      ...frame,\n      filename: frame.filename || localStack[0].filename,\n      function: frame.function || '?',\n    }))\n    .reverse();\n}\n\nvar defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\nfunction node(getModule) {\n  var FILENAME_MATCH = /^\\s*[-]{4,}$/;\n  var FULL_MATCH = /at (?:async )?(?:(.+?)\\s+\\()?(?:(.+):(\\d+):(\\d+)?|([^)]+))\\)?/;\n\n    return (line) => {\n    if (line.match(FILENAME_MATCH)) {\n      return {\n        filename: line,\n      };\n    }\n\n    var lineMatch = line.match(FULL_MATCH);\n    if (!lineMatch) {\n      return undefined;\n    }\n\n    let object;\n    let method;\n    let functionName;\n    let typeName;\n    let methodName;\n\n    if (lineMatch[1]) {\n      functionName = lineMatch[1];\n\n      let methodStart = functionName.lastIndexOf('.');\n      if (functionName[methodStart - 1] === '.') {\n                methodStart--;\n      }\n\n      if (methodStart > 0) {\n        object = functionName.substr(0, methodStart);\n        method = functionName.substr(methodStart + 1);\n        var objectEnd = object.indexOf('.Module');\n        if (objectEnd > 0) {\n          functionName = functionName.substr(objectEnd + 1);\n          object = object.substr(0, objectEnd);\n        }\n      }\n      typeName = undefined;\n    }\n\n    if (method) {\n      typeName = object;\n      methodName = method;\n    }\n\n    if (method === '<anonymous>') {\n      methodName = undefined;\n      functionName = undefined;\n    }\n\n    if (functionName === undefined) {\n      methodName = methodName || '<anonymous>';\n      functionName = typeName ? `${typeName}.${methodName}` : methodName;\n    }\n\n    var filename = _optionalChain([lineMatch, 'access', _ => _[2], 'optionalAccess', _2 => _2.startsWith, 'call', _3 => _3('file://')]) ? lineMatch[2].substr(7) : lineMatch[2];\n    var isNative = lineMatch[5] === 'native';\n    var isInternal =\n      isNative || (filename && !filename.startsWith('/') && !filename.startsWith('.') && filename.indexOf(':\\\\') !== 1);\n\n    // in_app is all that's not an internal Node function or a module within node_modules\n    // note that isNative appears to return true even for node core libraries\n    // see https://github.com/getsentry/raven-node/issues/176\n    var in_app = !isInternal && filename !== undefined && !filename.includes('node_modules/');\n\n    return {\n      filename,\n      module: _optionalChain([getModule, 'optionalCall', _4 => _4(filename)]),\n      function: functionName,\n      lineno: parseInt(lineMatch[3], 10) || undefined,\n      colno: parseInt(lineMatch[4], 10) || undefined,\n      in_app,\n    };\n  };\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nfunction nodeStackLineParser(getModule) {\n  return [90, node(getModule)];\n}\n\nexport { createStackParser, getFunctionName, nodeStackLineParser, stackParserFromStackParserOptions, stripSentryFramesAndReverse };\n//# sourceMappingURL=stacktrace.js.map\n","import { isNaN, isSyntheticEvent } from './is.js';\nimport { memoBuilder } from './memo.js';\nimport { convertToPlainObject } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\nfunction normalize(input, depth = +Infinity, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n    object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  var normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo = memoBuilder(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (value === null || (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))) {\n    return value ;\n  }\n\n  var stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We're also done if we've reached the max depth\n  if (depth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  var valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      var jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, depth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  var normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  var visitable = convertToPlainObject(value );\n\n  for (var visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    var visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, depth - 1, maxProperties, memo);\n\n    numAdded += 1;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n        if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n        if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    // this catches `undefined` (but not `null`, which is a primitive and can be serialized on its own)\n    if (value === void 0) {\n      return '[undefined]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    return `[object ${(Object.getPrototypeOf(value) ).constructor.name}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n    return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\nexport { normalize, normalizeToSize, visit as walk };\n//# sourceMappingURL=normalize.js.map\n","/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  var hasWeakSet = typeof WeakSet === 'function';\n  var inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n        for (let i = 0; i < inner.length; i++) {\n      var value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\nexport { memoBuilder };\n//# sourceMappingURL=memo.js.map\n","import { _optionalChain } from './buildPolyfills';\nimport { isString, isPlainObject } from './is.js';\nimport { normalize } from './normalize.js';\nimport { stripUrlQueryAndFragment } from './url.js';\n\nvar DEFAULT_INCLUDES = {\n  ip: false,\n  request: true,\n  transaction: true,\n  user: true,\n};\nvar DEFAULT_REQUEST_INCLUDES = ['cookies', 'data', 'headers', 'method', 'query_string', 'url'];\nvar DEFAULT_USER_INCLUDES = ['id', 'username', 'email'];\n\n/**\n * Sets parameterized route as transaction name e.g.: `GET /users/:id`\n * Also adds more context data on the transaction from the request\n */\nfunction addRequestDataToTransaction(\n  transaction,\n  req,\n  deps,\n) {\n  if (!transaction) return;\n  if (!transaction.metadata.source || transaction.metadata.source === 'url') {\n    // Attempt to grab a parameterized route off of the request\n    transaction.setName(...extractPathForTransaction(req, { path: true, method: true }));\n  }\n  transaction.setData('url', req.originalUrl || req.url);\n  if (req.baseUrl) {\n    transaction.setData('baseUrl', req.baseUrl);\n  }\n  transaction.setData('query', extractQueryParams(req, deps));\n}\n\n/**\n * Extracts a complete and parameterized path from the request object and uses it to construct transaction name.\n * If the parameterized transaction name cannot be extracted, we fall back to the raw URL.\n *\n * Additionally, this function determines and returns the transaction name source\n *\n * eg. GET /mountpoint/user/:id\n *\n * @param req A request object\n * @param options What to include in the transaction name (method, path, or a custom route name to be\n *                used instead of the request's route)\n *\n * @returns A tuple of the fully constructed transaction name [0] and its source [1] (can be either 'route' or 'url')\n */\nfunction extractPathForTransaction(\n  req,\n  options = {},\n) {\n  var method = req.method && req.method.toUpperCase();\n\n  let path = '';\n  let source = 'url';\n\n  // Check to see if there's a parameterized route we can use (as there is in Express)\n  if (options.customRoute || req.route) {\n    path = options.customRoute || `${req.baseUrl || ''}${req.route && req.route.path}`;\n    source = 'route';\n  }\n\n  // Otherwise, just take the original URL\n  else if (req.originalUrl || req.url) {\n    path = stripUrlQueryAndFragment(req.originalUrl || req.url || '');\n  }\n\n  let name = '';\n  if (options.method && method) {\n    name += method;\n  }\n  if (options.method && options.path) {\n    name += ' ';\n  }\n  if (options.path && path) {\n    name += path;\n  }\n\n  return [name, source];\n}\n\n/** JSDoc */\nfunction extractTransaction(req, type) {\n  switch (type) {\n    case 'path': {\n      return extractPathForTransaction(req, { path: true })[0];\n    }\n    case 'handler': {\n      return (req.route && req.route.stack && req.route.stack[0] && req.route.stack[0].name) || '<anonymous>';\n    }\n    case 'methodPath':\n    default: {\n      return extractPathForTransaction(req, { path: true, method: true })[0];\n    }\n  }\n}\n\n/** JSDoc */\nfunction extractUserData(\n  user\n\n,\n  keys,\n) {\n  var extractedUser = {};\n  var attributes = Array.isArray(keys) ? keys : DEFAULT_USER_INCLUDES;\n\n  attributes.forEach(key => {\n    if (user && key in user) {\n      extractedUser[key] = user[key];\n    }\n  });\n\n  return extractedUser;\n}\n\n/**\n * Normalize data from the request object, accounting for framework differences.\n *\n * @param req The request object from which to extract data\n * @param options.include An optional array of keys to include in the normalized data. Defaults to\n * DEFAULT_REQUEST_INCLUDES if not provided.\n * @param options.deps Injected, platform-specific dependencies\n * @returns An object containing normalized request data\n */\nfunction extractRequestData(\n  req,\n  options\n\n,\n) {\n  const { include = DEFAULT_REQUEST_INCLUDES, deps } = options || {};\n  var requestData = {};\n\n  // headers:\n  //   node, express, koa, nextjs: req.headers\n  var headers = (req.headers || {}) \n\n;\n  // method:\n  //   node, express, koa, nextjs: req.method\n  var method = req.method;\n  // host:\n  //   express: req.hostname in > 4 and req.host in < 4\n  //   koa: req.host\n  //   node, nextjs: req.headers.host\n  var host = req.hostname || req.host || headers.host || '<no host>';\n  // protocol:\n  //   node, nextjs: <n/a>\n  //   express, koa: req.protocol\n  var protocol = req.protocol === 'https' || (req.socket && req.socket.encrypted) ? 'https' : 'http';\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  var originalUrl = req.originalUrl || req.url || '';\n  // absolute url\n  var absoluteUrl = `${protocol}://${host}${originalUrl}`;\n  include.forEach(key => {\n    switch (key) {\n      case 'headers': {\n        requestData.headers = headers;\n        break;\n      }\n      case 'method': {\n        requestData.method = method;\n        break;\n      }\n      case 'url': {\n        requestData.url = absoluteUrl;\n        break;\n      }\n      case 'cookies': {\n        // cookies:\n        //   node, express, koa: req.headers.cookie\n        //   vercel, sails.js, express (w/ cookie middleware), nextjs: req.cookies\n                requestData.cookies =\n          // TODO (v8 / #5257): We're only sending the empty object for backwards compatibility, so the last bit can\n          // come off in v8\n          req.cookies || (headers.cookie && deps && deps.cookie && deps.cookie.parse(headers.cookie)) || {};\n        break;\n      }\n      case 'query_string': {\n        // query string:\n        //   node: req.url (raw)\n        //   express, koa, nextjs: req.query\n                requestData.query_string = extractQueryParams(req, deps);\n        break;\n      }\n      case 'data': {\n        if (method === 'GET' || method === 'HEAD') {\n          break;\n        }\n        // body data:\n        //   express, koa, nextjs: req.body\n        //\n        //   when using node by itself, you have to read the incoming stream(see\n        //   https://nodejs.dev/learn/get-http-request-body-data-using-nodejs); if a user is doing that, we can't know\n        //   where they're going to store the final result, so they'll have to capture this data themselves\n        if (req.body !== undefined) {\n          requestData.data = isString(req.body) ? req.body : JSON.stringify(normalize(req.body));\n        }\n        break;\n      }\n      default: {\n        if ({}.hasOwnProperty.call(req, key)) {\n          requestData[key] = (req )[key];\n        }\n      }\n    }\n  });\n\n  return requestData;\n}\n\n/**\n * Options deciding what parts of the request to use when enhancing an event\n */\n\n/**\n * Add data from the given request to the given event\n *\n * @param event The event to which the request data will be added\n * @param req Request object\n * @param options.include Flags to control what data is included\n * @param options.deps Injected platform-specific dependencies\n * @hidden\n */\nfunction addRequestDataToEvent(\n  event,\n  req,\n  options,\n) {\n  var include = {\n    ...DEFAULT_INCLUDES,\n    ..._optionalChain([options, 'optionalAccess', _ => _.include]),\n  };\n\n  if (include.request) {\n    var extractedRequestData = Array.isArray(include.request)\n      ? extractRequestData(req, { include: include.request, deps: _optionalChain([options, 'optionalAccess', _2 => _2.deps]) })\n      : extractRequestData(req, { deps: _optionalChain([options, 'optionalAccess', _3 => _3.deps]) });\n\n    event.request = {\n      ...event.request,\n      ...extractedRequestData,\n    };\n  }\n\n  if (include.user) {\n    var extractedUser = req.user && isPlainObject(req.user) ? extractUserData(req.user, include.user) : {};\n\n    if (Object.keys(extractedUser).length) {\n      event.user = {\n        ...event.user,\n        ...extractedUser,\n      };\n    }\n  }\n\n  // client ip:\n  //   node, nextjs: req.socket.remoteAddress\n  //   express, koa: req.ip\n  if (include.ip) {\n    var ip = req.ip || (req.socket && req.socket.remoteAddress);\n    if (ip) {\n      event.user = {\n        ...event.user,\n        ip_address: ip,\n      };\n    }\n  }\n\n  if (include.transaction && !event.transaction) {\n    // TODO do we even need this anymore?\n    // TODO make this work for nextjs\n    event.transaction = extractTransaction(req, include.transaction);\n  }\n\n  return event;\n}\n\nfunction extractQueryParams(\n  req,\n  deps,\n) {\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  let originalUrl = req.originalUrl || req.url || '';\n\n  if (!originalUrl) {\n    return;\n  }\n\n  // The `URL` constructor can't handle internal URLs of the form `/some/path/here`, so stick a dummy protocol and\n  // hostname on the beginning. Since the point here is just to grab the query string, it doesn't matter what we use.\n  if (originalUrl.startsWith('/')) {\n    originalUrl = `http://dogs.are.great${originalUrl}`;\n  }\n\n  return (\n    req.query ||\n    (typeof URL !== undefined && new URL(originalUrl).search.replace('?', '')) ||\n    // In Node 8, `URL` isn't in the global scope, so we have to use the built-in module from Node\n    (deps && deps.url && deps.url.parse(originalUrl).query) ||\n    undefined\n  );\n}\n\nexport { addRequestDataToEvent, addRequestDataToTransaction, extractPathForTransaction, extractRequestData };\n//# sourceMappingURL=requestdata.js.map\n","/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url)\n\n {\n  if (!url) {\n    return {};\n  }\n\n  var match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  var query = match[6] || '';\n  var fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n    return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\nexport { getNumberOfUrlSegments, parseUrl, stripUrlQueryAndFragment };\n//# sourceMappingURL=url.js.map\n","import { withScope, captureException } from '@sentry/core';\nimport { getCurrentHub } from '@sentry/hub';\nimport { addExceptionMechanism, addRequestDataToEvent } from '@sentry/utils';\n\n/** Platform-agnostic version of `flush` */\nfunction flush(timeout) {\n  var client = getCurrentHub().getClient();\n  return client ? client.flush(timeout) : Promise.resolve(false);\n}\n\n/**\n * Capture the exception passed by nextjs to the `_error` page, adding context data as appropriate.\n *\n * @param contextOrProps The data passed to either `getInitialProps` or `render` by nextjs\n */\nasync function captureUnderscoreErrorException(contextOrProps) {\n  const { req, res, err } = contextOrProps;\n\n  // 404s (and other 400-y friends) can trigger `_error`, but we don't want to send them to Sentry\n  var statusCode = (res && res.statusCode) || contextOrProps.statusCode;\n  if (statusCode && statusCode < 500) {\n    return Promise.resolve();\n  }\n\n  // In previous versions of the suggested `_error.js` page in which this function is meant to be used, there was a\n  // workaround for https://github.com/vercel/next.js/issues/8592 which involved an extra call to this function, in the\n  // custom error component's `render` method, just in case it hadn't been called by `getInitialProps`. Now that that\n  // issue has been fixed, the second call is unnecessary, but since it lives in user code rather than our code, users\n  // have to be the ones to get rid of it, and guaraneteedly, not all of them will. So, rather than capture the error\n  // twice, we just bail if we sense we're in that now-extraneous second call. (We can tell which function we're in\n  // because Nextjs passes `pathname` to `getInitialProps` but not to `render`.)\n  if (!contextOrProps.pathname) {\n    return Promise.resolve();\n  }\n\n  withScope(scope => {\n    scope.addEventProcessor(event => {\n      addExceptionMechanism(event, {\n        type: 'instrument',\n        handled: true,\n        data: {\n          function: '_error.getInitialProps',\n        },\n      });\n      return event;\n    });\n\n    if (req) {\n      scope.addEventProcessor(event => addRequestDataToEvent(event, req));\n    }\n\n    // If third-party libraries (or users themselves) throw something falsy, we want to capture it as a message (which\n    // is what passing a string to `captureException` will wind up doing)\n    captureException(err || `_error.js called with falsy error (${err})`);\n  });\n\n  // In case this is being run as part of a serverless function (as is the case with the server half of nextjs apps\n  // deployed to vercel), make sure the error gets sent to Sentry before the lambda exits.\n  await flush(2000);\n}\n\nexport { captureUnderscoreErrorException };\n//# sourceMappingURL=_error.js.map\n","import { getCurrentHub } from './hub.js';\n\n// Note: All functions in this file are typed with a return value of `ReturnType<Hub[HUB_FUNCTION]>`,\n// where HUB_FUNCTION is some method on the Hub class.\n//\n// This is done to make sure the top level SDK methods stay in sync with the hub methods.\n// Although every method here has an explicit return type, some of them (that map to void returns) do not\n// contain `return` keywords. This is done to save on bundle size, as `return` is not minifiable.\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @param captureContext Additional scope data to apply to exception event.\n * @returns The generated eventId.\n */\nfunction captureException(exception, captureContext) {\n  return getCurrentHub().captureException(exception, { captureContext });\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nfunction captureMessage(\n  message,\n    captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  var level = typeof captureContext === 'string' ? captureContext : undefined;\n  var context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nfunction captureEvent(event, hint) {\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nfunction configureScope(callback) {\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb) {\n  getCurrentHub().addBreadcrumb(breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\nfunction setContext(name, context) {\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nfunction withScope(callback) {\n  getCurrentHub().withScope(callback);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n) {\n  return getCurrentHub().startTransaction(\n    {\n      metadata: { source: 'custom' },\n      ...context,\n    },\n    customSamplingContext,\n  );\n}\n\nexport { addBreadcrumb, captureEvent, captureException, captureMessage, configureScope, setContext, setExtra, setExtras, setTag, setTags, setUser, startTransaction, withScope };\n//# sourceMappingURL=exports.js.map\n","import { isNodeEnv } from './node.js';\n\n/** Internal */\n\nvar fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nfunction getGlobalObject() {\n  return (\n    isNodeEnv()\n      ? global\n      : typeof window !== 'undefined'       ? window       : typeof self !== 'undefined'\n      ? self\n      : fallbackGlobalObject\n  ) ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `getGlobalObject`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  var global = (obj || getGlobalObject()) ;\n  var __SENTRY__ = (global.__SENTRY__ = global.__SENTRY__ || {});\n  var singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\nexport { getGlobalObject, getGlobalSingleton };\n//# sourceMappingURL=global.js.map\n","import { isBrowserBundle } from './env.js';\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\nfunction dynamicRequire(mod, request) {\n    return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\nexport { dynamicRequire, isNodeEnv, loadModule };\n//# sourceMappingURL=node.js.map\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These fags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\nexport { isBrowserBundle };\n//# sourceMappingURL=env.js.map\n","import { getGlobalObject } from './global.js';\nimport { dynamicRequire, isNodeEnv } from './node.js';\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nvar dateTimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n  const { performance } = getGlobalObject();\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  var timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n  try {\n    var perfHooks = dynamicRequire(module, 'perf_hooks') ;\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nvar platformPerformance = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nvar timestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nvar dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nvar timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nvar timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nvar usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nvar browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = getGlobalObject();\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  var threshold = 3600 * 1000;\n  var performanceNow = performance.now();\n  var dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  var timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  var timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n    var navigationStart = performance.timing && performance.timing.navigationStart;\n  var hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  var navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  var navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexport { _browserPerformanceTimeOriginMode, browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds, timestampWithMs, usingPerformanceAPI };\n//# sourceMappingURL=time.js.map\n","\"use strict\";\nvar ref, ref1;\nmodule.exports = ((ref = global.process) == null ? void 0 : ref.env) && typeof ((ref1 = global.process) == null ? void 0 : ref1.env) === \"object\" ? global.process : require(\"../../compiled/process\");\n\n//# sourceMappingURL=process.js.map","(function(){var e={308:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(308);module.exports=r})();","module.exports = require('./dist/pages/_error')\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n"],"names":["uuid4","global","crypto","msCrypto","randomUUID","replace","getRandomByte","getRandomValues","Uint8Array","Math","random","c","toString","getFirstException","event","exception","values","undefined","CONSOLE_LEVELS","consoleSandbox","callback","originalConsole","console","wrappedLevels","forEach","level","originalWrappedFunc","__sentry_original__","Object","keys","makeLogger","enabled","logger","enable","disable","__SENTRY_DEBUG__","name","args","States","objectToString","prototype","isBuiltin","wat","className","call","isString","isPlainObject","isThenable","Boolean","then","isInstanceOf","base","_e","SyncPromise","__init","this","_state","PENDING","__init2","_handlers","constructor","executor","__init3","__init4","__init5","__init6","_resolve","_reject","e","onfulfilled","onrejected","resolve","reject","push","result","reason","_executeHandlers","catch","val","finally","onfinally","isRejected","value","_setResult","RESOLVED","REJECTED","state","_value","cachedHandlers","slice","handler","_htmlElementAsString","el","keyAttrs","elem","out","classes","key","attr","i","tagName","toLowerCase","keyAttrPairs","length","filter","keyAttr","getAttribute","map","keyAttrPair","id","split","allowedAttrs","join","convertToPlainObject","Error","isError","message","stack","getOwnProperties","Event","newObj","type","target","serializeEventTarget","currentTarget","CustomEvent","detail","Element","currentElem","height","len","sepLength","nextStr","parentNode","reverse","_oO","htmlTreeAsString","obj","extractedProps","property","hasOwnProperty","dropUndefinedKeys","inputValue","_dropUndefinedKeys","Map","memoizationMap","memoVal","get","returnValue","set","Array","isArray","item","makeSession","context","startingTime","time","session","sid","init","timestamp","started","duration","status","errors","ignoreDuration","toJSON","Date","toISOString","did","attrs","release","environment","ip_address","ipAddress","user_agent","userAgent","sessionToJSON","updateSession","user","email","username","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_attachments","_user","_tags","_extra","_contexts","_sdkProcessingMetadata","static","scope","newScope","_level","_span","_session","_transactionName","_fingerprint","_requestSession","addScopeListener","addEventProcessor","setUser","_notifyScopeListeners","getUser","getRequestSession","setRequestSession","requestSession","setTags","tags","setTag","setExtras","extras","setExtra","extra","setFingerprint","fingerprint","setLevel","setTransactionName","setContext","setSpan","span","getSpan","getTransaction","transaction","setSession","getSession","update","captureContext","updatedScope","contexts","clear","addBreadcrumb","breadcrumb","maxBreadcrumbs","maxCrumbs","min","mergedBreadcrumb","clearBreadcrumbs","addAttachment","attachment","getAttachments","clearAttachments","applyToEvent","hint","trace","getTraceContext","transactionName","_applyFingerprint","breadcrumbs","sdkProcessingMetadata","_notifyEventProcessors","getGlobalEventProcessors","setSDKProcessingMetadata","newData","processors","index","processor","log","final","maybeArray","concat","DEFAULT_BREADCRUMBS","Hub","_stack","client","_version","getStackTop","bindClient","isOlderThan","version","setupIntegrations","pushScope","clone","getScope","getStack","getClient","popScope","pop","withScope","captureException","eventId","_lastEventId","event_id","syntheticException","_withClient","originalException","captureMessage","captureEvent","lastEventId","beforeBreadcrumb","getOptions","finalBreadcrumb","configureScope","run","oldHub","makeMain","getIntegration","integration","warn","startTransaction","customSamplingContext","_callExtensionMethod","traceHeaders","captureSession","endSession","_sendSessionUpdate","layer","closeSession","startSession","navigator","currentSession","shouldSendDefaultPii","options","sendDefaultPii","method","sentry","getMainCarrier","__SENTRY__","extensions","apply","carrier","hub","registry","getHubFromCarrier","setHubOnCarrier","hasHubOnCarrier","activeDomain","domain","active","registryHubTopStack","_Oo","getHubFromActiveDomain","ops","lastAccessLHS","op","fn","defaultFunctionName","normalize","input","depth","Infinity","maxProperties","visit","err","ERROR","memo","hasWeakSet","WeakSet","inner","has","add","delete","splice","memoBuilder","memoize","unmemoize","includes","stringified","_events","g","window","document","isSyntheticEvent","getFunctionName","String","getPrototypeOf","stringifyValue","startsWith","valueWithToJSON","normalized","numAdded","visitable","visitKey","visitValue","DEFAULT_INCLUDES","ip","request","DEFAULT_REQUEST_INCLUDES","DEFAULT_USER_INCLUDES","extractPathForTransaction","req","toUpperCase","path","source","customRoute","route","baseUrl","originalUrl","url","extractRequestData","include","deps","requestData","headers","host","hostname","absoluteUrl","protocol","socket","encrypted","cookies","cookie","parse","query_string","extractQueryParams","body","data","JSON","stringify","addRequestDataToEvent","_","extractedRequestData","_2","_3","extractedUser","extractUserData","remoteAddress","extractTransaction","query","URL","search","async","captureUnderscoreErrorException","contextOrProps","res","statusCode","Promise","pathname","newMechanism","firstException","currentMechanism","mechanism","handled","mergedData","addExceptionMechanism","function","timeout","flush","fallbackGlobalObject","getGlobalObject","self","getGlobalSingleton","creator","isNodeEnv","__SENTRY_BROWSER_BUNDLE__","process","dynamicRequire","mod","require","dateTimestampSource","nowSeconds","now","platformPerformance","module","performance","getNodePerformance","timeOrigin","getBrowserPerformance","timestampSource","dateTimestampInSeconds","bind","timestampInSeconds","_browserPerformanceTimeOriginMode","threshold","performanceNow","dateNow","timeOriginDelta","abs","timeOriginIsReliable","navigationStart","timing","navigationStartDelta","ref","ref1","exports","env","r","n","t","defaultSetTimout","defaultClearTimeout","runTimeout","setTimeout","clearTimeout","u","o","a","cleanUpNextTick","drainQueue","runClearTimeout","Item","fun","array","noop","nextTick","arguments","title","browser","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","__nccwpck_require__","ab","__dirname","asyncGeneratorStep","gen","_next","_throw","arg","info","error","done","_asyncToGenerator"],"sourceRoot":""}